[{"/home/archana/Desktop/jan_warehouse/src/reportWebVitals.ts":"1","/home/archana/Desktop/jan_warehouse/src/templates/login/index.tsx":"2","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/account-analysis/index.tsx":"3","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/create-amend-accounts/index.tsx":"4","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/summaries/sales-orders/index.tsx":"5","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/customer-enquiries/index.tsx":"6","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/account-analysis/account-details/index.tsx":"7","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/account-analysis/ec-sales-list/index.tsx":"8","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/enter-transactions/sales-receipt/index.tsx":"9","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/create-amend-accounts/create-customer/index.tsx":"10","/home/archana/Desktop/jan_warehouse/src/components/navWrapper/index.tsx":"11","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/create-amend-accounts/create-customer/panels/trading.tsx":"12","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/create-amend-accounts/create-customer/panels/documents.tsx":"13","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/create-amend-accounts/create-customer/panels/pricing.tsx":"14","/home/archana/Desktop/jan_warehouse/src/components/tabpanel/index.tsx":"15","/home/archana/Desktop/jan_warehouse/src/components/bottom-navigation/index.tsx":"16","/home/archana/Desktop/jan_warehouse/src/dashboardLayout/index.tsx":"17","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/summaries/sales/index.tsx":"18","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/summaries/stock-control/index.tsx":"19","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/enter-transactions/index.tsx":"20","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/enter-transactions/sales-payment/index.tsx":"21","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/customer-enquiries/transaction-enquiry/index.tsx":"22","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/create-amend-accounts/create-customer/panels/memo.tsx":"23","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/create-amend-accounts/create-customer/panels/attachments.tsx":"24","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/create-amend-accounts/create-customer/panels/payment.tsx":"25","/home/archana/Desktop/jan_warehouse/src/components/navItem/index.tsx":"26","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/index.tsx":"27","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/bank-account/transactions/index.tsx":"28","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/summaries/purchases/index.tsx":"29","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/account-analysis/trading-report-summary/index.tsx":"30","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/create-amend-accounts/customer-delivery-addresses/index.tsx":"31","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/enter-transactions/sales-credit-note/index.tsx":"32","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/create-amend-accounts/create-customer/panels/alerts.tsx":"33","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/create-amend-accounts/create-customer/panels/credit.tsx":"34","/home/archana/Desktop/jan_warehouse/src/utils/history.tsx":"35","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/summaries/index.tsx":"36","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/summaries/financials/index.tsx":"37","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/account-analysis/day-book/index.tsx":"38","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/enter-transactions/sales-invoice/index.tsx":"39","/home/archana/Desktop/jan_warehouse/src/index.tsx":"40","/home/archana/Desktop/jan_warehouse/src/components/copyright-footer/index.tsx":"41","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/account-analysis/txn-listing-current/index.tsx":"42","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/create-amend-accounts/create-customer/panels/contacts.tsx":"43","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/dashboard.tsx":"44","/home/archana/Desktop/jan_warehouse/src/components/sideNav/index.tsx":"45","/home/archana/Desktop/jan_warehouse/src/components/navWrapper/navItems.tsx":"46","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/create-amend-accounts/create-customer/panels/modals/add-contacts.tsx":"47","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/index.tsx":"48","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/account-analysis/list-of-accounts/index.tsx":"49"},{"size":425,"mtime":1610447305735,"results":"50","hashOfConfig":"51"},{"size":4237,"mtime":1610447305739,"results":"52","hashOfConfig":"51"},{"size":974,"mtime":1610447305735,"results":"53","hashOfConfig":"51"},{"size":499,"mtime":1610447305739,"results":"54","hashOfConfig":"51"},{"size":238,"mtime":1610447305739,"results":"55","hashOfConfig":"51"},{"size":342,"mtime":1610447305739,"results":"56","hashOfConfig":"51"},{"size":156,"mtime":1610447305735,"results":"57","hashOfConfig":"51"},{"size":147,"mtime":1610447305735,"results":"58","hashOfConfig":"51"},{"size":14608,"mtime":1611245621597,"results":"59","hashOfConfig":"51"},{"size":3833,"mtime":1611122952418,"results":"60","hashOfConfig":"51"},{"size":679,"mtime":1611122952418,"results":"61","hashOfConfig":"51"},{"size":9430,"mtime":1611122952418,"results":"62","hashOfConfig":"51"},{"size":3822,"mtime":1611122952418,"results":"63","hashOfConfig":"51"},{"size":4784,"mtime":1611122952418,"results":"64","hashOfConfig":"51"},{"size":867,"mtime":1610447305731,"results":"65","hashOfConfig":"51"},{"size":596,"mtime":1610447305731,"results":"66","hashOfConfig":"51"},{"size":646,"mtime":1611122952418,"results":"67","hashOfConfig":"51"},{"size":2015,"mtime":1611439591907,"results":"68","hashOfConfig":"51"},{"size":242,"mtime":1610447305739,"results":"69","hashOfConfig":"51"},{"size":695,"mtime":1610447305739,"results":"70","hashOfConfig":"51"},{"size":14608,"mtime":1611333851385,"results":"71","hashOfConfig":"51"},{"size":168,"mtime":1610447305739,"results":"72","hashOfConfig":"51"},{"size":4773,"mtime":1611122952418,"results":"73","hashOfConfig":"51"},{"size":4154,"mtime":1611122952418,"results":"74","hashOfConfig":"51"},{"size":4357,"mtime":1611122952418,"results":"75","hashOfConfig":"51"},{"size":3202,"mtime":1611122952418,"results":"76","hashOfConfig":"51"},{"size":749,"mtime":1610447305739,"results":"77","hashOfConfig":"51"},{"size":150,"mtime":1610637307191,"results":"78","hashOfConfig":"51"},{"size":228,"mtime":1610447305739,"results":"79","hashOfConfig":"51"},{"size":174,"mtime":1610447305735,"results":"80","hashOfConfig":"51"},{"size":189,"mtime":1610447305739,"results":"81","hashOfConfig":"51"},{"size":25249,"mtime":1611151505108,"results":"82","hashOfConfig":"51"},{"size":3879,"mtime":1611122952418,"results":"83","hashOfConfig":"51"},{"size":10288,"mtime":1611122952418,"results":"84","hashOfConfig":"51"},{"size":95,"mtime":1610447305739,"results":"85","hashOfConfig":"51"},{"size":1145,"mtime":1610447305739,"results":"86","hashOfConfig":"51"},{"size":232,"mtime":1610447305739,"results":"87","hashOfConfig":"51"},{"size":135,"mtime":1610447305735,"results":"88","hashOfConfig":"51"},{"size":22766,"mtime":1611143896613,"results":"89","hashOfConfig":"51"},{"size":500,"mtime":1610447305735,"results":"90","hashOfConfig":"51"},{"size":560,"mtime":1610447305731,"results":"91","hashOfConfig":"51"},{"size":165,"mtime":1610447305735,"results":"92","hashOfConfig":"51"},{"size":4761,"mtime":1611122952418,"results":"93","hashOfConfig":"51"},{"size":685,"mtime":1610447305739,"results":"94","hashOfConfig":"51"},{"size":1215,"mtime":1611122952418,"results":"95","hashOfConfig":"51"},{"size":3402,"mtime":1611122952418,"results":"96","hashOfConfig":"51"},{"size":6532,"mtime":1610637832425,"results":"97","hashOfConfig":"51"},{"size":780,"mtime":1610447305739,"results":"98","hashOfConfig":"51"},{"size":156,"mtime":1610447305735,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"1uza470",{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"102"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"102"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"102"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"102"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"102"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"166"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"102"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/archana/Desktop/jan_warehouse/src/reportWebVitals.ts",[],["209","210"],"/home/archana/Desktop/jan_warehouse/src/templates/login/index.tsx",["211","212"],"import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Copyright from '../../components/copyright-footer';\nimport loginJson from '../../textJsonData/login.json'\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        border: '1px solid rgb(172 172 172 / 54%)',\n        paddingTop: theme.spacing(6),\n        paddingLeft: theme.spacing(4),\n        paddingRight: theme.spacing(4),\n        paddingBottom: theme.spacing(6),\n        borderRadius: theme.spacing(1)\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', \n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst Login: React.FC<{history:any[]}> = ({history}) => {\n    const classes = useStyles();\n    const handleSubmit=()=>{\n        history.push('/dashboard')\n    }\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    {loginJson.title}\n                </Typography>\n                <form className={classes.form} noValidate onSubmit={handleSubmit}>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label={loginJson.form.labels.email}\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label={loginJson.form.labels.password}\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                    />\n                    <FormControlLabel\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\n                        label={loginJson.form.labels.remember}\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                       {loginJson.form.labels.submitBtn}\n                    </Button>\n                    {/* <Grid container>\n                        <Grid item xs>\n                            <Link href=\"#\" variant=\"body2\">\n                            {loginJson.form.labels.forgotPassword}\n                             </Link>\n                        </Grid>\n                        <Grid item>\n                            <Link href=\"#\" variant=\"body2\">\n                            {loginJson.form.labels.signUp}\n                            </Link>\n                        </Grid>\n                    </Grid> */}\n                </form>\n            </div>\n            <Box mt={8}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}\nexport default Login",["213","214"],"/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/account-analysis/index.tsx",[],"/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/create-amend-accounts/index.tsx",[],"/home/archana/Desktop/jan_warehouse/src/templates/dashboard/summaries/sales-orders/index.tsx",[],"/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/customer-enquiries/index.tsx",[],"/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/account-analysis/account-details/index.tsx",[],"/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/account-analysis/ec-sales-list/index.tsx",[],"/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/enter-transactions/sales-receipt/index.tsx",["215","216","217","218","219","220","221","222","223","224"],"import React from 'react';\nimport { createStyles, makeStyles, Theme, withStyles } from '@material-ui/core/styles';\nimport { Paper, Grid, Typography, TextField, InputAdornment, Checkbox, FormControlLabel, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TableFooter, Button, MenuItem, IconButton } from '@material-ui/core';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport SaveIcon from '@material-ui/icons/Save';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: '5px',\n    maxWidth: '100%',\n    '& .MuiGrid-item': {\n        height: 'auto',\n    },\n  },\n  paper: {\n    padding: theme.spacing(3),\n    textAlign: 'left',\n    color: theme.palette.text.primary,\n    fontWeight: theme.typography.fontWeightBold,\n  },\n  form: {\n    display: 'flex',\n    '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        marginLeft: theme.spacing(0),\n        marginBottom: theme.spacing(0),\n        width: '25ch'\n      },\n  },\n}));\n\nconst bankData = [\n    {Code: '1200',AccountDescription:'Bank Current Account', ShortCode: '233434',AccountNumber: '003234234'},\n    {Code: '1201',AccountDescription:'Euro Bank', ShortCode: '464564',AccountNumber: '45646456'},\n    {Code: '1210',AccountDescription:'Bank Deposit Account', ShortCode: '454545',AccountNumber: '900474345'},\n    {Code: '1220',AccountDescription:'Building Society Account', ShortCode: '9245454',AccountNumber: '083454358'}\n]\n\nconst customerData = [\n    {Code:'A1D001',ShortName:'A1 Desig', Name:'A1 Design', Postcode: 'BP127HT', Balance: '1120.92', OnHold: 'No', CreditLimit: '2000', availableCredit: '980'},\n    {Code:'A1D002',ShortName:'A2 Desig', Name:'A2 Design', Postcode: 'BP127HT', Balance: '174.00', OnHold: 'No', CreditLimit: '60000', availableCredit: '59826' },\n    {Code:'A1D003',ShortName:'A2 Desig', Name:'A2 Design', Postcode: 'BP127HT', Balance: '16364.99', OnHold: 'No'},\n    {Code:'ABS001',ShortName:'ABS Gara', Name:'ABS Garage', Postcode: 'NE311VB', Balance: '2368.16', OnHold: 'No'},\n    {Code:'ASB002',ShortName:'ABS Shop', Name:'ABS Garage', Postcode: 'NE311VB', Balance: '0.00', OnHold: 'No'}\n]\n\nconst SalesReceipt: React.FC<{}> = () => {\n    const classes = useStyles();\n    const [code, setCode] = React.useState('');\n    const [shortName, setShortName] = React.useState('');\n    const [postcode, setPostcode] = React.useState('');\n    const [creditLimit, setCreditLimit] = React.useState('');\n    const [balance, setBalance] = React.useState('');\n    const [bankAccount, setBankAccount] = React.useState('');\n    const [chequeCurrency, setChequeCurrency] = React.useState('');\n    const [settlementDiscount, setSettlementDiscount] = React.useState('');\n    const [chequeValue, setChequeValue] = React.useState('');\n\n    const setCustomerData = (customer:any, value: string) => {\n        setCode(customer.Code||'');\n        setShortName(customer.ShortName||'');\n        setPostcode(customer.Postcode||'');\n        setCreditLimit(customer.CreditLimit||'');\n        setBalance(customer.Balance||'');\n    }\n\n    const handleBankAccountChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        let value = event.target.value;\n        if(value === '') return;\n        console.log(value);\n        setBankAccount(value||'');\n    };\n\n    const handleCodeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        let value = event.target.value;\n        if(value === '') return;\n        let customer = customerData.find(row => row.Code === value);\n        if(customer === undefined) return;\n        setCustomerData(customer, value);\n    };\n    \n    const handleShortNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        let value = event.target.value;\n        if(value === '') return;\n        let customer = customerData.find(row => row.ShortName === value);\n        if(customer === undefined) return;\n        setCustomerData(customer, value);\n    };\n\n    const handlePostcodeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        let value = event.target.value;\n        if(value === '') return;\n        let customer = customerData.find(row => row.Postcode === value);\n        if(customer === undefined) return;\n        setCustomerData(customer, value);\n    };\n    \n    const reset = () => {\n        setCode( '');\n        setShortName( '');\n        setCreditLimit('');\n        setPostcode( '');\n        setBalance( '');\n        setBankAccount('');\n        setChequeCurrency('');\n        setSettlementDiscount('');\n        setChequeValue('');\n    }\n    const save = (event: React.MouseEvent<HTMLButtonElement>) => {\n        alert(\"Saved!\");\n        reset();\n    }\n\n    const clear = (event: React.MouseEvent<HTMLButtonElement>) => {\n        alert(\"Cleared!\");\n        reset();\n    }\n    \n    return (\n      <div className={classes.root}>\n        <Grid container justify='center'>\n          <Grid item xs={12}>\n            <Typography variant=\"h5\" component=\"h5\" align='center' style={{padding:'10px',fontWeight: 'bold'}}>\n                SALES RECEIPT\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n              <Paper className={classes.paper} elevation={0} variant='outlined'>\n                <Typography variant=\"h6\" component=\"h6\" align='left'>\n                    Bank account details\n                </Typography>\n                <TextField \n                    id=\"bank-account\" \n                    select\n                    label=\"Bank account\" \n                    variant=\"filled\"\n                    size=\"small\"\n                    value={bankAccount}\n                    onChange={handleBankAccountChange}\n                    style={{width:'60ch'}}\n                >\n                    <TableHead>\n                        <TableRow>\n                            <TableCell size=\"small\">Code</TableCell>\n                            <TableCell align=\"right\" size=\"small\">Account description</TableCell> \n                            <TableCell align=\"right\" size=\"small\">Short Code</TableCell> \n                            <TableCell align=\"right\" size=\"small\">Account Number</TableCell> \n                        </TableRow>\n                    </TableHead>\n                    {bankData.map((option) => (\n                        <MenuItem key={option.Code} value={option.Code} style={{padding:0,display: \"table-row-group\"}}>\n                            <TableRow key={option.Code}>\n                                <TableCell size=\"small\">{option.Code}</TableCell>\n                                <TableCell align=\"right\" size=\"small\">{option.AccountDescription}</TableCell>\n                                <TableCell align=\"right\" size=\"small\">{option.ShortCode}</TableCell>\n                                <TableCell align=\"right\" size=\"small\">{option.AccountNumber}</TableCell>\n                            </TableRow>\n                        </MenuItem>\n                    ))}\n                </TextField>\n            </Paper>\n          </Grid>\n          <Grid item xs={8}>\n            <Paper className={classes.paper} elevation={0} variant='outlined'>\n                <Typography variant=\"h6\" component=\"h6\" align='left'>\n                    Customer details\n                </Typography>\n                <form className={classes.form} noValidate autoComplete=\"off\">\n                    <Grid item xs={6}>\n                        <TextField \n                            id=\"code\" \n                            select label=\"Code\" \n                            variant=\"filled\"\n                            size=\"small\"\n                            value={code}\n                            onChange={handleCodeChange}\n                        >\n                            {customerData.map((option) => (\n                                <MenuItem key={option.Code} value={option.Code}>\n                                    {option.Code}\n                                </MenuItem>\n                            ))}\n                        </TextField>\n                        <TextField \n                            id=\"short-name\" \n                            select label=\"Short Name\" \n                            variant=\"filled\" \n                            size=\"small\" \n                            value={shortName}\n                            onChange={handleShortNameChange}>\n                            {customerData.map((option) => (\n                                <MenuItem key={option.ShortName} value={option.ShortName}>\n                                    {option.ShortName}\n                                </MenuItem>\n                            ))}                                \n                        </TextField>\n                        <TextField \n                            id=\"postcode\" \n                            select \n                            label=\"Postcode\"\n                            variant=\"filled\"\n                            size=\"small\"\n                            value={postcode}\n                            onChange={handlePostcodeChange}>\n                            {customerData.map((option) => (\n                                <MenuItem key={option.Postcode} value={option.Postcode}>\n                                    {option.Postcode}\n                                </MenuItem>\n                            ))} \n                        </TextField>   \n                    </Grid>\n                    <Grid item xs={6}>\n                        <TextField\n                            label=\"Credit limit\"\n                            id=\"credit-limit\"\n                            InputProps={{\n                                startAdornment: <InputAdornment position='start'>£</InputAdornment>,\n                            }}\n                            variant=\"filled\"\n                            size=\"small\"\n                            value={creditLimit}\n                            />\n                        <TextField\n                            label=\"Balance\"\n                            id=\"balance\"\n                            InputProps={{\n                                startAdornment: <InputAdornment position='start'>£</InputAdornment>,\n                            }}\n                            variant=\"filled\"\n                            size=\"small\"\n                            value={balance}\n                        />                        \n                    </Grid>\n                </form>\n            </Paper>\n          </Grid>\n          <Grid item xs={4}>\n            <Paper className={classes.paper} elevation={0} variant='outlined'>\n                <Typography variant=\"h6\" component=\"h6\" align='left'>\n                    Transaction details\n                </Typography>\n                <form className={classes.form} noValidate autoComplete=\"off\">\n                    <Grid item xs={12}>\n                        <TextField\n                            id=\"date\"\n                            label=\"Date\"\n                            type=\"date\"\n                            defaultValue=\"2017-05-24\"\n                            variant=\"filled\"\n                            size=\"small\"/>\n                        <TextField\n                            id=\"reference\"\n                            label=\"Reference\"\n                            variant=\"filled\"\n                            size=\"small\"/>   \n                        <TextField\n                            id=\"sec-reference\"\n                            label=\"Second ref\"\n                            variant=\"filled\"\n                            size=\"small\"/>\n                    </Grid>\n                </form>\n            </Paper>\n          </Grid>\n          <Grid item xs={12}>\n            <Paper className={classes.paper} elevation={0} variant='outlined'>\n                <Typography variant=\"h6\" component=\"h6\" align='left'>\n                    Receipt details\n                </Typography>\n                <form className={classes.form} noValidate autoComplete=\"off\">\n                    <Grid item xs={4}>\n                        <TextField \n                            id=\"cheque-currency\" \n                            select\n                            label=\"Cheque currency\" \n                            variant=\"filled\"\n                            size=\"small\"\n                            value={chequeCurrency}\n                            onChange={(e) => setChequeCurrency(e.target.value) }\n                            >\n                            <MenuItem key={'EUR'} value={'EUR'}>\n                                    {'EUR'}\n                            </MenuItem>\n                            <MenuItem key={'USD'} value={'USD'}>\n                                    {'USD'}\n                            </MenuItem>\n                        </TextField>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <TextField\n                            label=\"Settlement discount\"\n                            id=\"settlement-discount\"\n                            InputProps={{\n                                startAdornment: <InputAdornment position='start'>£</InputAdornment>,\n                            }}\n                            variant=\"filled\"\n                            size=\"small\"\n                            value={settlementDiscount}\n                            onChange={(e) => setSettlementDiscount(e.target.value) }\n                            />\n                    </Grid>\n                    <Grid item xs={4}>\n                        <TextField\n                            label=\"Cheque value\"\n                            id=\"cheque-value\"\n                            InputProps={{\n                                startAdornment: <InputAdornment position='start'>£</InputAdornment>,\n                            }}\n                            variant=\"filled\"\n                            size=\"small\"\n                            value={chequeValue}\n                            onChange={(e) => setChequeValue(e.target.value) }\n                        />                      \n                    </Grid>\n                </form>\n            </Paper>\n          </Grid>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<SaveIcon />}\n            style={{margin:'10px',marginBottom:'20px'}}\n            onClick={save}\n          >Save</Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            startIcon={<ClearIcon />}\n            style={{margin:'10px',marginBottom:'20px'}}\n            onClick={clear}\n          >Clear</Button>\n        </Grid>\n      </div>\n    );\n}\nexport default SalesReceipt","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/create-amend-accounts/create-customer/index.tsx",[],"/home/archana/Desktop/jan_warehouse/src/components/navWrapper/index.tsx",[],"/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/create-amend-accounts/create-customer/panels/trading.tsx",[],"/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/create-amend-accounts/create-customer/panels/documents.tsx",[],"/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/create-amend-accounts/create-customer/panels/pricing.tsx",["225","226"],"import React from 'react'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {},\n\n        \n        heading: {\n            paddingLeft: theme.spacing(1),\n            paddingRight: theme.spacing(1)\n        },\n        textField: {\n            marginLeft: theme.spacing(1),\n            marginRight: theme.spacing(1),\n            width: '25ch',\n        },\n        selectEmpty: {\n            marginTop: theme.spacing(2),\n        },\n        formControl: {\n            margin: theme.spacing(1),\n            minWidth: '100%',\n        },\n\n       \n\n\n\n\n\n    }),\n);\nconst Pricing: React.FC<{}> = () => {\n    const classes = useStyles()\n    return (\n        <div className={classes.root}>\n        <Grid container spacing={3}>\n        <Grid item xs={6} md={4} sm={6}>\n                      <h3 className={classes.heading}>Discounts</h3>\n                \n                  \n                      <TextField\n                          id=\"invoicediscount\"\n                          label=\"Invoice Discount\"\n                          style={{ margin: 8 }}\n                          placeholder=\"%\"\n                          fullWidth\n                          margin=\"dense\"\n                          InputLabelProps={{\n                              shrink: true,\n                          }}\n                      />\n                      <TextField\n                          id=\"linediscount\"\n                          label=\"Line discount\"\n                          style={{ margin: 8 }}\n                          placeholder=\"days\"\n                          fullWidth\n                          margin=\"dense\"\n                          InputLabelProps={{\n                              shrink: true,\n                          }}\n                      />\n                        \n\n                      \n\n                  </Grid>\n                 \n                  <Grid item xs={6} md={4} sm={6}>\n                  <h3 className={classes.heading}>Discount Details</h3>\n                  <FormControl className={classes.formControl}>\n                            <InputLabel shrink id=\"discountgroup\">\n                               Discount group\n                    </InputLabel>\n                            <Select\n                                labelId=\"discountgroup\"\n                                id=\"discountgroup-select\"\n                                className={classes.selectEmpty}\n                            >\n                                <MenuItem value={''}></MenuItem>\n                                <MenuItem value={''}></MenuItem>\n                            </Select>\n                        </FormControl>\n                        <FormControl className={classes.formControl}>\n                            <InputLabel shrink id=\"discountgroup\">\n                             Invoice and order value discount\n                    </InputLabel>\n                            <Select\n                                labelId=\"invoiceorder\"\n                                id=\"invoiceorder-select\"\n                                className={classes.selectEmpty}\n                            >\n                                <MenuItem value={''}></MenuItem>\n                                <MenuItem value={''}></MenuItem>\n                            </Select>\n                        </FormControl>\n\n\n\n                  </Grid>\n\n                  <Grid item xs={12} md={5} sm={6}>\n                  <h3 className={classes.heading}>Price Brand Details</h3>\n                  <FormControl className={classes.formControl}>\n                            <InputLabel shrink id=\"pricebrand\">\n                              Price Brand\n                    </InputLabel>\n                            <Select\n                                labelId=\"pricebrand\"\n                                id=\"pricebrand-select\"\n                                className={classes.selectEmpty}\n                            >\n                                <MenuItem value={'standard'}>Standard</MenuItem>\n                                <MenuItem value={''}></MenuItem>\n                            </Select>\n                        </FormControl>\n                        \n\n\n\n                  </Grid>\n                 \n          </Grid>\n\n      </div>\n    )\n}\nexport default Pricing","/home/archana/Desktop/jan_warehouse/src/components/tabpanel/index.tsx",[],"/home/archana/Desktop/jan_warehouse/src/components/bottom-navigation/index.tsx",[],"/home/archana/Desktop/jan_warehouse/src/dashboardLayout/index.tsx",[],"/home/archana/Desktop/jan_warehouse/src/templates/dashboard/summaries/sales/index.tsx",["227"],"/home/archana/Desktop/jan_warehouse/src/templates/dashboard/summaries/stock-control/index.tsx",[],"/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/enter-transactions/index.tsx",[],"/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/enter-transactions/sales-payment/index.tsx",["228","229","230","231","232","233","234","235","236","237"],"/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/customer-enquiries/transaction-enquiry/index.tsx",[],"/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/create-amend-accounts/create-customer/panels/memo.tsx",["238"],"import React, { useState } from 'react'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Grid from '@material-ui/core/Grid';\nimport BottomDrower from \"../../../../../../components/bottom-navigation\";\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            flexWrap: 'wrap',\n        },\n        table: {\n            minWidth: 650,\n        },\n        modal: {\n            width: 400,\n            backgroundColor: theme.palette.background.paper,\n            border: '2px solid #000',\n            boxShadow: theme.shadows[5],\n            padding: theme.spacing(2, 4, 3),\n        },\n        heading: {\n            paddingLeft: theme.spacing(1),\n            paddingRight: theme.spacing(1)\n        },\n\n        labelterms:{\n            \"& .MuiFormControlLabel-label\" :{\n   \n               color: 'rgba(0, 0, 0, 0.54)',\n                 fontSize:14,\n       \n   \n            }  \n           },\n       \n\n    }),\n);\nconst Memo: React.FC<{}> = () => {\n    const classes = useStyles()\n\n    \n\n  \n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3}>\n                <Grid item xs={12} md={12} sm={6}>\n                    <h3 className={classes.heading}>Alerts</h3>\n                    <Grid item xs={12} md={12} sm={12}>\n                        <TableContainer component={Paper}>\n                            <Table className={classes.table} aria-label=\"simple table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>Created </TableCell>\n                                        <TableCell>Last Updates</TableCell>\n                                        <TableCell align=\"right\">User</TableCell>\n                                        <TableCell align=\"right\">Text</TableCell>\n                                        <TableCell align=\"right\">Active</TableCell>\n                                        \n                                       \n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    <TableRow key={'row.name'}>\n                                        <TableCell component=\"th\" scope=\"row\">\n                                           \n                                        </TableCell>\n                                        <TableCell></TableCell>\n                                        <TableCell align=\"right\"></TableCell>\n                                        <TableCell align=\"right\"></TableCell>\n                                        <TableCell align=\"right\"></TableCell>\n                                       \n                                    </TableRow>\n\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} md={12} sm={12}>\n                    <BottomDrower>\n                        <div><FormControlLabel className={classes.labelterms}\n                        control={\n                            <Checkbox\n\n                                name=\"checkedB\"\n                                color=\"primary\"\n                            />\n                        }\n                        label=\"Terms agreed\"\n                    /></div>\n                        <div>\n                            <Button variant=\"contained\">\n                               Add \n                        </Button>\n                            <Button variant=\"contained\" color=\"primary\">\n                                Edit\n                        </Button>\n                            <Button variant=\"contained\" color=\"primary\">\n                              Delete\n                        </Button>\n                        <Button variant=\"contained\" color=\"primary\">\n                             Set as Active\n                        </Button>\n\n                        \n                        </div>\n                    </BottomDrower>\n                </Grid>\n            </Grid>\n         \n        </div>\n    )\n}\nexport default Memo","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/create-amend-accounts/create-customer/panels/attachments.tsx",["239"],"import React, { useState } from 'react'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Grid from '@material-ui/core/Grid';\nimport BottomDrower from \"../../../../../../components/bottom-navigation\";\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            flexWrap: 'wrap',\n        },\n        table: {\n            minWidth: 650,\n        },\n        modal: {\n            width: 400,\n            backgroundColor: theme.palette.background.paper,\n            border: '2px solid #000',\n            boxShadow: theme.shadows[5],\n            padding: theme.spacing(2, 4, 3),\n        },\n        heading: {\n            paddingLeft: theme.spacing(1),\n            paddingRight: theme.spacing(1)\n        },\n\n    }),\n);\n\nconst Attachments: React.FC<{}> = () => {\n    const classes = useStyles()\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3}>\n                <Grid item xs={12} md={12} sm={6}>\n                    <h3 className={classes.heading}>Attachments</h3>\n                    <Grid item xs={12} md={12} sm={12}>\n                        <TableContainer component={Paper}>\n                            <Table className={classes.table} aria-label=\"simple table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>File Name</TableCell>\n                                        <TableCell>Description</TableCell>\n                                        <TableCell align=\"right\">Status</TableCell>\n                                        <TableCell align=\"right\">File type</TableCell>\n                                        <TableCell align=\"right\">File size</TableCell>\n                                        <TableCell align=\"right\">Date time modified</TableCell>\n                                        <TableCell align=\"right\">Link</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    <TableRow key={'row.name'}>                                     \n                                        <TableCell>Test file</TableCell>\n                                        <TableCell>Description</TableCell>\n                                        <TableCell align=\"right\">saved</TableCell>\n                                        <TableCell align=\"right\">pdf</TableCell>\n                                        <TableCell align=\"right\">456 M</TableCell>\n                                        <TableCell align=\"right\">15 Jan 21</TableCell>\n                                        <TableCell align=\"right\">Link</TableCell>\n                                    </TableRow>\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} md={12} sm={12}>\n                    <BottomDrower>\n                        <div></div>\n                        <div>\n                            <Button variant=\"contained\">\n                                Add File\n                        </Button>\n                            <Button variant=\"contained\" color=\"primary\">\n                                Add Link\n                        </Button>\n                            <Button variant=\"contained\" color=\"primary\">\n                                Add Folder\n                        </Button>\n                        </div>\n                    </BottomDrower>\n                </Grid>\n            </Grid>\n\n        </div>\n    )\n}\nexport default Attachments","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/create-amend-accounts/create-customer/panels/payment.tsx",[],"/home/archana/Desktop/jan_warehouse/src/components/navItem/index.tsx",["240"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Divider from '@material-ui/core/Divider'\nimport Collapse from '@material-ui/core/Collapse'\nimport { history } from \"../../utils/history\"\n\nimport IconExpandLess from '@material-ui/icons/ExpandLess'\nimport IconExpandMore from '@material-ui/icons/ExpandMore'\n\n\nconst useStyles = makeStyles(theme =>\n  createStyles({\n    menuItem: {\n      \"& .MuiListItemIcon-root\":{\n        minWidth:34\n      },\n      \"& .MuiListItemText-inset\":{\n        paddingLeft:34\n      }\n    },\n    menuItemIcon: {},\n  }),\n)\n\n// React runtime PropTypes\nexport const NavItemPropTypes = {\n  name: PropTypes.string.isRequired,\n  link: PropTypes.string,\n  Icon: PropTypes.elementType,\n  items: PropTypes.array,\n}\n\n\ntype NavItemPropTypes = PropTypes.InferProps<typeof NavItemPropTypes>\ntype NavItemPropsWithoutItems = Omit<NavItemPropTypes, 'items'>\n\n// Improve child items declaration\nexport type NavItemProps = NavItemPropsWithoutItems & {\n  items?: NavItemProps[]\n}\n\nconst NavItem: React.FC<NavItemProps> = props => {\n  const { name, Icon, items = [], link } = props\n  const classes = useStyles()\n  const isExpandable = items && items.length > 0\n  const [open, setOpen] = React.useState(false)\n\n  function handleClick() {\n    setOpen(!open)\n  }\n  function handleLinkClick(link: string) {\n    history.push(link)\n  }\n  const MenuItemRoot = (\n    <>\n      {!link\n        ?\n        <ListItem dense button className={classes.menuItem} onClick={handleClick}>\n          {/* Display an icon if any */}\n          {!!Icon && (\n            <ListItemIcon className={classes.menuItemIcon}>\n              <Icon />\n            </ListItemIcon>\n          )}\n          <ListItemText primary={name} inset={!Icon} />\n          {/* Display the expand menu if the item has children */}\n          {isExpandable && !open && <IconExpandMore />}\n          {isExpandable && open && <IconExpandLess />}\n        </ListItem> :\n        <ListItem dense button className={classes.menuItem} onClick={() => handleLinkClick(link)}>\n          {/* Display an icon if any */}\n          {!!Icon && (\n            <ListItemIcon className={classes.menuItemIcon}>\n              <Icon />\n            </ListItemIcon>\n          )}\n          <ListItemText primary={name} inset={!Icon} />\n          {/* Display the expand menu if the item has children */}\n          {isExpandable && !open && <IconExpandMore />}\n          {isExpandable && open && <IconExpandLess />}\n        </ListItem>}\n    </>\n  )\n\n  const MenuItemChildren = isExpandable ? (\n    <Collapse in={open} timeout=\"auto\" unmountOnExit>\n      <Divider />\n      <List component=\"div\" disablePadding>\n        {items.map((item, index) => (\n          <NavItem {...item} key={index} />\n        ))}\n      </List>\n    </Collapse>\n  ) : null\n\n  return (\n    <>\n      {MenuItemRoot}\n      {MenuItemChildren}\n    </>\n  )\n}\n\nNavItem.propTypes = NavItemPropTypes\n\n\nexport default NavItem\n","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/index.tsx",[],"/home/archana/Desktop/jan_warehouse/src/templates/dashboard/bank-account/transactions/index.tsx",[],"/home/archana/Desktop/jan_warehouse/src/templates/dashboard/summaries/purchases/index.tsx",[],["241","242"],"/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/account-analysis/trading-report-summary/index.tsx",[],"/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/create-amend-accounts/customer-delivery-addresses/index.tsx",[],"/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/enter-transactions/sales-credit-note/index.tsx",["243","244"],"import React from 'react';\nimport { createStyles, makeStyles, Theme, withStyles } from '@material-ui/core/styles';\nimport { Paper, Grid, Typography, TextField, InputAdornment, Checkbox, FormControlLabel, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TableFooter, Button, MenuItem, IconButton } from '@material-ui/core';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport SaveIcon from '@material-ui/icons/Save';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: '5px',\n    maxWidth: '100%',\n    '& .MuiGrid-item': {\n        height: 'auto',\n    },\n  },\n  paper: {\n    padding: theme.spacing(3),\n    textAlign: 'left',\n    color: theme.palette.text.primary,\n    fontWeight: theme.typography.fontWeightBold,\n  },\n  form: {\n    display: 'flex',\n    '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        marginLeft: theme.spacing(0),\n        marginBottom: theme.spacing(0),\n        width: '25ch'\n      },\n  },\n}));\n\nconst StyledTableCell = withStyles((theme: Theme) =>\n  createStyles({\n    head: {\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 12,\n    },\n  }),\n)(TableCell);\n\nconst StyledTableRow = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      '&:nth-child(1)': {\n          display: 'none',\n      }\n    },\n  }),\n)(TableRow);\n\nconst customerData = [\n    {Code:'A1D001',ShortName:'A1 Desig', Name:'A1 Design', Postcode: 'BP127HT', Balance: '1120.92', OnHold: 'No', CreditLimit: '2000', availableCredit: '980'},\n    {Code:'A1D002',ShortName:'A2 Desig', Name:'A2 Design', Postcode: 'BP127HT', Balance: '174.00', OnHold: 'No', CreditLimit: '60000', availableCredit: '59826' },\n    {Code:'A1D003',ShortName:'A2 Desig', Name:'A2 Design', Postcode: 'BP127HT', Balance: '16364.99', OnHold: 'No'},\n    {Code:'ABS001',ShortName:'ABS Gara', Name:'ABS Garage', Postcode: 'NE311VB', Balance: '2368.16', OnHold: 'No'},\n    {Code:'ASB002',ShortName:'ABS Shop', Name:'ABS Garage', Postcode: 'NE311VB', Balance: '0.00', OnHold: 'No'}\n]\n\nconst dummyVATData = [\n    {Code: '', Name:'', Rate:'', GoodsValue:'', VATValue: '', VATDiscount: '', DiscountValue: ''},\n    {Code: '', Name:'', Rate:'', GoodsValue:'', VATValue: '', VATDiscount: '', DiscountValue: ''},\n]\n\nconst VATData = [\n    {Code: '1', Name:'Standard rate', Rate:'20.00', GoodsValue:'20.00', VATValue: '0.00', VATDiscount: '0.00', DiscountValue: '0.00', mappedCode: 'A1D001'},\n    {Code: '2', Name:'Standard rate', Rate:'30.00', GoodsValue:'60.00', VATValue: '0.00', VATDiscount: '0.00', DiscountValue: '0.00', mappedCode: 'A1D001'},\n    {Code: '1', Name:'Standard rate', Rate:'20.00', GoodsValue:'0.00', VATValue: '0.00', VATDiscount: '0.00', DiscountValue: '0.00', mappedCode: 'A1D002'}\n]\n\nconst dummyNominialData = [\n    {Code: '', CC:'', Dept:'', Name:'', GoodsValue:'', Type:'', Narrative:'', TransactionAnalysis:''},\n    {Code: '', CC:'', Dept:'', Name:'', GoodsValue:'', Type:'', Narrative:'', TransactionAnalysis:''},\n]\n\nconst NominialData = [\n    {Code: '4000', CC:'', Dept:'', Name:'Sales', GoodsValue:'0.00', Type:'Posting', Narrative:'SI/AD001', TransactionAnalysis:'', mappedCode: 'A1D001'},\n    {Code: '4000', CC:'ADM', Dept:'4', Name:'Sales North.', GoodsValue:'0.00', Type:'Posting', Narrative:'SI/AD002', TransactionAnalysis:'', mappedCode: 'A1D002'},\n]\n\nconst TransactionData = [\n    {\n        GoodsValue: '0.00',\n        DiscountPercent: '2.50',\n        DiscountDays: '15',\n        DiscountValue: '0.00',\n        VATDiscount: '0.00',\n        VATValue: '0.00',\n        CreditNoteTotal: '0.00',\n        DiscCreditTotal: '0.00',\n        mappedCode: 'A1D001'\n    },\n    {\n        GoodsValue: '0.00',\n        DiscountPercent: '0.00',\n        DiscountDays: '15',\n        DiscountValue: '0.00',\n        VATDiscount: '0.00',\n        VATValue: '0.00',\n        CreditNoteTotal: '0.00',\n        DiscCreditTotal: '0.00',\n        mappedCode: 'A1D002'\n    },\n]\n\nconst defaultTransactionData = {\n    GoodsValue: '',\n    DiscountPercent: '',\n    DiscountDays: '',\n    DiscountValue: '',\n    VATDiscount: '',\n    VATValue: '',\n    CreditNoteTotal: '',\n    DiscCreditTotal: '',\n    mappedCode: ''\n}\n\nconst SalesCreditNote: React.FC<{}> = () => {\n    const classes = useStyles();\n    const [code, setCode] = React.useState('');\n    const [shortName, setShortName] = React.useState('');\n    const [postcode, setPostcode] = React.useState('');\n    const [creditLimit, setCreditLimit] = React.useState('');\n    const [balance, setBalance] = React.useState('');\n    const [availableCredit, setAvailableCredit] = React.useState('');\n    const [transaction, setTransaction] = React.useState(defaultTransactionData);\n    const [VATAnalysisData, setVATAnalysisData] = React.useState(dummyVATData);\n    const [NominialAnalysisData, setNominialAnalysisData] = React.useState(dummyNominialData);\n\n    const setCustomerData = (customer:any, value: string) => {\n        reset();\n        setCode(customer.Code||'');\n        setShortName(customer.ShortName||'');\n        setPostcode(customer.Postcode||'');\n        setCreditLimit(customer.CreditLimit||'');\n        setBalance(customer.Balance||'');\n        setAvailableCredit(customer.availableCredit||'');\n        let vd = VATData.filter(row => row.mappedCode === value);\n        let nd = NominialData.filter(row => row.mappedCode === value);\n        let td = TransactionData.find(row => row.mappedCode === value);\n        setTransaction(td || defaultTransactionData );\n        setVATAnalysisData(vd);\n        setNominialAnalysisData(nd);\n    }\n    const handleCodeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        let value = event.target.value;\n        if(value === '') return;\n        let customer = customerData.find(row => row.Code === value);\n        if(customer === undefined) return;\n        setCustomerData(customer, value);\n    };\n    \n    const handleShortNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        let value = event.target.value;\n        if(value === '') return;\n        let customer = customerData.find(row => row.ShortName === value);\n        if(customer === undefined) return;\n        setCustomerData(customer, value);\n    };\n\n    const handlePostcodeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        let value = event.target.value;\n        if(value === '') return;\n        let customer = customerData.find(row => row.Postcode === value);\n        if(customer === undefined) return;\n        setCustomerData(customer, value);\n    };\n    \n    const reset = () => {\n        setCode( '');\n        setShortName( '');\n        setCreditLimit('');\n        setPostcode( '');\n        setBalance( '');\n        setAvailableCredit('');\n        setTransaction(defaultTransactionData);\n        setVATAnalysisData(dummyVATData);\n        setNominialAnalysisData(dummyNominialData);\n    }\n    const save = (event: React.MouseEvent<HTMLButtonElement>) => {\n        alert(\"Saved!\");\n        reset();\n    }\n\n    const clear = (event: React.MouseEvent<HTMLButtonElement>) => {\n        alert(\"Cleared!\");\n        reset();\n    }\n    \n    const NAGoodsValueTotal = () => {\n        let total=0;\n        if(NominialAnalysisData===dummyNominialData) return 0;\n        for(let i=0;i<NominialAnalysisData.length;i++)\n        {\n            total+=parseFloat(NominialAnalysisData[i].GoodsValue);\n        }\n        return total;\n    }\n\n    const VATotals = () => {\n        let GoodsValue=0, DiscountValue=0, VATDiscount=0, VATValue=0;\n        if(VATAnalysisData===dummyVATData) return { GoodsValue, DiscountValue, VATDiscount, VATValue };\n        for(let i=0;i<VATAnalysisData.length;i++)\n        {\n            GoodsValue+=parseFloat(VATAnalysisData[i].GoodsValue);\n            DiscountValue+=parseFloat(VATAnalysisData[i].DiscountValue);\n            VATDiscount+=parseFloat(VATAnalysisData[i].VATDiscount);\n            VATValue+=parseFloat(VATAnalysisData[i].VATValue);\n        }\n        return { GoodsValue, DiscountValue, VATDiscount, VATValue };\n    }\n\n    return (\n      <div className={classes.root}>\n        <Grid container justify='center'>\n          <Grid item xs={12}>\n            <Typography variant=\"h5\" component=\"h5\" align='center' style={{padding:'10px',fontWeight: 'bold'}}>\n                SALES CREDIT NOTE\n            </Typography>\n          </Grid>\n          <Grid item xs={8}>\n            <Paper className={classes.paper} elevation={0} variant='outlined'>\n                <Typography variant=\"h6\" component=\"h6\" align='left'>\n                    Customer details\n                </Typography>\n                <form className={classes.form} noValidate autoComplete=\"off\">\n                    <Grid item xs={6}>\n                        <TextField \n                            id=\"code\" \n                            select label=\"Code\" \n                            variant=\"filled\"\n                            size=\"small\"\n                            value={code}\n                            onChange={handleCodeChange}\n                        >\n                            {customerData.map((option) => (\n                                <MenuItem key={option.Code} value={option.Code}>\n                                    {option.Code}\n                                </MenuItem>\n                            ))}\n                        </TextField>\n                        <TextField \n                            id=\"short-name\" \n                            select label=\"Short Name\" \n                            variant=\"filled\" \n                            size=\"small\" \n                            value={shortName}\n                            onChange={handleShortNameChange}>\n                            {customerData.map((option) => (\n                                <MenuItem key={option.ShortName} value={option.ShortName}>\n                                    {option.ShortName}\n                                </MenuItem>\n                            ))}                                \n                        </TextField>\n                        <TextField \n                            id=\"postcode\" \n                            select \n                            label=\"Postcode\"\n                            variant=\"filled\"\n                            size=\"small\"\n                            value={postcode}\n                            onChange={handlePostcodeChange}>\n                            {customerData.map((option) => (\n                                <MenuItem key={option.Postcode} value={option.Postcode}>\n                                    {option.Postcode}\n                                </MenuItem>\n                            ))} \n                        </TextField>   \n                    </Grid>\n                    <Grid item xs={6}>\n                        <TextField\n                            label=\"Credit limit\"\n                            id=\"credit-limit\"\n                            InputProps={{\n                                startAdornment: <InputAdornment position='start'>£</InputAdornment>,\n                            }}\n                            variant=\"filled\"\n                            size=\"small\"\n                            value={creditLimit}\n                            />\n                        <TextField\n                            label=\"Balance\"\n                            id=\"balance\"\n                            InputProps={{\n                                startAdornment: <InputAdornment position='start'>£</InputAdornment>,\n                            }}\n                            variant=\"filled\"\n                            size=\"small\"\n                            value={balance}\n                        />\n                        <TextField\n                            label=\"Available credit\"\n                            id=\"balance\"\n                            InputProps={{\n                                startAdornment: <InputAdornment position='start'>£</InputAdornment>,\n                            }}\n                            variant=\"filled\"\n                            size=\"small\"\n                            value={availableCredit}\n                        />                             \n                    </Grid>\n                </form>\n            </Paper>\n          </Grid>\n          <Grid item xs={4}>\n            <Paper className={classes.paper} elevation={0} variant='outlined'>\n                <Typography variant=\"h6\" component=\"h6\" align='left'>\n                    Credit Note details\n                </Typography>\n                <form className={classes.form} noValidate autoComplete=\"off\">\n                    <Grid item xs={12}>\n                        <TextField\n                            id=\"credit-note-date\"\n                            label=\"Credit note date\"\n                            type=\"date\"\n                            defaultValue=\"2017-05-24\"\n                            variant=\"filled\"\n                            size=\"small\"/>\n                        <TextField\n                            id=\"reference\"\n                            label=\"Reference\"\n                            variant=\"filled\"\n                            size=\"small\"/>   \n                        <TextField\n                            id=\"sec-reference\"\n                            label=\"Second ref\"\n                            variant=\"filled\"\n                            size=\"small\"/>\n                    </Grid>\n                </form>\n            </Paper>\n          </Grid>\n          <Grid item xs={12}>\n            <Paper className={classes.paper} elevation={0} variant='outlined'>\n                <Typography variant=\"h6\" component=\"h6\" align='left'>\n                    Transaction details\n                </Typography>\n                <form className={classes.form} noValidate autoComplete=\"off\">\n                    <Grid item xs={4}>\n                        <TextField\n                            label=\"Goods value\"\n                            id=\"goods-value\"\n                            InputProps={{\n                                startAdornment: <InputAdornment position='start'>£</InputAdornment>,\n                            }}\n                            variant=\"filled\"\n                            size=\"small\"\n                            value={transaction?.GoodsValue||''}\n                        />\n                        <TextField \n                            id=\"discount-percent\"\n                            label=\"Discount percent\"\n                            variant=\"filled\"\n                            InputProps={{\n                                endAdornment: <InputAdornment position='end'>%</InputAdornment>,\n                            }}\n                            size=\"small\"\n                            value={transaction?.DiscountPercent ||''}\n                        />\n                        <FormControlLabel\n                            control={\n                            <Checkbox\n                                id=\"traingulated\"\n                                name=\"traingulated\"\n                                color=\"primary\"\n                                disabled={code===''}\n                            />\n                            }\n                            label=\"Traingulated\"\n                        />\n                        <FormControlLabel\n                            control={\n                            <Checkbox\n                                id=\"settled\"\n                                name=\"settled\"\n                                color=\"primary\"\n                                disabled={code===''}\n                            />\n                            }\n                            label=\"Settled immediately\"\n                        />\n                    </Grid>\n                    <Grid item xs={4}>\n                        <TextField\n                            id=\"dicount-days\"\n                            label=\"Discount days\"\n                            variant=\"filled\"\n                            size=\"small\"\n                            value={transaction?.DiscountDays ||''}\n                        />\n                        <TextField\n                            label=\"Discount value\"\n                            id=\"discount-value\"\n                            InputProps={{\n                                startAdornment: <InputAdornment position='start'>£</InputAdornment>,\n                            }}\n                            variant=\"filled\"\n                            size=\"small\"\n                            value={transaction?.DiscountValue ||''}\n                            />\n                        <TextField\n                            label=\"VAT discount\"\n                            id=\"vat-discount\"\n                            InputProps={{\n                                startAdornment: <InputAdornment position='start'>£</InputAdornment>,\n                            }}\n                            variant=\"filled\"\n                            size=\"small\"\n                            value={transaction?.VATDiscount ||''}\n                        />                      \n                    </Grid>\n                    <Grid item xs={4}>\n                        <TextField\n                            label=\"VAT value\"\n                            id=\"vat-value\"\n                            InputProps={{\n                                startAdornment: <InputAdornment position='start'>£</InputAdornment>,\n                            }}\n                            variant=\"filled\"\n                            size=\"small\"\n                            value={transaction?.VATValue ||''}\n                        />  \n                        <TextField\n                            label=\"Credit note total\"\n                            id=\"credit-note-total\"\n                            InputProps={{\n                                startAdornment: <InputAdornment position='start'>£</InputAdornment>,\n                            }}\n                            variant=\"filled\"\n                            size=\"small\"\n                            value={transaction?.CreditNoteTotal ||''}\n                        />\n                        <TextField\n                            label=\"Disc credit total\"\n                            id=\"disc-credit-total\"\n                            InputProps={{\n                                startAdornment: <InputAdornment position='start'>£</InputAdornment>,\n                            }}\n                            variant=\"filled\"\n                            size=\"small\"\n                            value={transaction?.DiscCreditTotal ||''}\n                        />                        \n                    </Grid>\n                </form>\n            </Paper>\n          </Grid>\n          <Grid item xs={12}>\n            <Paper className={classes.paper} elevation={0} variant='outlined'>\n                <Typography variant=\"h6\" component=\"h6\" align='left'>\n                    VAT analysis\n                </Typography>   \n                <TableContainer >\n                <Table aria-label=\"customized table\" size=\"small\">\n                    <TableHead>\n                    <TableRow>\n                        <StyledTableCell>Code</StyledTableCell>\n                        <StyledTableCell>Name</StyledTableCell>\n                        <StyledTableCell>Rate</StyledTableCell>\n                        <StyledTableCell>Goods value</StyledTableCell>\n                        <StyledTableCell>Discount value</StyledTableCell>\n                        <StyledTableCell>VAT discount</StyledTableCell>\n                        <StyledTableCell>VAT value</StyledTableCell>\n                    </TableRow>\n                    </TableHead>\n                    <TableBody>\n                    {VATAnalysisData.map((row) => (\n                        <StyledTableRow key={row.Code}>\n                            <StyledTableCell component=\"th\" scope=\"row\">\n                                {row.Code}\n                            </StyledTableCell>\n                            <StyledTableCell>{row.Name}</StyledTableCell>\n                            <StyledTableCell>{row.Rate}</StyledTableCell>\n                            <StyledTableCell>{row.GoodsValue}</StyledTableCell>\n                            <StyledTableCell>{row.DiscountValue}</StyledTableCell>\n                            <StyledTableCell>{row.VATDiscount}</StyledTableCell>\n                            <StyledTableCell>{row.VATValue}</StyledTableCell>\n                        </StyledTableRow>\n                    ))}\n                    </TableBody>\n                    {/* <IconButton size=\"small\">\n                        <AddIcon />\n                    </IconButton> */}\n                    <TableFooter style={{borderTop:'2px solid rgba(0,0,0,0.3)'}}>\n                        <TableRow>\n                            <StyledTableCell>\n                                Totals\n                            </StyledTableCell>\n                            <StyledTableCell/>\n                            <StyledTableCell/>\n                            <StyledTableCell>\n                                {VATotals().GoodsValue}\n                            </StyledTableCell>\n                            <StyledTableCell>\n                                {VATotals().DiscountValue}\n                            </StyledTableCell>\n                            <StyledTableCell>\n                                {VATotals().VATDiscount}\n                            </StyledTableCell>\n                            <StyledTableCell>\n                                {VATotals().VATValue}\n                            </StyledTableCell>\n                        </TableRow>\n                    </TableFooter>\n                </Table>\n            </TableContainer>\n            </Paper>\n          </Grid>\n          <Grid item xs={12}>\n          <Paper className={classes.paper} elevation={0} variant='outlined'>\n                <Typography variant=\"h6\" component=\"h6\" align='left'>\n                    Nominial analysis\n                </Typography>   \n                <TableContainer>\n                  <Table aria-label=\"customized table\" size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <StyledTableCell>Code</StyledTableCell>\n                            <StyledTableCell>CC</StyledTableCell>\n                            <StyledTableCell>Dept</StyledTableCell>\n                            <StyledTableCell>Name</StyledTableCell>\n                            <StyledTableCell>Goods value</StyledTableCell>\n                            <StyledTableCell>Type</StyledTableCell>\n                            <StyledTableCell>Narrative</StyledTableCell>\n                            <StyledTableCell>Transaction analysis</StyledTableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                    {NominialAnalysisData.map((row) => (\n                        <StyledTableRow key={row.Code}>\n                            <StyledTableCell component=\"th\" scope=\"row\">\n                                {row.Code }\n                            </StyledTableCell>\n                            <StyledTableCell>{row.CC}</StyledTableCell>\n                            <StyledTableCell>{row.Dept}</StyledTableCell>\n                            <StyledTableCell>{row.Name}</StyledTableCell>\n                            <StyledTableCell>{row.GoodsValue}</StyledTableCell>\n                            <StyledTableCell>{row.Type}</StyledTableCell>\n                            <StyledTableCell>{row.Narrative}</StyledTableCell>\n                            <StyledTableCell>{row.TransactionAnalysis}</StyledTableCell>\n                        </StyledTableRow>\n                    ))}\n                    </TableBody>\n                    <TableFooter style={{borderTop:'2px solid rgba(0,0,0,0.3)'}}>\n                        <TableRow>\n                            <StyledTableCell>\n                                Totals\n                            </StyledTableCell>\n                            <StyledTableCell/>\n                            <StyledTableCell/>\n                            <StyledTableCell/>\n                            <StyledTableCell>\n                                {NAGoodsValueTotal()}\n                            </StyledTableCell>\n                            <StyledTableCell/>\n                            <StyledTableCell/>\n                            <StyledTableCell/>\n                        </TableRow>\n                    </TableFooter>\n                </Table>\n                </TableContainer>\n            </Paper>\n          </Grid>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<SaveIcon />}\n            style={{margin:'10px',marginBottom:'20px'}}\n            onClick={save}\n          >Save</Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            startIcon={<ClearIcon />}\n            style={{margin:'10px',marginBottom:'20px'}}\n            onClick={clear}\n          >Clear</Button>\n        </Grid>\n      </div>\n    );\n}\nexport default SalesCreditNote","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/create-amend-accounts/create-customer/panels/alerts.tsx",["245"],"import React, { useState } from 'react'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Grid from '@material-ui/core/Grid';\nimport BottomDrower from \"../../../../../../components/bottom-navigation\";\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            flexWrap: 'wrap',\n        },\n        table: {\n            minWidth: 650,\n        },\n        modal: {\n            width: 400,\n            backgroundColor: theme.palette.background.paper,\n            border: '2px solid #000',\n            boxShadow: theme.shadows[5],\n            padding: theme.spacing(2, 4, 3),\n        },\n        heading: {\n            paddingLeft: theme.spacing(1),\n            paddingRight: theme.spacing(1)\n        },\n\n    }),\n);\nconst Alerts: React.FC<{}> = () => {\n    const classes = useStyles()\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3}>\n                <Grid item xs={12} md={12} sm={6}>\n                    <h3 className={classes.heading}>Alerts</h3>\n                    <Grid item xs={12} md={12} sm={12}>\n                        <TableContainer component={Paper}>\n                            <Table className={classes.table} aria-label=\"simple table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>Created </TableCell>\n                                        <TableCell>Last Updates</TableCell>\n                                        <TableCell align=\"right\">User</TableCell>\n                                        <TableCell align=\"right\">Description</TableCell>\n                                        <TableCell align=\"right\">Active</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    <TableRow key={'row.name'}>\n                                        <TableCell component=\"th\" scope=\"row\"></TableCell>\n                                        <TableCell></TableCell>\n                                        <TableCell align=\"right\"></TableCell>\n                                        <TableCell align=\"right\"></TableCell>\n                                        <TableCell align=\"right\"></TableCell>\n                                    </TableRow>\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} md={12} sm={12}>\n                    <BottomDrower>\n                        <div/>\n                        <div>\n                            <Button variant=\"contained\">\n                                Add\n                        </Button>\n                            <Button variant=\"contained\" color=\"primary\">\n                                Edit\n                        </Button>\n                            <Button variant=\"contained\" color=\"primary\">\n                                Delete\n                        </Button>\n                            <Button variant=\"contained\" color=\"primary\">\n                                Set as Active\n                        </Button>\n                        </div>\n                    </BottomDrower>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\nexport default Alerts","/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/create-amend-accounts/create-customer/panels/credit.tsx",[],"/home/archana/Desktop/jan_warehouse/src/utils/history.tsx",[],"/home/archana/Desktop/jan_warehouse/src/templates/dashboard/summaries/index.tsx",[],"/home/archana/Desktop/jan_warehouse/src/templates/dashboard/summaries/financials/index.tsx",[],"/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/account-analysis/day-book/index.tsx",[],"/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/enter-transactions/sales-invoice/index.tsx",[],"/home/archana/Desktop/jan_warehouse/src/index.tsx",[],"/home/archana/Desktop/jan_warehouse/src/components/copyright-footer/index.tsx",[],"/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/account-analysis/txn-listing-current/index.tsx",[],"/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/create-amend-accounts/create-customer/panels/contacts.tsx",[],"/home/archana/Desktop/jan_warehouse/src/templates/dashboard/dashboard.tsx",[],"/home/archana/Desktop/jan_warehouse/src/components/sideNav/index.tsx",[],"/home/archana/Desktop/jan_warehouse/src/components/navWrapper/navItems.tsx",[],"/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/create-amend-accounts/create-customer/panels/modals/add-contacts.tsx",[],"/home/archana/Desktop/jan_warehouse/src/templates/dashboard/index.tsx",[],"/home/archana/Desktop/jan_warehouse/src/templates/dashboard/customers/account-analysis/list-of-accounts/index.tsx",[],{"ruleId":"246","replacedBy":"247"},{"ruleId":"248","replacedBy":"249"},{"ruleId":"250","severity":1,"message":"251","line":8,"column":8,"nodeType":"252","messageId":"253","endLine":8,"endColumn":12},{"ruleId":"250","severity":1,"message":"254","line":9,"column":8,"nodeType":"252","messageId":"253","endLine":9,"endColumn":12},{"ruleId":"246","replacedBy":"255"},{"ruleId":"248","replacedBy":"256"},{"ruleId":"250","severity":1,"message":"257","line":2,"column":10,"nodeType":"252","messageId":"253","endLine":2,"endColumn":22},{"ruleId":"250","severity":1,"message":"258","line":2,"column":36,"nodeType":"252","messageId":"253","endLine":2,"endColumn":41},{"ruleId":"250","severity":1,"message":"259","line":2,"column":43,"nodeType":"252","messageId":"253","endLine":2,"endColumn":53},{"ruleId":"250","severity":1,"message":"260","line":3,"column":62,"nodeType":"252","messageId":"253","endLine":3,"endColumn":70},{"ruleId":"250","severity":1,"message":"261","line":3,"column":72,"nodeType":"252","messageId":"253","endLine":3,"endColumn":88},{"ruleId":"250","severity":1,"message":"262","line":3,"column":90,"nodeType":"252","messageId":"253","endLine":3,"endColumn":95},{"ruleId":"250","severity":1,"message":"263","line":3,"column":97,"nodeType":"252","messageId":"253","endLine":3,"endColumn":106},{"ruleId":"250","severity":1,"message":"264","line":3,"column":119,"nodeType":"252","messageId":"253","endLine":3,"endColumn":133},{"ruleId":"250","severity":1,"message":"265","line":3,"column":156,"nodeType":"252","messageId":"253","endLine":3,"endColumn":167},{"ruleId":"250","severity":1,"message":"266","line":3,"column":187,"nodeType":"252","messageId":"253","endLine":3,"endColumn":197},{"ruleId":"250","severity":1,"message":"260","line":9,"column":8,"nodeType":"252","messageId":"253","endLine":9,"endColumn":16},{"ruleId":"250","severity":1,"message":"261","line":10,"column":8,"nodeType":"252","messageId":"253","endLine":10,"endColumn":24},{"ruleId":"250","severity":1,"message":"267","line":3,"column":20,"nodeType":"252","messageId":"253","endLine":3,"endColumn":24},{"ruleId":"250","severity":1,"message":"257","line":2,"column":10,"nodeType":"252","messageId":"253","endLine":2,"endColumn":22},{"ruleId":"250","severity":1,"message":"258","line":2,"column":36,"nodeType":"252","messageId":"253","endLine":2,"endColumn":41},{"ruleId":"250","severity":1,"message":"259","line":2,"column":43,"nodeType":"252","messageId":"253","endLine":2,"endColumn":53},{"ruleId":"250","severity":1,"message":"260","line":3,"column":62,"nodeType":"252","messageId":"253","endLine":3,"endColumn":70},{"ruleId":"250","severity":1,"message":"261","line":3,"column":72,"nodeType":"252","messageId":"253","endLine":3,"endColumn":88},{"ruleId":"250","severity":1,"message":"262","line":3,"column":90,"nodeType":"252","messageId":"253","endLine":3,"endColumn":95},{"ruleId":"250","severity":1,"message":"263","line":3,"column":97,"nodeType":"252","messageId":"253","endLine":3,"endColumn":106},{"ruleId":"250","severity":1,"message":"264","line":3,"column":119,"nodeType":"252","messageId":"253","endLine":3,"endColumn":133},{"ruleId":"250","severity":1,"message":"265","line":3,"column":156,"nodeType":"252","messageId":"253","endLine":3,"endColumn":167},{"ruleId":"250","severity":1,"message":"266","line":3,"column":187,"nodeType":"252","messageId":"253","endLine":3,"endColumn":197},{"ruleId":"250","severity":1,"message":"268","line":1,"column":17,"nodeType":"252","messageId":"253","endLine":1,"endColumn":25},{"ruleId":"250","severity":1,"message":"268","line":1,"column":17,"nodeType":"252","messageId":"253","endLine":1,"endColumn":25},{"ruleId":"269","severity":1,"message":"270","line":40,"column":6,"nodeType":"252","messageId":"271","endLine":40,"endColumn":22},{"ruleId":"246","replacedBy":"272"},{"ruleId":"248","replacedBy":"273"},{"ruleId":"250","severity":1,"message":"266","line":3,"column":187,"nodeType":"252","messageId":"253","endLine":3,"endColumn":197},{"ruleId":"250","severity":1,"message":"274","line":6,"column":8,"nodeType":"252","messageId":"253","endLine":6,"endColumn":15},{"ruleId":"250","severity":1,"message":"268","line":1,"column":17,"nodeType":"252","messageId":"253","endLine":1,"endColumn":25},"no-native-reassign",["275"],"no-negated-in-lhs",["276"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Grid' is defined but never used.",["275"],["276"],"'createStyles' is defined but never used.","'Theme' is defined but never used.","'withStyles' is defined but never used.","'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableContainer' is defined but never used.","'TableFooter' is defined but never used.","'IconButton' is defined but never used.","'Cell' is defined but never used.","'useState' is defined but never used.","@typescript-eslint/no-redeclare","'NavItemPropTypes' is already defined.","redeclared",["275"],["276"],"'AddIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]