[{"E:\\sage_clone\\jan_warehouse\\src\\App.tsx":"1","E:\\sage_clone\\jan_warehouse\\src\\templates\\login\\index.tsx":"2","E:\\sage_clone\\jan_warehouse\\src\\dashboardLayout\\index.tsx":"3","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\index.tsx":"4","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\summaries\\financials\\index.tsx":"5","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\summaries\\sales-orders\\index.tsx":"6","E:\\sage_clone\\jan_warehouse\\src\\components\\sideNav\\index.tsx":"7","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\account-analysis\\index.tsx":"8","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-current-transaction\\index.tsx":"9","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\create-and-amend-accounts\\genrate-new-nominal-account\\index.tsx":"10","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\create-and-amend-accounts\\amend-nominal-account-details\\index.tsx":"11","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-enquiries\\cash-flow-report\\index.tsx":"12","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-enquiries\\nominal-deferred-pending-postings\\index.tsx":"13","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\enter-transactions\\nominal-journal-entry\\index.tsx":"14","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\enter-transactions\\nominal-non-vatable-receipt\\index.tsx":"15","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\enter-transactions\\accrual-journal-entry\\index.tsx":"16","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\enter-transactions\\journal-templates\\index.tsx":"17","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\FixedAssets\\enter-new-asset\\index.tsx":"18","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\FixedAssets\\delete-asset\\index.tsx":"19","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\cash-position\\index.tsx":"20","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\standing-orders-and-direct-debits-enquiry\\index.tsx":"21","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\transaction-enquiries\\index.tsx":"22","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\create-amend-accounts\\create-bank-account\\index.tsx":"23","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-reports\\sage-bank-feed-faield-posting-report\\index.tsx":"24","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-reports\\account-not-active\\index.tsx":"25","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\enter-transactions\\sales-receipt\\index.tsx":"26","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\enter-transactions\\nominal-vatable-payment\\index.tsx":"27","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-list\\index.tsx":"28","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-current-transaction\\nominal-current-transaction.tsx":"29","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-list\\bank-account-list-table.tsx":"30","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\account-analysis\\trading-report-summary\\index.tsx":"31","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\account-analysis\\account-details\\index.tsx":"32","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\enter-transactions\\sales-invoice\\index.tsx":"33","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\create-amend-accounts\\create-bank-account\\AttachmentsTable.tsx":"34","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\create-amend-accounts\\amend-bank-account-details\\StatementBalance.tsx":"35","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\create-amend-accounts\\amend-bank-account-details\\Contact.tsx":"36","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\transaction-enquiries\\TransactionTable.tsx":"37","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\standing-orders-and-direct-debits-enquiry\\TransactionTable.tsx":"38","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\bank-account-enquiry\\AttachmentBalance.tsx":"39","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\bank-account-enquiry\\AccountDetails.tsx":"40","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\short-term-cash-projection\\SummaryTable.tsx":"41","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\cash-position\\who-owes-us-most-money-table.tsx":"42","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\create-amend-accounts\\create-bank-account\\CustomerListTable.tsx":"43","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\create-amend-accounts\\amend-bank-account-details\\StatementBalanceTable.tsx":"44","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\bank-txn-enquiry\\transaction-option.tsx":"45","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\bank-standing-orders-and-direct-debits\\payments-table.tsx":"46","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\bank-standing-orders-and-direct-debits\\standings-order-option.tsx":"47","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\bank-account-enquiry\\AttachmentsTable.tsx":"48","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-enquiries\\nominal-current-transaction-enquiry\\table1.tsx":"49","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-enquiries\\nominal-transaction-enquiry\\table.tsx":"50","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\create-and-amend-accounts\\create-new-nominal-account\\Memos.tsx":"51","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-enquiries\\nominal-enquiry\\Memo.tsx":"52","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-enquiries\\nominal-enquiry\\Attachments.tsx":"53","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-enquiries\\nominal-enquiry\\General.tsx":"54","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\create-and-amend-accounts\\amend-nominal-account-details\\Memo.tsx":"55","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\create-and-amend-accounts\\amend-nominal-account-details\\Attachment.tsx":"56","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\create-and-amend-accounts\\create-accounts-for-cost-center-department\\Costcenter_Department.tsx":"57","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\create-and-amend-accounts\\create-accounts-for-cost-center-department\\Department.tsx":"58","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\enter-transactions\\sales-credit-note\\index.tsx":"59","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\create-amend-accounts\\create-customer\\panels\\company.tsx":"60","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\create-amend-accounts\\create-customer\\panels\\payment.tsx":"61","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\create-amend-accounts\\create-customer\\panels\\credit.tsx":"62","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\create-amend-accounts\\create-customer\\panels\\memo.tsx":"63","E:\\sage_clone\\jan_warehouse\\src\\components\\navItem\\index.tsx":"64","E:\\sage_clone\\jan_warehouse\\src\\components\\bottom-navigation\\index.tsx":"65","E:\\sage_clone\\jan_warehouse\\src\\reportWebVitals.ts":"66","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\bank-account\\transactions\\index.tsx":"67","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\summaries\\stock-control\\index.tsx":"68","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\create-and-amend-accounts\\create-accounts-for-cost-center-department\\index.tsx":"69","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-enquiries\\nominal-transaction-enquiry\\index.tsx":"70","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\enter-transactions\\index.tsx":"71","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\create-and-amend-accounts\\create-new-nominal-account\\index.tsx":"72","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\enter-transactions\\prepayment-journal-entry\\index.tsx":"73","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\FixedAssets\\fixed-asset-list\\index.tsx":"74","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\FixedAssets\\dispose-asset\\index.tsx":"75","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\enter-transactions\\purchase-payment\\index.tsx":"76","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-reports\\direct-debit-and-standing-order\\index.tsx":"77","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-reports\\unpresented-cheques-payment\\index.tsx":"78","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-reports\\transection-listing-by-period\\index.tsx":"79","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\bank-txn-enquiry\\index.tsx":"80","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\bank-account-enquiry\\index.tsx":"81","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\bank-account-enquiry\\Memos.tsx":"82","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\transaction-enquiries\\NominalTable.tsx":"83","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\short-term-cash-projection\\Transactiontable.tsx":"84","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\bank-txn-enquiry\\transaction-table.tsx":"85","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\bank-account-enquiry\\AttachmentBalanceTable.tsx":"86","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\create-amend-accounts\\customer-delivery-addresses\\index.tsx":"87","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\account-analysis\\ec-sales-list\\index.tsx":"88","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\create-amend-accounts\\create-customer\\index.tsx":"89","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\create-amend-accounts\\create-customer\\panels\\pricing.tsx":"90","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\create-amend-accounts\\create-customer\\panels\\trading.tsx":"91","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\create-amend-accounts\\create-customer\\panels\\contacts.tsx":"92","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\cash-position\\why-do-we-owe-most-tabe.tsx":"93","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\cash-position\\who-owes-us-most-money-option.tsx":"94","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\cash-position\\bank-link-table.tsx":"95","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\create-amend-accounts\\create-bank-account\\Contact.tsx":"96","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\customer-list\\customer-list-table.tsx":"97","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-enquiries\\nominal-account-enquiry\\nominal-deferred-table2.tsx":"98","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-enquiries\\nominal-deferred-pending-postings\\nominal-deferred-table1.tsx":"99","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\create-and-amend-accounts\\create-new-nominal-account\\Budget_future\\Budget_future.tsx":"100","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-enquiries\\nominal-enquiry\\Budgets.tsx":"101","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\create-and-amend-accounts\\amend-nominal-account-details\\BudgetThisYear.tsx":"102","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\create-and-amend-accounts\\amend-nominal-account-details\\Analysis.tsx":"103","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-list\\nomial-list-table.tsx":"104","E:\\sage_clone\\jan_warehouse\\src\\components\\navWrapper\\navItems.tsx":"105","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\index.tsx":"106","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\index.tsx":"107","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\summaries\\sales\\index.tsx":"108","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\create-amend-accounts\\index.tsx":"109","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\customer-list\\index.tsx":"110","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-list\\index.tsx":"111","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\enter-transactions\\nominal-vatable-receipt\\index.tsx":"112","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-reports\\sage-bank-feed-posting-report\\index.tsx":"113","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\short-term-cash-projection\\index.tsx":"114","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-enquiries\\nominal-enquiry\\index.tsx":"115","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\Budgets\\amend-combined-nominal-budget\\index.tsx":"116","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\FixedAssets\\amend-asset\\index.tsx":"117","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\account-analysis\\txn-listing-current\\index.tsx":"118","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\enter-transactions\\sales-receipt\\index.tsx":"119","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\bank-standing-orders-and-direct-debits\\payments-option.tsx":"120","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-enquiries\\nominal-deferred-pending-postings\\nominal-deferred-table2.tsx":"121","E:\\sage_clone\\jan_warehouse\\src\\components\\navWrapper\\index.tsx":"122","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-enquiries\\nominal-enquiry\\Analysis.tsx":"123","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\create-and-amend-accounts\\amend-nominal-account-details\\BudgetFutureYear.tsx":"124","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\create-and-amend-accounts\\create-accounts-for-cost-center-department\\Cost_Center.tsx":"125","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\cash-position\\bank-list-option.tsx":"126","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\bank-txn-enquiry\\bank-account-option.tsx":"127","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\short-term-cash-projection\\AccountsTable.tsx":"128","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\create-and-amend-accounts\\create-new-nominal-account\\budget_year\\Budget_year.tsx":"129","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\create-amend-accounts\\amend-bank-account-details\\EBanking.tsx":"130","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\create-amend-accounts\\create-customer\\panels\\alerts.tsx":"131","E:\\sage_clone\\jan_warehouse\\src\\components\\tabpanel\\index.tsx":"132","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\create-amend-accounts\\amend-bank-account-details\\Memos.tsx":"133","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\create-amend-accounts\\amend-bank-account-details\\AccountDeatils.tsx":"134","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\create-amend-accounts\\amend-bank-account-details\\CustomerListTable.tsx":"135","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\summaries\\purchase-orders\\index.tsx":"136","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\enter-transactions\\sales-payment\\index.tsx":"137","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\enter-transactions\\inter-bank-transfer\\index.tsx":"138","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\enter-transactions\\purchase-receipt\\index.tsx":"139","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\create-amend-accounts\\amend-bank-account-details\\index.tsx":"140","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-list\\nominal-option.tsx":"141","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\create-and-amend-accounts\\create-new-nominal-account\\AnalysisCode.tsx":"142","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-enquiries\\nominal-account-enquiry\\nominal-deferred-table1.tsx":"143","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-enquiries\\nominal-current-transaction-enquiry\\table2.tsx":"144","E:\\sage_clone\\jan_warehouse\\src\\components\\page-internal-header\\index.tsx":"145","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\bank-account-enquiry\\Attachments.tsx":"146","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\bank-account-enquiry\\Contact.tsx":"147","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\create-amend-accounts\\create-bank-account\\EBanking.tsx":"148","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\create-amend-accounts\\create-bank-account\\Memos.tsx":"149","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\create-amend-accounts\\amend-bank-account-details\\Attachments.tsx":"150","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\account-analysis\\list-of-accounts\\index.tsx":"151","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\PurchaseOrderList\\index.tsx":"152","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\index.tsx":"153","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\PurchaseOrderList\\PurchaseOrderList.tsx":"154","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\PurchaseOrderList\\PurchaseOrderOptions.tsx":"155","E:\\sage_clone\\jan_warehouse\\src\\index.tsx":"156","E:\\sage_clone\\jan_warehouse\\src\\utils\\history.tsx":"157","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\dashboard.tsx":"158","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\summaries\\index.tsx":"159","E:\\sage_clone\\jan_warehouse\\src\\components\\copyright-footer\\index.tsx":"160","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\bank-account\\index.tsx":"161","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\index.tsx":"162","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\summaries\\purchases\\index.tsx":"163","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-enquiries\\nominal-current-transaction-enquiry\\index.tsx":"164","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\enter-transactions\\previous-year-journal-entry\\index.tsx":"165","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-reports\\direct-debit-and-standing-order-due\\index.tsx":"166","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\create-amend-accounts\\create-customer\\panels\\attachments.tsx":"167","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\create-amend-accounts\\create-customer\\panels\\modals\\add-contacts.tsx":"168","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\cash-position\\why-do-we-owe-most-option.tsx":"169","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-enquiries\\nominal-transaction-enquiry\\form.tsx":"170","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\create-and-amend-accounts\\amend-nominal-account-details\\Account.tsx":"171","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\bank-account-enquiry\\CustomerListTable.tsx":"172","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\enter-transactions\\nominal-non-vatable-payment\\index.tsx":"173","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-reports\\account-details-report\\index.tsx":"174","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\bank-standing-orders-and-direct-debits\\index.tsx":"175","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\create-and-amend-accounts\\create-new-nominal-account\\Attachment.tsx":"176","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\create-amend-accounts\\create-bank-account\\Attachments.tsx":"177","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\bank-account-enquiry\\EBanking.tsx":"178","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\create-amend-accounts\\amend-bank-account-details\\AttachmentsTable.tsx":"179","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\purchase-requisition\\EnterPurchaseRequisition.tsx":"180","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\purchase-requisition\\Purchase_Requisition_Authorization.tsx":"181","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\bank-standing-orders-and-direct-debits\\standings-order-table.tsx":"182","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\account-analysis\\day-book\\index.tsx":"183","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\enter-transactions\\nominal-vatable-receipt\\index.tsx":"184","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\purchase-requisition\\Generate_POFR\\PR_List.tsx":"185","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\purchase-requisition\\Generate_POFR\\PR_Lines.tsx":"186","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\purchase-requisition\\MAP_Requisition\\AR_Lines.tsx":"187","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\purchase-requisition\\MP_Requisition\\MPR_List.tsx":"188","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\FixedAssets\\depreciate-asset\\index.tsx":"189","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-current-transaction\\nominal-current-option.tsx":"190","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\bank-txn-enquiry\\bank-account-table.tsx":"191","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\standing-orders-and-direct-debits-enquiry\\NominalTable.tsx":"192","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\purchase-order-tab\\EnterNewPurchaseOrder.tsx":"193","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\purchase-order-tab\\AmmendOrder.tsx":"194","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\purchase-order-tab\\AmendOrderStatus.tsx":"195","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\purchase-order-tab\\GenerateOrders.tsx":"196","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\purchase-order-tab\\SupplierStockItems.tsx":"197","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Purchase-Return\\EnterNewPurchaseReturn.tsx":"198","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Purchase-Return\\AmendReurn.tsx":"199","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Purchase-Return\\AmendReturnStatus.tsx":"200","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Processing\\AuthoriseOrders.tsx":"201","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Processing\\AmendPurchaseOrderNotification.tsx":"202","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Processing\\POA\\PurchaseOrderAuthorisation.tsx":"203","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Processing\\POA\\MPOA_List.tsx":"204","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Processing\\PurchaseOrderNotification.tsx":"205","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Processing\\POA\\index.tsx":"206","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\enter-transactions\\currently-held-journals\\index.tsx":"207","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\Budgets\\combined-nominal-budgets\\index.tsx":"208","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\customer-enquiries\\index.tsx":"209","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\create-and-amend-accounts\\create-new-nominal-account\\Accounts.tsx":"210","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\purchase-requisition\\MP_Requisition\\PR_Lines.tsx":"211","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\create-amend-accounts\\create-bank-account\\AccountDeatils.tsx":"212","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Processing\\MyUnauthorisedPurchaseOrder.tsx":"213","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Processing\\Print_Orders.tsx":"214","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Processing\\PrintReturns.tsx":"215","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Processing\\ConfirmReceipt.tsx":"216","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-process-map\\index.tsx":"217","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\purchase-requisition\\Generate_POFR\\index.tsx":"218","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-reports\\transection-listing\\index.tsx":"219","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Processing\\AmendReceipt.tsx":"220","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Processing\\ConfiemDispatch.tsx":"221","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Processing\\AmendDespatch.tsx":"222","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-enquiries\\nominal-account-enquiry\\index.tsx":"223","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\create-amend-accounts\\create-customer\\panels\\documents.tsx":"224","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\purchase-requisition\\MAP_Requisition\\index.tsx":"225","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Processing\\RecordPurchaseInvoice.tsx":"226","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Processing\\RecordPurchaseCreditNote.tsx":"227","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Enquiry\\ViewPurchaseOrder.tsx":"228","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Enquiry\\ViewPurchaseOrderForStockItem.tsx":"229","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Enquiry\\PurchaseDocuments.tsx":"230","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Enquiry\\PurchaseDocumentLineEnquiry.tsx":"231","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Enquiry\\PurchaseInvoiceAndCredit.tsx":"232","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Enquiry\\ViewPurchaseReturn.tsx":"233"},{"size":554,"mtime":1621848705384,"results":"234","hashOfConfig":"235"},{"size":4351,"mtime":1621848705468,"results":"236","hashOfConfig":"235"},{"size":668,"mtime":1621848705390,"results":"237","hashOfConfig":"235"},{"size":6949,"mtime":1621848705452,"results":"238","hashOfConfig":"235"},{"size":244,"mtime":1621848705465,"results":"239","hashOfConfig":"235"},{"size":250,"mtime":1621848705466,"results":"240","hashOfConfig":"235"},{"size":1341,"mtime":1621848705389,"results":"241","hashOfConfig":"235"},{"size":996,"mtime":1621848705415,"results":"242","hashOfConfig":"235"},{"size":1381,"mtime":1621848705453,"results":"243","hashOfConfig":"235"},{"size":3807,"mtime":1621848705446,"results":"244","hashOfConfig":"235"},{"size":3144,"mtime":1621848705440,"results":"245","hashOfConfig":"235"},{"size":3370,"mtime":1621848705454,"results":"246","hashOfConfig":"235"},{"size":1460,"mtime":1621848705458,"results":"247","hashOfConfig":"235"},{"size":10527,"mtime":1621848705448,"results":"248","hashOfConfig":"235"},{"size":11352,"mtime":1621848705450,"results":"249","hashOfConfig":"235"},{"size":10351,"mtime":1621848705447,"results":"250","hashOfConfig":"235"},{"size":7285,"mtime":1621848705448,"results":"251","hashOfConfig":"235"},{"size":29860,"mtime":1621848705436,"results":"252","hashOfConfig":"235"},{"size":4926,"mtime":1621848705434,"results":"253","hashOfConfig":"235"},{"size":1861,"mtime":1621848917878,"results":"254","hashOfConfig":"235"},{"size":3265,"mtime":1621848917885,"results":"255","hashOfConfig":"235"},{"size":5158,"mtime":1621848917886,"results":"256","hashOfConfig":"235"},{"size":2913,"mtime":1621848705410,"results":"257","hashOfConfig":"235"},{"size":6556,"mtime":1621848705399,"results":"258","hashOfConfig":"235"},{"size":8197,"mtime":1621848705397,"results":"259","hashOfConfig":"235"},{"size":10539,"mtime":1621848705413,"results":"260","hashOfConfig":"235"},{"size":9493,"mtime":1621848705411,"results":"261","hashOfConfig":"235"},{"size":939,"mtime":1621848705395,"results":"262","hashOfConfig":"235"},{"size":11374,"mtime":1621848705454,"results":"263","hashOfConfig":"235"},{"size":7514,"mtime":1621848705395,"results":"264","hashOfConfig":"235"},{"size":181,"mtime":1621848705417,"results":"265","hashOfConfig":"235"},{"size":163,"mtime":1621848705414,"results":"266","hashOfConfig":"235"},{"size":23298,"mtime":1621848705428,"results":"267","hashOfConfig":"235"},{"size":8089,"mtime":1621848705408,"results":"268","hashOfConfig":"235"},{"size":893,"mtime":1621848705406,"results":"269","hashOfConfig":"235"},{"size":4061,"mtime":1621848705404,"results":"270","hashOfConfig":"235"},{"size":8591,"mtime":1621848917886,"results":"271","hashOfConfig":"235"},{"size":9219,"mtime":1621848917884,"results":"272","hashOfConfig":"235"},{"size":898,"mtime":1621848917868,"results":"273","hashOfConfig":"235"},{"size":5532,"mtime":1621848917867,"results":"274","hashOfConfig":"235"},{"size":6421,"mtime":1621848917882,"results":"275","hashOfConfig":"235"},{"size":10303,"mtime":1621848917878,"results":"276","hashOfConfig":"235"},{"size":7475,"mtime":1621848705408,"results":"277","hashOfConfig":"235"},{"size":7052,"mtime":1621848917887,"results":"278","hashOfConfig":"235"},{"size":1413,"mtime":1621848917876,"results":"279","hashOfConfig":"235"},{"size":7778,"mtime":1621848917873,"results":"280","hashOfConfig":"235"},{"size":1548,"mtime":1621848917873,"results":"281","hashOfConfig":"235"},{"size":8089,"mtime":1621848917869,"results":"282","hashOfConfig":"235"},{"size":11841,"mtime":1621848705457,"results":"283","hashOfConfig":"235"},{"size":10978,"mtime":1621848705462,"results":"284","hashOfConfig":"235"},{"size":8583,"mtime":1621848705444,"results":"285","hashOfConfig":"235"},{"size":9855,"mtime":1621848705460,"results":"286","hashOfConfig":"235"},{"size":9281,"mtime":1621848705459,"results":"287","hashOfConfig":"235"},{"size":2466,"mtime":1621848705460,"results":"288","hashOfConfig":"235"},{"size":6740,"mtime":1621848705439,"results":"289","hashOfConfig":"235"},{"size":5033,"mtime":1621848705438,"results":"290","hashOfConfig":"235"},{"size":4309,"mtime":1621848705441,"results":"291","hashOfConfig":"235"},{"size":3256,"mtime":1621848705441,"results":"292","hashOfConfig":"235"},{"size":25833,"mtime":1621848705427,"results":"293","hashOfConfig":"235"},{"size":6025,"mtime":1621848705420,"results":"294","hashOfConfig":"235"},{"size":3309,"mtime":1621848705423,"results":"295","hashOfConfig":"235"},{"size":7875,"mtime":1621848705421,"results":"296","hashOfConfig":"235"},{"size":3633,"mtime":1621848705422,"results":"297","hashOfConfig":"235"},{"size":3315,"mtime":1621848705386,"results":"298","hashOfConfig":"235"},{"size":617,"mtime":1621848705385,"results":"299","hashOfConfig":"235"},{"size":440,"mtime":1621848705392,"results":"300","hashOfConfig":"235"},{"size":157,"mtime":1621848705394,"results":"301","hashOfConfig":"235"},{"size":254,"mtime":1621848705468,"results":"302","hashOfConfig":"235"},{"size":3283,"mtime":1621848705441,"results":"303","hashOfConfig":"235"},{"size":1389,"mtime":1621848705462,"results":"304","hashOfConfig":"235"},{"size":714,"mtime":1621848705426,"results":"305","hashOfConfig":"235"},{"size":3206,"mtime":1621848705446,"results":"306","hashOfConfig":"235"},{"size":10358,"mtime":1621848705451,"results":"307","hashOfConfig":"235"},{"size":5323,"mtime":1621848705437,"results":"308","hashOfConfig":"235"},{"size":5436,"mtime":1621848705435,"results":"309","hashOfConfig":"235"},{"size":10547,"mtime":1621848705411,"results":"310","hashOfConfig":"235"},{"size":5716,"mtime":1621848705398,"results":"311","hashOfConfig":"235"},{"size":8171,"mtime":1621848705401,"results":"312","hashOfConfig":"235"},{"size":9896,"mtime":1621848705400,"results":"313","hashOfConfig":"235"},{"size":1573,"mtime":1621848917875,"results":"314","hashOfConfig":"235"},{"size":4969,"mtime":1621848917871,"results":"315","hashOfConfig":"235"},{"size":836,"mtime":1621848917871,"results":"316","hashOfConfig":"235"},{"size":8082,"mtime":1621848917886,"results":"317","hashOfConfig":"235"},{"size":9044,"mtime":1621848917883,"results":"318","hashOfConfig":"235"},{"size":7089,"mtime":1621848917876,"results":"319","hashOfConfig":"235"},{"size":7053,"mtime":1621848917868,"results":"320","hashOfConfig":"235"},{"size":196,"mtime":1621848705424,"results":"321","hashOfConfig":"235"},{"size":154,"mtime":1621848705415,"results":"322","hashOfConfig":"235"},{"size":3244,"mtime":1621848705418,"results":"323","hashOfConfig":"235"},{"size":3513,"mtime":1621848705423,"results":"324","hashOfConfig":"235"},{"size":7463,"mtime":1621848705424,"results":"325","hashOfConfig":"235"},{"size":4005,"mtime":1621848705420,"results":"326","hashOfConfig":"235"},{"size":10303,"mtime":1621848917880,"results":"327","hashOfConfig":"235"},{"size":1424,"mtime":1621848917878,"results":"328","hashOfConfig":"235"},{"size":8009,"mtime":1621848917877,"results":"329","hashOfConfig":"235"},{"size":4061,"mtime":1621848705408,"results":"330","hashOfConfig":"235"},{"size":10666,"mtime":1621848705426,"results":"331","hashOfConfig":"235"},{"size":12008,"mtime":1621848705456,"results":"332","hashOfConfig":"235"},{"size":11692,"mtime":1621848705458,"results":"333","hashOfConfig":"235"},{"size":7821,"mtime":1621848705443,"results":"334","hashOfConfig":"235"},{"size":9759,"mtime":1621848705460,"results":"335","hashOfConfig":"235"},{"size":8185,"mtime":1621848705439,"results":"336","hashOfConfig":"235"},{"size":2338,"mtime":1621848705438,"results":"337","hashOfConfig":"235"},{"size":8992,"mtime":1621848705463,"results":"338","hashOfConfig":"235"},{"size":2880,"mtime":1621848705387,"results":"339","hashOfConfig":"235"},{"size":1147,"mtime":1623322659630,"results":"340","hashOfConfig":"235"},{"size":7465,"mtime":1621848917888,"results":"341","hashOfConfig":"235"},{"size":22001,"mtime":1621848705467,"results":"342","hashOfConfig":"235"},{"size":513,"mtime":1621848705424,"results":"343","hashOfConfig":"235"},{"size":903,"mtime":1621848705426,"results":"344","hashOfConfig":"235"},{"size":1270,"mtime":1621848705463,"results":"345","hashOfConfig":"235"},{"size":11340,"mtime":1621848705450,"results":"346","hashOfConfig":"235"},{"size":7374,"mtime":1621848705400,"results":"347","hashOfConfig":"235"},{"size":6223,"mtime":1621848917883,"results":"348","hashOfConfig":"235"},{"size":4520,"mtime":1621848705461,"results":"349","hashOfConfig":"235"},{"size":5313,"mtime":1621848705431,"results":"350","hashOfConfig":"235"},{"size":11905,"mtime":1621848705433,"results":"351","hashOfConfig":"235"},{"size":172,"mtime":1621848705417,"results":"352","hashOfConfig":"235"},{"size":14944,"mtime":1621848705429,"results":"353","hashOfConfig":"235"},{"size":1410,"mtime":1621848917873,"results":"354","hashOfConfig":"235"},{"size":2120,"mtime":1621848705458,"results":"355","hashOfConfig":"235"},{"size":710,"mtime":1621848705387,"results":"356","hashOfConfig":"235"},{"size":8614,"mtime":1621848705459,"results":"357","hashOfConfig":"235"},{"size":7485,"mtime":1621848705438,"results":"358","hashOfConfig":"235"},{"size":3417,"mtime":1621848705440,"results":"359","hashOfConfig":"235"},{"size":1473,"mtime":1621848917877,"results":"360","hashOfConfig":"235"},{"size":1529,"mtime":1621848917875,"results":"361","hashOfConfig":"235"},{"size":7818,"mtime":1621848917880,"results":"362","hashOfConfig":"235"},{"size":2661,"mtime":1621848705445,"results":"363","hashOfConfig":"235"},{"size":3905,"mtime":1621848705405,"results":"364","hashOfConfig":"235"},{"size":3153,"mtime":1621848705419,"results":"365","hashOfConfig":"235"},{"size":902,"mtime":1621848705389,"results":"366","hashOfConfig":"235"},{"size":836,"mtime":1621848705405,"results":"367","hashOfConfig":"235"},{"size":9301,"mtime":1621848705403,"results":"368","hashOfConfig":"235"},{"size":7475,"mtime":1621848705404,"results":"369","hashOfConfig":"235"},{"size":262,"mtime":1621848705465,"results":"370","hashOfConfig":"235"},{"size":14944,"mtime":1621848705428,"results":"371","hashOfConfig":"235"},{"size":9227,"mtime":1621848705410,"results":"372","hashOfConfig":"235"},{"size":10545,"mtime":1621848705411,"results":"373","hashOfConfig":"235"},{"size":3139,"mtime":1621848705407,"results":"374","hashOfConfig":"235"},{"size":2003,"mtime":1621848705464,"results":"375","hashOfConfig":"235"},{"size":604,"mtime":1621848705442,"results":"376","hashOfConfig":"235"},{"size":11167,"mtime":1621848705455,"results":"377","hashOfConfig":"235"},{"size":12120,"mtime":1621848705457,"results":"378","hashOfConfig":"235"},{"size":2965,"mtime":1621848705388,"results":"379","hashOfConfig":"235"},{"size":1478,"mtime":1621848917868,"results":"380","hashOfConfig":"235"},{"size":3664,"mtime":1621848917870,"results":"381","hashOfConfig":"235"},{"size":3905,"mtime":1621848705409,"results":"382","hashOfConfig":"235"},{"size":836,"mtime":1621848705409,"results":"383","hashOfConfig":"235"},{"size":845,"mtime":1621848705403,"results":"384","hashOfConfig":"235"},{"size":163,"mtime":1621848705416,"results":"385","hashOfConfig":"235"},{"size":1295,"mtime":1623322874675,"results":"386","hashOfConfig":"235"},{"size":5981,"mtime":1624273484174,"results":"387","hashOfConfig":"235"},{"size":9502,"mtime":1623324558894,"results":"388","hashOfConfig":"235"},{"size":2638,"mtime":1624264175358,"results":"389","hashOfConfig":"235"},{"size":517,"mtime":1621848705390,"results":"390","hashOfConfig":"235"},{"size":97,"mtime":1621848705479,"results":"391","hashOfConfig":"235"},{"size":716,"mtime":1621848705430,"results":"392","hashOfConfig":"235"},{"size":1169,"mtime":1621848705465,"results":"393","hashOfConfig":"235"},{"size":576,"mtime":1621848705385,"results":"394","hashOfConfig":"235"},{"size":333,"mtime":1621848705393,"results":"395","hashOfConfig":"235"},{"size":929,"mtime":1621848705429,"results":"396","hashOfConfig":"235"},{"size":240,"mtime":1621848705466,"results":"397","hashOfConfig":"235"},{"size":1425,"mtime":1621848705456,"results":"398","hashOfConfig":"235"},{"size":7868,"mtime":1621848705451,"results":"399","hashOfConfig":"235"},{"size":7379,"mtime":1621848705397,"results":"400","hashOfConfig":"235"},{"size":3351,"mtime":1621848705419,"results":"401","hashOfConfig":"235"},{"size":5339,"mtime":1621848705423,"results":"402","hashOfConfig":"235"},{"size":1420,"mtime":1621848917879,"results":"403","hashOfConfig":"235"},{"size":2607,"mtime":1621848705461,"results":"404","hashOfConfig":"235"},{"size":6235,"mtime":1621848705437,"results":"405","hashOfConfig":"235"},{"size":7475,"mtime":1621848917870,"results":"406","hashOfConfig":"235"},{"size":11348,"mtime":1621848705449,"results":"407","hashOfConfig":"235"},{"size":8180,"mtime":1621848705396,"results":"408","hashOfConfig":"235"},{"size":1571,"mtime":1621848917872,"results":"409","hashOfConfig":"235"},{"size":5087,"mtime":1621848705443,"results":"410","hashOfConfig":"235"},{"size":845,"mtime":1621848705407,"results":"411","hashOfConfig":"235"},{"size":2707,"mtime":1621848917871,"results":"412","hashOfConfig":"235"},{"size":8089,"mtime":1621848705404,"results":"413","hashOfConfig":"235"},{"size":10643,"mtime":1623735836319,"results":"414","hashOfConfig":"235"},{"size":7119,"mtime":1623757169644,"results":"415","hashOfConfig":"235"},{"size":9951,"mtime":1621848917874,"results":"416","hashOfConfig":"235"},{"size":142,"mtime":1621848705415,"results":"417","hashOfConfig":"235"},{"size":9495,"mtime":1621848705411,"results":"418","hashOfConfig":"235"},{"size":2020,"mtime":1623755420437,"results":"419","hashOfConfig":"235"},{"size":2873,"mtime":1623755523395,"results":"420","hashOfConfig":"235"},{"size":6575,"mtime":1623757152539,"results":"421","hashOfConfig":"235"},{"size":2140,"mtime":1624262563466,"results":"422","hashOfConfig":"235"},{"size":4996,"mtime":1621848705435,"results":"423","hashOfConfig":"235"},{"size":2275,"mtime":1621848705453,"results":"424","hashOfConfig":"235"},{"size":9489,"mtime":1621848917875,"results":"425","hashOfConfig":"235"},{"size":7909,"mtime":1621848917884,"results":"426","hashOfConfig":"235"},{"size":22526,"mtime":1623866600301,"results":"427","hashOfConfig":"235"},{"size":12674,"mtime":1623867673602,"results":"428","hashOfConfig":"235"},{"size":12666,"mtime":1623855621554,"results":"429","hashOfConfig":"235"},{"size":4639,"mtime":1623859985897,"results":"430","hashOfConfig":"235"},{"size":8368,"mtime":1623861541521,"results":"431","hashOfConfig":"235"},{"size":21918,"mtime":1623866918872,"results":"432","hashOfConfig":"235"},{"size":12579,"mtime":1623867905375,"results":"433","hashOfConfig":"235"},{"size":12614,"mtime":1623867966507,"results":"434","hashOfConfig":"235"},{"size":6129,"mtime":1623871992663,"results":"435","hashOfConfig":"235"},{"size":9398,"mtime":1624262747616,"results":"436","hashOfConfig":"235"},{"size":5136,"mtime":1624085991139,"results":"437","hashOfConfig":"235"},{"size":5308,"mtime":1624086034370,"results":"438","hashOfConfig":"235"},{"size":4773,"mtime":1624086641397,"results":"439","hashOfConfig":"235"},{"size":308,"mtime":1624085338746,"results":"440","hashOfConfig":"235"},{"size":4288,"mtime":1621848705447,"results":"441","hashOfConfig":"235"},{"size":5301,"mtime":1621848705432,"results":"442","hashOfConfig":"235"},{"size":355,"mtime":1621848705425,"results":"443","hashOfConfig":"235"},{"size":6012,"mtime":1621848705442,"results":"444","hashOfConfig":"235"},{"size":2871,"mtime":1623757831685,"results":"445","hashOfConfig":"235"},{"size":9301,"mtime":1621848705407,"results":"446","hashOfConfig":"235"},{"size":4287,"mtime":1624092975093,"results":"447","hashOfConfig":"235"},{"size":14136,"mtime":1624107368816,"results":"448","hashOfConfig":"235"},{"size":14183,"mtime":1624123742420,"results":"449","hashOfConfig":"235"},{"size":20149,"mtime":1624123847811,"results":"450","hashOfConfig":"235"},{"size":158,"mtime":1621848705402,"results":"451","hashOfConfig":"235"},{"size":248,"mtime":1623754528657,"results":"452","hashOfConfig":"235"},{"size":9048,"mtime":1621848705401,"results":"453","hashOfConfig":"235"},{"size":12561,"mtime":1624114417729,"results":"454","hashOfConfig":"235"},{"size":17039,"mtime":1624115117425,"results":"455","hashOfConfig":"235"},{"size":12563,"mtime":1624115305588,"results":"456","hashOfConfig":"235"},{"size":1448,"mtime":1621848705455,"results":"457","hashOfConfig":"235"},{"size":3245,"mtime":1621848705421,"results":"458","hashOfConfig":"235"},{"size":248,"mtime":1623757025528,"results":"459","hashOfConfig":"235"},{"size":14101,"mtime":1624127725617,"results":"460","hashOfConfig":"235"},{"size":13818,"mtime":1624127648349,"results":"461","hashOfConfig":"235"},{"size":12643,"mtime":1624260508141,"results":"462","hashOfConfig":"235"},{"size":6978,"mtime":1624261383610,"results":"463","hashOfConfig":"235"},{"size":20560,"mtime":1624269809750,"results":"464","hashOfConfig":"235"},{"size":23054,"mtime":1624273717433,"results":"465","hashOfConfig":"235"},{"size":3377,"mtime":1624276773716,"results":"466","hashOfConfig":"235"},{"size":12591,"mtime":1624261562682,"results":"467","hashOfConfig":"235"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"470"},"1nspptx",{"filePath":"471","messages":"472","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"474"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"479"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"479"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"470"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"470"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"470"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504","usedDeprecatedRules":"493"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"508"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"511","usedDeprecatedRules":"486"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"514","usedDeprecatedRules":"508"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"517","usedDeprecatedRules":"508"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"508"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"522","usedDeprecatedRules":"486"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"525","usedDeprecatedRules":"508"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"470"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"530","usedDeprecatedRules":"486"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"533","usedDeprecatedRules":"486"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"536","usedDeprecatedRules":"470"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"539","usedDeprecatedRules":"540"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"470"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"479"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"479"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"470"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"553"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"470"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"479"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"479"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"569","usedDeprecatedRules":"470"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"470"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"553"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"508"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"470"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"470"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"479"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"553"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"470"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"600","usedDeprecatedRules":"493"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"603","usedDeprecatedRules":"470"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"470"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"479"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"610","usedDeprecatedRules":"470"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"553"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"479"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"619","usedDeprecatedRules":"486"},{"filePath":"620","messages":"621","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"622","usedDeprecatedRules":"486"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"553"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"479"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"470"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"633","usedDeprecatedRules":"493"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"470"},{"filePath":"638","messages":"639","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"642","usedDeprecatedRules":"470"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"645","usedDeprecatedRules":"474"},{"filePath":"646","messages":"647","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"648","usedDeprecatedRules":"470"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"651","usedDeprecatedRules":"493"},{"filePath":"652","messages":"653","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"654","usedDeprecatedRules":"470"},{"filePath":"655","messages":"656","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"657","usedDeprecatedRules":"479"},{"filePath":"658","messages":"659","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"660","usedDeprecatedRules":"564"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"470"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"553"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"667","messages":"668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"508"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"470"},{"filePath":"673","messages":"674","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"679","messages":"680","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"470"},{"filePath":"681","messages":"682","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"683","messages":"684","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"470"},{"filePath":"685","messages":"686","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"687","messages":"688","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"479"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"691","messages":"692","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"695","messages":"696","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"470"},{"filePath":"697","messages":"698","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"699","usedDeprecatedRules":"493"},{"filePath":"700","messages":"701","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"508"},{"filePath":"702","messages":"703","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"704","usedDeprecatedRules":"493"},{"filePath":"705","messages":"706","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"470"},{"filePath":"707","messages":"708","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"709","messages":"710","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"470"},{"filePath":"711","messages":"712","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"470"},{"filePath":"713","messages":"714","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"479"},{"filePath":"715","messages":"716","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"508"},{"filePath":"717","messages":"718","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"719","messages":"720","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"721","usedDeprecatedRules":"508"},{"filePath":"722","messages":"723","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"724","messages":"725","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"726","messages":"727","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"728","messages":"729","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"730","usedDeprecatedRules":"508"},{"filePath":"731","messages":"732","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"733","usedDeprecatedRules":"470"},{"filePath":"734","messages":"735","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"736","messages":"737","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"479"},{"filePath":"738","messages":"739","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"740","usedDeprecatedRules":"470"},{"filePath":"741","messages":"742","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"743","usedDeprecatedRules":"470"},{"filePath":"744","messages":"745","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"746","messages":"747","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"748","usedDeprecatedRules":"486"},{"filePath":"749","messages":"750","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"751","messages":"752","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"753","usedDeprecatedRules":"470"},{"filePath":"754","messages":"755","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"470"},{"filePath":"756","messages":"757","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"758","messages":"759","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"760","messages":"761","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"762","usedDeprecatedRules":"493"},{"filePath":"763","messages":"764","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"765","usedDeprecatedRules":"470"},{"filePath":"766","messages":"767","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"768","messages":"769","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"479"},{"filePath":"770","messages":"771","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"772","usedDeprecatedRules":"470"},{"filePath":"773","messages":"774","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"775","usedDeprecatedRules":"486"},{"filePath":"776","messages":"777","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"778","usedDeprecatedRules":"479"},{"filePath":"779","messages":"780","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"470"},{"filePath":"781","messages":"782","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"470"},{"filePath":"783","messages":"784","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"785","usedDeprecatedRules":"508"},{"filePath":"786","messages":"787","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"788","messages":"789","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"790","messages":"791","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"792","usedDeprecatedRules":"493"},{"filePath":"793","messages":"794","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"795","usedDeprecatedRules":"493"},{"filePath":"796","messages":"797","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"798","usedDeprecatedRules":"474"},{"filePath":"799","messages":"800","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"470"},{"filePath":"801","messages":"802","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"803","messages":"804","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"805","usedDeprecatedRules":"470"},{"filePath":"806","messages":"807","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"470"},{"filePath":"808","messages":"809","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"810","messages":"811","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"470"},{"filePath":"812","messages":"813","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"814","messages":"815","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"816","messages":"817","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"775","usedDeprecatedRules":"470"},{"filePath":"818","messages":"819","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"470"},{"filePath":"820","messages":"821","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"508"},{"filePath":"822","messages":"823","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"470"},{"filePath":"824","messages":"825","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"470"},{"filePath":"826","messages":"827","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"828","messages":"829","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"830","messages":"831","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"832","messages":"833","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"834"},{"filePath":"835","messages":"836","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"837","messages":"838","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"839","messages":"840","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"841","messages":"842","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"479"},{"filePath":"843","messages":"844","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"845","messages":"846","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"479"},{"filePath":"847","messages":"848","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"849","messages":"850","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"851","messages":"852","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"853","usedDeprecatedRules":"470"},{"filePath":"854","messages":"855","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"856","usedDeprecatedRules":"493"},{"filePath":"857","messages":"858","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"859","usedDeprecatedRules":"564"},{"filePath":"860","messages":"861","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"479"},{"filePath":"862","messages":"863","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"470"},{"filePath":"864","messages":"865","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"866","messages":"867","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"508"},{"filePath":"868","messages":"869","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"479"},{"filePath":"870","messages":"871","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"872","usedDeprecatedRules":"493"},{"filePath":"873","messages":"874","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"875","usedDeprecatedRules":"479"},{"filePath":"876","messages":"877","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"878","messages":"879","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"880","usedDeprecatedRules":"486"},{"filePath":"881","messages":"882","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"508"},{"filePath":"883","messages":"884","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"885","usedDeprecatedRules":"470"},{"filePath":"886","messages":"887","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"470"},{"filePath":"888","messages":"889","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"890","usedDeprecatedRules":"479"},{"filePath":"891","messages":"892","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"893","usedDeprecatedRules":"470"},{"filePath":"894","messages":"895","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"896","messages":"897","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"898","messages":"899","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"900","usedDeprecatedRules":"470"},{"filePath":"901","messages":"902","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"903","usedDeprecatedRules":"486"},{"filePath":"904","messages":"905","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"906","usedDeprecatedRules":"493"},{"filePath":"907","messages":"908","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"909","usedDeprecatedRules":"470"},{"filePath":"910","messages":"911","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"912","messages":"913","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"914","usedDeprecatedRules":"479"},{"filePath":"915","messages":"916","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"917","messages":"918","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"470"},{"filePath":"919","messages":"920","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"921","messages":"922","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"923"},{"filePath":"924","messages":"925","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"926","messages":"927","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"928","usedDeprecatedRules":"470"},{"filePath":"929","messages":"930","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"931","messages":"932","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"933","usedDeprecatedRules":"486"},{"filePath":"934","messages":"935","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"936","usedDeprecatedRules":"470"},{"filePath":"937","messages":"938","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"939"},{"filePath":"940","messages":"941","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"942","messages":"943","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"944","usedDeprecatedRules":"486"},{"filePath":"945","messages":"946","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"947"},{"filePath":"948","messages":"949","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"950","messages":"951","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"952","usedDeprecatedRules":"470"},{"filePath":"953","messages":"954","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"955","usedDeprecatedRules":"470"},{"filePath":"956","messages":"957","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"958","messages":"959","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"470"},{"filePath":"960","messages":"961","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"962","messages":"963","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"964","messages":"965","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"966","messages":"967","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"968","usedDeprecatedRules":"486"},{"filePath":"969","messages":"970","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"971","messages":"972","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"973","messages":"974","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"975"},{"filePath":"976","messages":"977","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"978","usedDeprecatedRules":"470"},{"filePath":"979","messages":"980","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"981","messages":"982","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"983","messages":"984","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"985","messages":"986","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"987","messages":"988","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"989","messages":"990","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"991","usedDeprecatedRules":"470"},{"filePath":"992","messages":"993","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"994","messages":"995","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"996","messages":"997","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"998","messages":"999","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1000","messages":"1001","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1002"},{"filePath":"1003","messages":"1004","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1005","messages":"1006","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1007","messages":"1008","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1009"},{"filePath":"1010","messages":"1011","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1012","messages":"1013","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1014","messages":"1015","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1016","messages":"1017","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\sage_clone\\jan_warehouse\\src\\App.tsx",[],["1018","1019"],"E:\\sage_clone\\jan_warehouse\\src\\templates\\login\\index.tsx",["1020","1021"],"import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Copyright from '../../components/copyright-footer';\r\nimport loginJson from '../../textJsonData/login.json'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        border: '1px solid rgb(172 172 172 / 54%)',\r\n        paddingTop: theme.spacing(6),\r\n        paddingLeft: theme.spacing(4),\r\n        paddingRight: theme.spacing(4),\r\n        paddingBottom: theme.spacing(6),\r\n        borderRadius: theme.spacing(1)\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', \r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst Login: React.FC<{history:any[]}> = ({history}) => {\r\n    const classes = useStyles();\r\n    const handleSubmit=()=>{\r\n        history.push('/dashboard')\r\n    }\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    {loginJson.title}\r\n                </Typography>\r\n                <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label={loginJson.form.labels.email}\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label={loginJson.form.labels.password}\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                        label={loginJson.form.labels.remember}\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                       {loginJson.form.labels.submitBtn}\r\n                    </Button>\r\n                    {/* <Grid container>\r\n                        <Grid item xs>\r\n                            <Link href=\"#\" variant=\"body2\">\r\n                            {loginJson.form.labels.forgotPassword}\r\n                             </Link>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Link href=\"#\" variant=\"body2\">\r\n                            {loginJson.form.labels.signUp}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid> */}\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\nexport default Login",["1022","1023"],"E:\\sage_clone\\jan_warehouse\\src\\dashboardLayout\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\index.tsx",[],["1024","1025"],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\summaries\\financials\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\summaries\\sales-orders\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\components\\sideNav\\index.tsx",[],["1026","1027"],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\account-analysis\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-current-transaction\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\create-and-amend-accounts\\genrate-new-nominal-account\\index.tsx",[],["1028","1029"],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\create-and-amend-accounts\\amend-nominal-account-details\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-enquiries\\cash-flow-report\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-enquiries\\nominal-deferred-pending-postings\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\enter-transactions\\nominal-journal-entry\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\enter-transactions\\nominal-non-vatable-receipt\\index.tsx",["1030"],"import React from \"react\"\r\nimport Grid from '@material-ui/core/Grid'\r\nimport {createStyles, makeStyles, Theme, withStyles} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker} from '@material-ui/pickers';\r\n\r\nconst BootstrapInput = withStyles((theme : Theme) => createStyles({\r\n    input: {\r\n        borderRadius: 4,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '1px solid #ced4da',\r\n        fontSize: 16,\r\n        padding: '7px 26px 7px 12px',\r\n        transition: theme\r\n            .transitions\r\n            .create(['border-color', 'box-shadow']),\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"'\r\n        ].join(','),\r\n        '&:focus': {\r\n            borderRadius: 4,\r\n            borderColor: '#80bdff',\r\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)'\r\n        }\r\n    }\r\n}),)(InputBase);\r\n\r\nconst useStyles = makeStyles((theme : Theme) => createStyles({\r\n    NominalVatableReceipt: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    NVtitle: {\r\n        fontSize: '20px',\r\n        fontWeight: 'bold'\r\n    },\r\n    NVFieldWrapper: {\r\n        padding: '10px 0'\r\n    },\r\n    NVlabel: {\r\n        lineHeight: '30px',\r\n        paddingRight: theme.spacing(2)\r\n    },\r\n    NVformWrapper: {\r\n        paddingTop: theme.spacing(2)\r\n    },\r\n    NVtable: {\r\n        width: '100%'\r\n    }\r\n}),)\r\n\r\n// table info\r\nfunction createData(code : number, cc : string, department : string, name : string, reference : string, narrative : string, transition : number, transda : string, grossvalue : number, vatco : number, rate : number, goodval : string, vatvalue : number) {\r\n    return {\r\n        code,\r\n        cc,\r\n        department,\r\n        name,\r\n        reference,\r\n        narrative,\r\n        transition,\r\n        transda,\r\n        grossvalue,\r\n        vatco,\r\n        rate,\r\n        goodval,\r\n        vatvalue\r\n    };\r\n}\r\n\r\nconst rows = [createData(1011, 'dummy', 'dummy', 'dummy', 'dummy', 'dummy', 1234, 'dummy', 123, 123, 123, 'dummy', 123)];\r\nconst Nominal_non_vatable_receipt : React.FC < {} > = () => {\r\n    const [selectedDate,\r\n        setSelectedDate] = React.useState < Date | null > (new Date(),);\r\n\r\n    const handleDateChange = (date : Date | null) => {\r\n        setSelectedDate(date);\r\n    };\r\n    const classes = useStyles();\r\n    const [bankaccount,\r\n        setBankaccount] = React.useState('');\r\n    const handleChange = (event : React.ChangeEvent < {\r\n        value: unknown\r\n    } >) => {\r\n        setBankaccount(event.target.value as string);\r\n    };\r\n    return (\r\n        <div className={classes.NominalVatableReceipt}>\r\n            <Grid container spacing={3}>\r\n                <Grid item lg={12}>\r\n                    <Typography className={classes.NVtitle}>Bank</Typography>\r\n                    <div className={classes.NVformWrapper}>\r\n                        <form>\r\n                            <div className={classes.NVFieldWrapper}>\r\n                                <label className={classes.NVlabel}>Bank Account</label>\r\n                                <NativeSelect\r\n                                    id=\"demo-customized-select-native\"\r\n                                    value={bankaccount}\r\n                                    onChange={handleChange}\r\n                                    input={< BootstrapInput />}>\r\n                                    <option aria-label=\"None\" value=\"\"/>\r\n                                    <option value={10}>Ten</option>\r\n                                    <option value={20}>Twenty</option>\r\n                                    <option value={30}>Thirty</option>\r\n                                </NativeSelect>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                            </div>\r\n                            <div className={classes.NVFieldWrapper}>\r\n                                <label className={classes.NVlabel}>Account Type :</label>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                                &nbsp; &nbsp;\r\n                                <label className={classes.NVlabel}>Currency :</label>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                                &nbsp; &nbsp;\r\n                                <label className={classes.NVlabel}>Exchange rate to base :</label>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item lg={12}>\r\n                    <Typography className={classes.NVtitle}>Transaction Details</Typography>\r\n                    <div className={classes.NVformWrapper}>\r\n                        <form>\r\n                            <div className={classes.NVFieldWrapper}>\r\n                                <label className={classes.NVlabel}>Cheque Number :</label>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                                <label className={classes.NVlabel}>2nd ref :</label>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                            </div>\r\n                            <div className={classes.NVFieldWrapper}>\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                    <label\r\n                                        style={{\r\n                                        lineHeight: '55px'\r\n                                    }}>Transactions Date :</label>\r\n                                    <KeyboardDatePicker\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-dialog\"\r\n                                        format=\"MM/dd/yyyy\"\r\n                                        value={selectedDate}\r\n                                        onChange={handleDateChange}\r\n                                        KeyboardButtonProps={{\r\n                                        'aria-label': 'change date'\r\n                                    }}/></MuiPickersUtilsProvider>\r\n                                &nbsp;&nbsp;\r\n                                <label className={classes.NVlabel}>Narrative :</label>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item lg={12}>\r\n                    <Typography className={classes.NVtitle}>Nominal Transactions</Typography>\r\n                    <TableContainer component={Paper}>\r\n                        <Table className={classes.NVtable} aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Code</TableCell>\r\n                                    <TableCell align=\"right\">CC</TableCell>\r\n                                    <TableCell align=\"right\">Dept</TableCell>\r\n                                    <TableCell align=\"right\">Department</TableCell>\r\n                                    <TableCell align=\"right\">Name</TableCell>\r\n                                    <TableCell align=\"right\">Reference</TableCell>\r\n                                    <TableCell align='right'>Narrative</TableCell>\r\n                                    <TableCell align='right'>Transaction</TableCell>\r\n                                    <TableCell align='right'>Trans. Da</TableCell>\r\n                                    <TableCell align='right'>Gross value</TableCell>\r\n                                    <TableCell align='right'>VAT Co</TableCell>\r\n                                    <TableCell align='right'>Rate</TableCell>\r\n                                    <TableCell align='right'>Goods Val</TableCell>\r\n                                    <TableCell align='right'>VAT Value</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {rows.map((row) => (\r\n                                    <TableRow key={row.name}>\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {row.name}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">{row.code}</TableCell>\r\n                                        <TableCell align=\"right\">{row.cc}</TableCell>\r\n                                        <TableCell align=\"right\">{row.department}</TableCell>\r\n                                        <TableCell align=\"right\">{row.name}</TableCell>\r\n                                        <TableCell align=\"right\">{row.reference}</TableCell>\r\n                                        <TableCell align=\"right\">{row.narrative}</TableCell>\r\n                                        <TableCell align=\"right\">{row.transition}</TableCell>\r\n                                        <TableCell align=\"right\">{row.transda}</TableCell>\r\n                                        <TableCell align=\"right\">{row.grossvalue}</TableCell>\r\n                                        <TableCell align=\"right\">{row.vatco}</TableCell>\r\n                                        <TableCell align=\"right\">{row.rate}</TableCell>\r\n                                        <TableCell align=\"right\">{row.goodval}</TableCell>\r\n                                        <TableCell align=\"right\">{row.vatvalue}</TableCell>\r\n\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nominal_non_vatable_receipt","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\enter-transactions\\accrual-journal-entry\\index.tsx",["1031"],"import React from \"react\"\r\nimport Grid from '@material-ui/core/Grid'\r\nimport {createStyles, makeStyles, Theme, withStyles} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker} from '@material-ui/pickers';\r\n\r\nconst BootstrapInput = withStyles((theme : Theme) => createStyles({\r\n    input: {\r\n        borderRadius: 4,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '1px solid #ced4da',\r\n        fontSize: 16,\r\n        padding: '7px 26px 7px 12px',\r\n        transition: theme\r\n            .transitions\r\n            .create(['border-color', 'box-shadow']),\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"'\r\n        ].join(','),\r\n        '&:focus': {\r\n            borderRadius: 4,\r\n            borderColor: '#80bdff',\r\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)'\r\n        }\r\n    }\r\n}),)(InputBase);\r\n\r\nconst useStyles = makeStyles((theme : Theme) => createStyles({\r\n    NominalVatableReceipt: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    NVtitle: {\r\n        fontSize: '20px',\r\n        fontWeight: 'bold'\r\n    },\r\n    NVFieldWrapper: {\r\n        padding: '10px 0'\r\n    },\r\n    NVlabel: {\r\n        lineHeight: '30px',\r\n        paddingRight: theme.spacing(2)\r\n    },\r\n    NVformWrapper: {\r\n        paddingTop: theme.spacing(2)\r\n    },\r\n    NVtable: {\r\n        width: '100%'\r\n    }\r\n}),)\r\n\r\n// table info\r\nfunction createData(code : number, cc : string, department : string, name : string, reference : string, narrative : string, transition : number, transda : string, grossvalue : number, vatco : number, rate : number, goodval : string, vatvalue : number) {\r\n    return {\r\n        code,\r\n        cc,\r\n        department,\r\n        name,\r\n        reference,\r\n        narrative,\r\n        transition,\r\n        transda,\r\n        grossvalue,\r\n        vatco,\r\n        rate,\r\n        goodval,\r\n        vatvalue\r\n    };\r\n}\r\n\r\nconst rows = [createData(1011, 'dummy', 'dummy', 'dummy', 'dummy', 'dummy', 1234, 'dummy', 123, 123, 123, 'dummy', 123)];\r\nconst AccrualJournalEntry : React.FC < {} > = () => {\r\n    const [selectedDate,\r\n        setSelectedDate] = React.useState < Date | null > (new Date(),);\r\n\r\n    const handleDateChange = (date : Date | null) => {\r\n        setSelectedDate(date);\r\n    };\r\n    const classes = useStyles();\r\n    const [bankaccount,\r\n        setBankaccount] = React.useState('');\r\n    const handleChange = (event : React.ChangeEvent < {\r\n        value: unknown\r\n    } >) => {\r\n        setBankaccount(event.target.value as string);\r\n    };\r\n    return (\r\n        <div className={classes.NominalVatableReceipt}>\r\n            <Grid container spacing={3}>\r\n                <Grid item lg={12}>\r\n                    <Typography className={classes.NVtitle}>Posting Accounts</Typography>\r\n                    <div className={classes.NVformWrapper}>\r\n                        <form>\r\n                            <div className={classes.NVFieldWrapper}>\r\n                                <label className={classes.NVlabel}>Balance Sheet</label>\r\n                                <NativeSelect\r\n                                    id=\"demo-customized-select-native\"\r\n                                    value={bankaccount}\r\n                                    onChange={handleChange}\r\n                                    input={< BootstrapInput />}>\r\n                                    <option aria-label=\"None\" value=\"\"/>\r\n                                    <option value={10}>Ten</option>\r\n                                    <option value={20}>Twenty</option>\r\n                                    <option value={30}>Thirty</option>\r\n                                </NativeSelect>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                            </div>\r\n                            <div className={classes.NVFieldWrapper}>\r\n                                <label className={classes.NVlabel}>Profit And Loss</label>\r\n                                <NativeSelect\r\n                                    id=\"demo-customized-select-native\"\r\n                                    value={bankaccount}\r\n                                    onChange={handleChange}\r\n                                    input={< BootstrapInput />}>\r\n                                    <option aria-label=\"None\" value=\"\"/>\r\n                                    <option value={10}>Ten</option>\r\n                                    <option value={20}>Twenty</option>\r\n                                    <option value={30}>Thirty</option>\r\n                                </NativeSelect>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                            </div>\r\n                            <div className={classes.NVFieldWrapper}>\r\n                                <label className={classes.NVlabel}>Transaction Analysis</label>\r\n                                <NativeSelect\r\n                                    id=\"demo-customized-select-native\"\r\n                                    value={bankaccount}\r\n                                    onChange={handleChange}\r\n                                    input={< BootstrapInput />}>\r\n                                    <option aria-label=\"None\" value=\"\"/>\r\n                                    <option value={10}>Ten</option>\r\n                                    <option value={20}>Twenty</option>\r\n                                    <option value={30}>Thirty</option>\r\n                                </NativeSelect>\r\n                                </div>\r\n                        </form>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item lg={12}>\r\n                    <Typography className={classes.NVtitle}>Accrual Details</Typography>\r\n                    <div className={classes.NVformWrapper}>\r\n                        <form>\r\n                            <div className={classes.NVFieldWrapper}>\r\n                                <label className={classes.NVlabel}>Total Value :</label>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                                <label className={classes.NVlabel}>Reference :</label>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                            </div>\r\n                            <div className={classes.NVFieldWrapper}>\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                    <label\r\n                                        style={{\r\n                                        lineHeight: '55px'\r\n                                    }}>Reversal Date :</label>\r\n                                    <KeyboardDatePicker\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-dialog\"\r\n                                        format=\"MM/dd/yyyy\"\r\n                                        value={selectedDate}\r\n                                        onChange={handleDateChange}\r\n                                        KeyboardButtonProps={{\r\n                                        'aria-label': 'change date'\r\n                                    }}/></MuiPickersUtilsProvider>\r\n                                &nbsp;&nbsp;\r\n                                <label className={classes.NVlabel}>Narrative :</label>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item lg={12}>\r\n                    <Typography className={classes.NVtitle}>Nominal Transactions</Typography>\r\n                    <TableContainer component={Paper}>\r\n                        <Table className={classes.NVtable} aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Code</TableCell>\r\n                                    <TableCell align=\"right\">Date</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {rows.map((row) => (\r\n                                    <TableRow key={row.name}>\r\n                                        <TableCell align=\"right\">{row.code}</TableCell>\r\n                                        <TableCell align=\"right\">12-02-2021</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AccrualJournalEntry\r\n\r\n\r\n",["1032","1033"],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\enter-transactions\\journal-templates\\index.tsx",["1034","1035","1036","1037","1038","1039","1040","1041","1042","1043"],"import React from \"react\"\r\nimport Grid from '@material-ui/core/Grid'\r\nimport {createStyles, makeStyles, Theme, withStyles} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker} from '@material-ui/pickers';\r\n\r\nconst BootstrapInput = withStyles((theme : Theme) => createStyles({\r\n    input: {\r\n        borderRadius: 4,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '1px solid #ced4da',\r\n        fontSize: 16,\r\n        padding: '7px 26px 7px 12px',\r\n        transition: theme\r\n            .transitions\r\n            .create(['border-color', 'box-shadow']),\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"'\r\n        ].join(','),\r\n        '&:focus': {\r\n            borderRadius: 4,\r\n            borderColor: '#80bdff',\r\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)'\r\n        }\r\n    }\r\n}),)(InputBase);\r\n\r\nconst useStyles = makeStyles((theme : Theme) => createStyles({\r\n    NominalVatableReceipt: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    NVtitle: {\r\n        fontSize: '20px',\r\n        fontWeight: 'bold'\r\n    },\r\n    NVFieldWrapper: {\r\n        padding: '10px 0'\r\n    },\r\n    NVlabel: {\r\n        lineHeight: '30px',\r\n        paddingRight: theme.spacing(2)\r\n    },\r\n    NVformWrapper: {\r\n        paddingTop: theme.spacing(2)\r\n    },\r\n    NVtable: {\r\n        width: '100%'\r\n    }\r\n}),)\r\n\r\n// table info\r\nfunction createData(code : number, cc : string, department : string, name : string, reference : string, narrative : string, transition : number, transda : string, grossvalue : number, vatco : number, rate : number, goodval : string, vatvalue : number) {\r\n    return {\r\n        code,\r\n        cc,\r\n        department,\r\n        name,\r\n        reference,\r\n        narrative,\r\n        transition,\r\n        transda,\r\n        grossvalue,\r\n        vatco,\r\n        rate,\r\n        goodval,\r\n        vatvalue\r\n    };\r\n}\r\n\r\nconst rows = [createData(1011, 'dummy', 'dummy', 'dummy', 'dummy', 'dummy', 1234, 'dummy', 123, 123, 123, 'dummy', 123)];\r\nconst JournalTemplates : React.FC < {} > = () => {\r\n    const [selectedDate,\r\n        setSelectedDate] = React.useState < Date | null > (new Date(),);\r\n\r\n    const handleDateChange = (date : Date | null) => {\r\n        setSelectedDate(date);\r\n    };\r\n    const classes = useStyles();\r\n    const [bankaccount,\r\n        setBankaccount] = React.useState('');\r\n    const handleChange = (event : React.ChangeEvent < {\r\n        value: unknown\r\n    } >) => {\r\n        setBankaccount(event.target.value as string);\r\n    };\r\n    return (\r\n        <div className={classes.NominalVatableReceipt}>\r\n            <Grid container spacing={3}>\r\n\r\n                <Grid item lg={12}>\r\n                    <Typography className={classes.NVtitle}>Current Template</Typography>\r\n                    <TableContainer component={Paper}>\r\n                        <Table className={classes.NVtable} aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"right\">Name</TableCell>\r\n                                    <TableCell align=\"right\">Created By</TableCell>\r\n                                    <TableCell align='right'>Max No. of uses</TableCell>\r\n                                    <TableCell align='right'>Start Date</TableCell>\r\n                                    <TableCell align='right'>End Date</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {rows.map((row) => (\r\n                                    <TableRow key={row.name}>\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {row.name}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">{row.code}</TableCell>\r\n                                        <TableCell align=\"right\">{row.cc}</TableCell>\r\n                                        <TableCell align=\"right\">{row.department}</TableCell>\r\n                                        <TableCell align=\"right\">{row.name}</TableCell>\r\n                                        <TableCell align=\"right\">{row.reference}</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Grid>\r\n           \r\n                <Grid item lg={12}>\r\n                    <Typography className={classes.NVtitle}>Template Details</Typography>\r\n                    <div className={classes.NVformWrapper}>\r\n                        <form>\r\n                            <div className={classes.NVFieldWrapper}>\r\n                                <label className={classes.NVlabel}>Last used on :</label>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                                <label className={classes.NVlabel}>Debit Total :</label>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                            </div>\r\n                            <div className={classes.NVFieldWrapper}>\r\n                                <label className={classes.NVlabel}>Number of useds :</label>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                                <label className={classes.NVlabel}>Credit Total :</label>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                                <label className={classes.NVlabel}>Balance :</label>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </Grid>\r\n                \r\n           \r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JournalTemplates\r\n\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\FixedAssets\\enter-new-asset\\index.tsx",["1044","1045"],"// import React from \"react\"\r\n// import Grid from '@material-ui/core/Grid'\r\n// import NativeSelect from '@material-ui/core/NativeSelect';\r\n// import {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\r\n// import Typography from '@material-ui/core/Typography/Typography'\r\n// import TextField from '@material-ui/core/TextField';\r\n// import MenuItem from '@material-ui/core/MenuItem';\r\n// import Select from '@material-ui/core/Select';\r\n// import DateFnsUtils from '@date-io/date-fns';\r\n// import {MuiPickersUtilsProvider, KeyboardDatePicker} from '@material-ui/pickers';\r\n\r\n// import Button from '@material-ui/core/Button';\r\n\r\n// const BootstrapInput = withStyles((theme : Theme) => createStyles({\r\n//     input: {\r\n//         borderRadius: 4,\r\n//         backgroundColor: theme.palette.background.paper,\r\n//         border: '1px solid #ced4da',\r\n//         fontSize: 16,\r\n//         padding: '7px 26px 7px 12px',\r\n//         transition: theme\r\n//             .transitions\r\n//             .create(['border-color', 'box-shadow']),\r\n//         fontFamily: [\r\n//             '-apple-system',\r\n//             'BlinkMacSystemFont',\r\n//             '\"Segoe UI\"',\r\n//             'Roboto',\r\n//             '\"Helvetica Neue\"',\r\n//             'Arial',\r\n//             'sans-serif',\r\n//             '\"Apple Color Emoji\"',\r\n//             '\"Segoe UI Emoji\"',\r\n//             '\"Segoe UI Symbol\"'\r\n//         ].join(','),\r\n//         '&:focus': {\r\n//             borderRadius: 4,\r\n//             borderColor: '#80bdff',\r\n//             boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)'\r\n//         }\r\n//     }\r\n// }),)(InputBase);\r\n\r\n// const useStyles = makeStyles((theme : Theme) => createStyles({\r\n//     root: {\r\n//         '& > *': {\r\n//             display: 'flex',\r\n//             flexDirection: 'row',\r\n//             margin: theme.spacing(2),\r\n//             width: '100%'\r\n//         }\r\n//     },\r\n//     accountsWrapper: {},\r\n//     title: {\r\n//         textAlign: 'left',\r\n//         fontSize: '17px',\r\n//         fontWeight: 'bold'\r\n//     },\r\n//     inputFieldWrapperNomialJournal: {\r\n//         width: '30%',\r\n//         display: 'flex',\r\n//         flexDirection: 'column',\r\n//         paddingTop: theme.spacing(3)\r\n//     },\r\n//     label: {\r\n//         width: '15%',\r\n//         fontSize: '15px',\r\n//         paddingRight: theme.spacing(2),\r\n//         paddingTop: theme.spacing(2)\r\n//     },\r\n//     inputFieldWrapper: {},\r\n//     selectTab: {\r\n//         borderBottom: 'none',\r\n//         border: '.5px solid rgb(211,211,211,0.7)',\r\n//     },\r\n//      selectTabActive: {\r\n//         borderBottom: 'none',\r\n//         border: '.5px solid rgb(211,211,211,0.7)',\r\n//         width:'100px'\r\n//     },\r\n//     buttonWrapper:{\r\n//         margin:theme.spacing(3)\r\n//     },\r\n// inputwraper: {marginLeft:theme.spacing(2)},\r\n// input: {\r\n//     borderRadius: 4,\r\n//     backgroundColor: theme.palette.background.paper,\r\n//     border: '1px solid #ced4da',\r\n//     fontSize: 16,\r\n//     padding: '7px 26px 7px 12px',\r\n//     transition: theme\r\n//         .transitions\r\n//         .create(['border-color', 'box-shadow']),\r\n//     fontFamily: [\r\n//         '-apple-system',\r\n//         'BlinkMacSystemFont',\r\n//         '\"Segoe UI\"',\r\n//         'Roboto',\r\n//         '\"Helvetica Neue\"',\r\n//         'Arial',\r\n//         'sans-serif',\r\n//         '\"Apple Color Emoji\"',\r\n//         '\"Segoe UI Emoji\"',\r\n//         '\"Segoe UI Symbol\"'\r\n//     ].join(','),\r\n//     '&:focus': {\r\n//         borderRadius: 4,\r\n//         borderColor: '#80bdff',\r\n//         boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)'\r\n//     }\r\n// }\r\n// }),);\r\n\r\n// const EnterNewAsset : React.FC < {} > = () => {\r\n//     const classes = useStyles();\r\n//     const [selectedDate,\r\n//         setSelectedDate] = React.useState < Date | null > (new Date(),);\r\n//         const handleDateChange = (date : Date | null) => {\r\n//             setSelectedDate(date);\r\n//         };\r\n\r\n//     return (\r\n//      <>\r\n//      <div className={classes.accountsWrapper}>\r\n\r\n//      <Grid item lg={12}>\r\n//                     <Typography className={classes.NVtitle}>Bank</Typography>\r\n//                     <div className={classes.NVformWrapper}>\r\n//                         <form>\r\n//                             <div className={classes.NVFieldWrapper}>\r\n//                                 <label className={classes.NVlabel}>Bank Account</label>\r\n//                                 <NativeSelect\r\n//                                     id=\"demo-customized-select-native\"\r\n//                                     value={bankaccount}\r\n//                                     onChange={handleChange}\r\n//                                     input={< BootstrapInput />}>\r\n//                                     <option aria-label=\"None\" value=\"\"/>\r\n//                                     <option value={10}>Ten</option>\r\n//                                     <option value={20}>Twenty</option>\r\n//                                     <option value={30}>Thirty</option>\r\n//                                 </NativeSelect>\r\n//                                 <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n//                                 <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n//                                 <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n//                             </div>\r\n//                             <div className={classes.NVFieldWrapper}>\r\n//                                 <label className={classes.NVlabel}>Account Type :</label>\r\n//                                 <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n//                                 &nbsp; &nbsp;\r\n//                                 <label className={classes.NVlabel}>Currency :</label>\r\n//                                 <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n//                                 &nbsp; &nbsp;\r\n//                                 <label className={classes.NVlabel}>Exchange rate to base :</label>\r\n//                                 <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n//                             </div>\r\n//                         </form>\r\n//                     </div>\r\n//                 </Grid>\r\n//                 <Grid item lg={12}>\r\n//                     <Typography className={classes.NVtitle}>Transaction Details</Typography>\r\n//                     <div className={classes.NVformWrapper}>\r\n//                         <form>\r\n//                             <div className={classes.NVFieldWrapper}>\r\n//                                 <label className={classes.NVlabel}>Cheque Number :</label>\r\n//                                 <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n//                                 &nbsp; &nbsp; &nbsp; &nbsp;\r\n//                                 <label className={classes.NVlabel}>2nd ref :</label>\r\n//                                 <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n//                             </div>\r\n//                             <div className={classes.NVFieldWrapper}>\r\n//                                 <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n//                                     <label\r\n//                                         style={{\r\n//                                         lineHeight: '55px'\r\n//                                     }}>Transactions Date :</label>\r\n//                                     <KeyboardDatePicker\r\n//                                         margin=\"normal\"\r\n//                                         id=\"date-picker-dialog\"\r\n//                                         format=\"MM/dd/yyyy\"\r\n//                                         value={selectedDate}\r\n//                                         onChange={handleDateChange}\r\n//                                         KeyboardButtonProps={{\r\n//                                         'aria-label': 'change date'\r\n//                                     }}/></MuiPickersUtilsProvider>\r\n//                                 &nbsp;&nbsp;\r\n//                                 <label className={classes.NVlabel}>Narrative :</label>\r\n//                                 <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n//                             </div>\r\n//                         </form>\r\n//                     </div>\r\n//                 </Grid>\r\n\r\n//         <Typography className={classes.title}>Asset Details</Typography>\r\n//         <form className={classes.root} noValidate autoComplete=\"off\">\r\n//             <div className={classes.inputFieldWrapper}>\r\n//                 <label className={classes.label}>Code :</label>\r\n//                 <TextField id=\"code\" label=\"Code\" variant=\"outlined\"/>\r\n\r\n//                 <label className={classes.label}>Initial Value :</label>\r\n//                 <TextField id=\"code\" label=\"Code\" variant=\"outlined\"/>\r\n//             </div>\r\n//             <div className={classes.inputFieldWrapper}>\r\n//                 <label className={classes.label}>Code :</label>\r\n//                 <TextField id=\"code\" label=\"Code\" variant=\"outlined\"/>\r\n\r\n//                 <label className={classes.label}>Initial Value :</label>\r\n//                 <TextField id=\"code\" label=\"Code\" variant=\"outlined\"/>\r\n//             </div>\r\n//             <div className={classes.inputFieldWrapper}>\r\n//                 <label className={classes.label}>Description :</label>\r\n//                 <TextField id=\"code\" label=\"Code\" variant=\"outlined\"/>\r\n\r\n//                 <label className={classes.label}>Date Acquired :</label>\r\n//                 <div className={classes.inputFieldWrapperNomialJournal}>\r\n\r\n//                             <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\r\n//                                 <KeyboardDatePicker\r\n//                                     margin=\"normal\"\r\n//                                     id=\"date-picker-dialog\"\r\n//                                     // label=\"Date picker dialog\"\r\n//                                     format=\"MM/dd/yyyy\"\r\n//                                     value={selectedDate}\r\n//                                     onChange={handleDateChange}\r\n//                                     KeyboardButtonProps={{\r\n//                                     'aria-label': 'change date'\r\n//                                 }}/>\r\n//                             </MuiPickersUtilsProvider>\r\n//                         </div>\r\n//             </div>\r\n//             <div className={classes.inputFieldWrapper}>\r\n//                  <label className={classes.label}>Last Depriciated :</label>\r\n//                  <div className={classes.inputFieldWrapperNomialJournal}>\r\n\r\n// <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\r\n//     <KeyboardDatePicker\r\n//         margin=\"normal\"\r\n//         id=\"date-picker-dialog\"\r\n//         // label=\"Date picker dialog\"\r\n//         format=\"MM/dd/yyyy\"\r\n//         value={selectedDate}\r\n//         onChange={handleDateChange}\r\n//         KeyboardButtonProps={{\r\n//         'aria-label': 'change date'\r\n//     }}/>\r\n// </MuiPickersUtilsProvider>\r\n// </div>\r\n//             </div>\r\n\r\n//             <Typography className={classes.title}>Depritiation Details :</Typography>\r\n//             <div className={classes.inputFieldWrapper}>\r\n//                 <label className={classes.label}>Description Method :</label>\r\n//                 <TextField id=\"code-consolidated\" variant=\"outlined\"/>\r\n//                 <Select id=\"code-dropdown\" className={classes.selectTab}>\r\n//                     <MenuItem value=\"\"></MenuItem>\r\n//                     <MenuItem value={'data data data data'}>data data data data</MenuItem>\r\n//                     <MenuItem value={'data data data data'}>data data data data</MenuItem>\r\n//                     <MenuItem value={'data data data data'}>data data data data</MenuItem>\r\n//                 </Select>\r\n//             </div>\r\n//              <div className={classes.inputFieldWrapper}>\r\n//                 <label className={classes.label}>Net Book Value :</label>\r\n//                 <TextField className={classes.inputwraper} id=\"code-consolidated\" variant=\"outlined\"/>\r\n//             </div>\r\n//              <div className={classes.inputFieldWrapper}>\r\n//                 <label className={classes.label}>Balence sheet :</label>\r\n//                 <TextField id=\"code-consolidated\" variant=\"outlined\"/>\r\n//                 <Select id=\"code-dropdown\" className={classes.selectTab}>\r\n//                     <MenuItem value=\"\"></MenuItem>\r\n//                     <MenuItem value={'data data data data'}>data data data data</MenuItem>\r\n//                     <MenuItem value={'data data data data'}>data data data data</MenuItem>\r\n//                     <MenuItem value={'data data data data'}>data data data data</MenuItem>\r\n//                 </Select>\r\n//                 <TextField className={classes.inputwraper} id=\"code-consolidated\" variant=\"outlined\"/>\r\n//                 <TextField className={classes.inputwraper} id=\"code-consolidated\" variant=\"outlined\"/>\r\n//             </div>\r\n//              <div className={classes.inputFieldWrapper}>\r\n//                 <label className={classes.label}>Profit And Loss :</label>\r\n//                 <TextField id=\"code-consolidated\" variant=\"outlined\"/>\r\n//                 <Select id=\"code-dropdown\" className={classes.selectTab}>\r\n//                     <MenuItem value=\"\"></MenuItem>\r\n//                     <MenuItem value={'data data data data'}>data data data data</MenuItem>\r\n//                     <MenuItem value={'data data data data'}>data data data data</MenuItem>\r\n//                     <MenuItem value={'data data data data'}>data data data data</MenuItem>\r\n//                 </Select>\r\n//                 <TextField className={classes.inputwraper} id=\"code-consolidated\" variant=\"outlined\"/>\r\n//                 <TextField className={classes.inputwraper} id=\"code-consolidated\" variant=\"outlined\"/>\r\n//             </div>\r\n\r\n//             <Typography className={classes.title}>Analysis Details</Typography>\r\n\r\n//             <div className={classes.inputFieldWrapper}>\r\n//                 <label className={classes.label}>Manager :</label>\r\n//                 <TextField id=\"code-consolidated\" variant=\"outlined\"/>\r\n//                 <Select id=\"code-dropdown\" className={classes.selectTab}>\r\n//                     <MenuItem value=\"\"></MenuItem>\r\n//                     <MenuItem value={'data data data data'}>data data data data</MenuItem>\r\n//                     <MenuItem value={'data data data data'}>data data data data</MenuItem>\r\n//                     <MenuItem value={'data data data data'}>data data data data</MenuItem>\r\n//                 </Select>\r\n//             </div>\r\n//             <div className={classes.inputFieldWrapper}>\r\n//                 <label className={classes.label}>Location :</label>\r\n//                 <TextField id=\"code-consolidated\" variant=\"outlined\"/>\r\n//                 <Select id=\"code-dropdown\" className={classes.selectTab}>\r\n//                     <MenuItem value=\"\"></MenuItem>\r\n//                     <MenuItem value={'data data data data'}>data data data data</MenuItem>\r\n//                     <MenuItem value={'data data data data'}>data data data data</MenuItem>\r\n//                     <MenuItem value={'data data data data'}>data data data data</MenuItem>\r\n//                 </Select>\r\n//             </div>\r\n//             <div className={classes.inputFieldWrapper}>\r\n//                 <label className={classes.label}>Analysis 1 :</label>\r\n//                 <TextField id=\"code-consolidated\" variant=\"outlined\"/>\r\n//                 <Select id=\"code-dropdown\" className={classes.selectTab}>\r\n//                     <MenuItem value=\"\"></MenuItem>\r\n//                     <MenuItem value={'data data data data'}>data data data data</MenuItem>\r\n//                     <MenuItem value={'data data data data'}>data data data data</MenuItem>\r\n//                     <MenuItem value={'data data data data'}>data data data data</MenuItem>\r\n//                 </Select>\r\n//             </div>\r\n//             <div className={classes.inputFieldWrapper}>\r\n//                 <label className={classes.label}>Analysis 2 :</label>\r\n//                 <TextField id=\"code-consolidated\" variant=\"outlined\"/>\r\n//                 <Select id=\"code-dropdown\" className={classes.selectTab}>\r\n//                     <MenuItem value=\"\"></MenuItem>\r\n//                     <MenuItem value={'data data data data'}>data data data data</MenuItem>\r\n//                     <MenuItem value={'data data data data'}>data data data data</MenuItem>\r\n//                     <MenuItem value={'data data data data'}>data data data data</MenuItem>\r\n//                 </Select>\r\n//             </div>\r\n//             <div className={classes.inputFieldWrapper}>\r\n//                 <label className={classes.label}>Analysis 3 :</label>\r\n//                 <TextField id=\"code-consolidated\" variant=\"outlined\"/>\r\n//                 <Select id=\"code-dropdown\" className={classes.selectTab}>\r\n//                     <MenuItem value=\"\"></MenuItem>\r\n//                     <MenuItem value={'data data data data'}>data data data data</MenuItem>\r\n//                     <MenuItem value={'data data data data'}>data data data data</MenuItem>\r\n//                     <MenuItem value={'data data data data'}>data data data data</MenuItem>\r\n//                 </Select>\r\n//             </div>\r\n\r\n//         </form>\r\n//     <div>\r\n//              <Button variant=\"contained\"  className={classes.buttonWrapper}>Clear</Button>\r\n//       <Button variant=\"contained\" color=\"primary\"  className={classes.buttonWrapper}>\r\n//         Save\r\n//       </Button>\r\n//     </div>\r\n//     </div>\r\n// </>\r\n//     )\r\n// }\r\n// export default EnterNewAsset\r\n\r\nimport React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  createStyles,\r\n  makeStyles,\r\n  Theme,\r\n  withStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\n\r\nconst BootstrapInput = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    input: {\r\n      borderRadius: 4,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"7px 26px 7px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"-apple-system\",\r\n        \"BlinkMacSystemFont\",\r\n        '\"Segoe UI\"',\r\n        \"Roboto\",\r\n        '\"Helvetica Neue\"',\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n        '\"Apple Color Emoji\"',\r\n        '\"Segoe UI Emoji\"',\r\n        '\"Segoe UI Symbol\"',\r\n      ].join(\",\"),\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#80bdff\",\r\n        boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n      },\r\n    },\r\n  })\r\n)(InputBase);\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    NominalVatableReceipt: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    NVtitle: {\r\n      fontSize: \"20px\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    NVFieldWrapper: {\r\n      padding: \"10px 0\",\r\n    },\r\n    NVlabel: {\r\n      lineHeight: \"30px\",\r\n      paddingRight: theme.spacing(2),\r\n    },\r\n    NVformWrapper: {\r\n      paddingTop: theme.spacing(2),\r\n    },\r\n    NVtable: {\r\n      width: \"100%\",\r\n    },\r\n    buttonWrapper: {\r\n      margin: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\n// table info\r\nfunction createData(\r\n  code: number,\r\n  cc: string,\r\n  department: string,\r\n  name: string,\r\n  reference: string,\r\n  narrative: string,\r\n  transition: number,\r\n  transda: string,\r\n  grossvalue: number,\r\n  vatco: number,\r\n  rate: number,\r\n  goodval: string,\r\n  vatvalue: number\r\n) {\r\n  return {\r\n    code,\r\n    cc,\r\n    department,\r\n    name,\r\n    reference,\r\n    narrative,\r\n    transition,\r\n    transda,\r\n    grossvalue,\r\n    vatco,\r\n    rate,\r\n    goodval,\r\n    vatvalue,\r\n  };\r\n}\r\n\r\nconst rows = [\r\n  createData(\r\n    1011,\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    1234,\r\n    \"dummy\",\r\n    123,\r\n    123,\r\n    123,\r\n    \"dummy\",\r\n    123\r\n  ),\r\n];\r\nconst EnterNewAsset: React.FC<{}> = () => {\r\n  const [selectedDate, setSelectedDate] = React.useState<Date | null>(\r\n    new Date()\r\n  );\r\n\r\n  const handleDateChange = (date: Date | null) => {\r\n    setSelectedDate(date);\r\n  };\r\n  const classes = useStyles();\r\n  const [bankaccount, setBankaccount] = React.useState(\"\");\r\n  const handleChange = (\r\n    event: React.ChangeEvent<{\r\n      value: unknown;\r\n    }>\r\n  ) => {\r\n    setBankaccount(event.target.value as string);\r\n  };\r\n  return (\r\n    <div className={classes.NominalVatableReceipt}>\r\n      <Grid container spacing={3}>\r\n        <Grid item lg={12}>\r\n          <Typography className={classes.NVtitle}>Asset Details</Typography>\r\n          <div className={classes.NVformWrapper}>\r\n            <form>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Code :</label>\r\n                <NativeSelect\r\n                  id=\"demo-customized-select-native\"\r\n                  value={bankaccount}\r\n                  onChange={handleChange}\r\n                  input={<BootstrapInput />}\r\n                >\r\n                  <option aria-label=\"None\" value=\"\" />\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </NativeSelect>\r\n                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                <label className={classes.NVlabel}>Initial Value :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <label\r\n                    style={{\r\n                      lineHeight: \"55px\",\r\n                    }}\r\n                  >\r\n                    Date Acquired :\r\n                  </label>\r\n                  <KeyboardDatePicker\r\n                    margin=\"normal\"\r\n                    id=\"date-picker-dialog\"\r\n                    format=\"MM/dd/yyyy\"\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                      \"aria-label\": \"change date\",\r\n                    }}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n                &nbsp;&nbsp;\r\n                <label className={classes.NVlabel}>Description :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n\r\n              <div className={classes.NVFieldWrapper}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <label\r\n                    style={{\r\n                      lineHeight: \"55px\",\r\n                    }}\r\n                  >\r\n                    Last Depriciated :\r\n                  </label>\r\n                  <KeyboardDatePicker\r\n                    margin=\"normal\"\r\n                    id=\"date-picker-dialog\"\r\n                    format=\"MM/dd/yyyy\"\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                      \"aria-label\": \"change date\",\r\n                    }}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n                &nbsp;&nbsp;\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item lg={12}>\r\n          <Typography className={classes.NVtitle}>\r\n            Depriciation Details\r\n          </Typography>\r\n          <div className={classes.NVformWrapper}>\r\n            <form>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Description Method</label>\r\n                <NativeSelect\r\n                  id=\"demo-customized-select-native\"\r\n                  value={bankaccount}\r\n                  onChange={handleChange}\r\n                  input={<BootstrapInput />}\r\n                >\r\n                  <option aria-label=\"None\" value=\"\" />\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </NativeSelect>\r\n              </div>\r\n\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Net book value</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Balence Sheet</label>\r\n                <NativeSelect\r\n                  id=\"demo-customized-select-native\"\r\n                  value={bankaccount}\r\n                  onChange={handleChange}\r\n                  input={<BootstrapInput />}\r\n                >\r\n                  <option aria-label=\"None\" value=\"\" />\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </NativeSelect>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Profit and loss</label>\r\n                <NativeSelect\r\n                  id=\"demo-customized-select-native\"\r\n                  value={bankaccount}\r\n                  onChange={handleChange}\r\n                  input={<BootstrapInput />}\r\n                >\r\n                  <option aria-label=\"None\" value=\"\" />\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </NativeSelect>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item lg={12}>\r\n          <Typography className={classes.NVtitle}>Analysis Details</Typography>\r\n          <div className={classes.NVformWrapper}>\r\n            <form>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Manager :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Location :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Analysis 1 :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Analysis 2 :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Analysis 3 :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n        <Button variant=\"contained\" className={classes.buttonWrapper}>\r\n          Clear\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.buttonWrapper}\r\n        >\r\n          Save\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EnterNewAsset;\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\FixedAssets\\delete-asset\\index.tsx",["1046","1047","1048","1049","1050","1051","1052","1053","1054","1055","1056"],"import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  createStyles,\r\n  makeStyles,\r\n  Theme,\r\n  withStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\n\r\nconst BootstrapInput = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    input: {\r\n      borderRadius: 4,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"7px 26px 7px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"-apple-system\",\r\n        \"BlinkMacSystemFont\",\r\n        '\"Segoe UI\"',\r\n        \"Roboto\",\r\n        '\"Helvetica Neue\"',\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n        '\"Apple Color Emoji\"',\r\n        '\"Segoe UI Emoji\"',\r\n        '\"Segoe UI Symbol\"',\r\n      ].join(\",\"),\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#80bdff\",\r\n        boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n      },\r\n    },\r\n  })\r\n)(InputBase);\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    NominalVatableReceipt: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    NVtitle: {\r\n      fontSize: \"20px\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    NVFieldWrapper: {\r\n      padding: \"10px 0\",\r\n    },\r\n    NVlabel: {\r\n      lineHeight: \"30px\",\r\n      paddingRight: theme.spacing(2),\r\n    },\r\n    NVformWrapper: {\r\n      paddingTop: theme.spacing(2),\r\n    },\r\n    NVtable: {\r\n      width: \"100%\",\r\n    },\r\n  })\r\n);\r\n\r\n// table info\r\nfunction createData(\r\n  code: number,\r\n  cc: string,\r\n  department: string,\r\n  name: string,\r\n  reference: string,\r\n  narrative: string,\r\n  transition: number,\r\n  transda: string,\r\n  grossvalue: number,\r\n  vatco: number,\r\n  rate: number,\r\n  goodval: string,\r\n  vatvalue: number\r\n) {\r\n  return {\r\n    code,\r\n    cc,\r\n    department,\r\n    name,\r\n    reference,\r\n    narrative,\r\n    transition,\r\n    transda,\r\n    grossvalue,\r\n    vatco,\r\n    rate,\r\n    goodval,\r\n    vatvalue,\r\n  };\r\n}\r\n\r\nconst rows = [\r\n  createData(\r\n    1011,\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    1234,\r\n    \"dummy\",\r\n    123,\r\n    123,\r\n    123,\r\n    \"dummy\",\r\n    123\r\n  ),\r\n];\r\nconst DeleteAsset: React.FC<{}> = () => {\r\n  const [selectedDate, setSelectedDate] = React.useState<Date | null>(\r\n    new Date()\r\n  );\r\n\r\n  const handleDateChange = (date: Date | null) => {\r\n    setSelectedDate(date);\r\n  };\r\n  const classes = useStyles();\r\n  const [bankaccount, setBankaccount] = React.useState(\"\");\r\n  const handleChange = (\r\n    event: React.ChangeEvent<{\r\n      value: unknown;\r\n    }>\r\n  ) => {\r\n    setBankaccount(event.target.value as string);\r\n  };\r\n  return (\r\n    <div className={classes.NominalVatableReceipt}>\r\n      <Grid container spacing={3}>\r\n        <Grid item lg={12}>\r\n          <Typography className={classes.NVtitle}>\r\n            Available Asset List\r\n          </Typography>\r\n          <TableContainer component={Paper}>\r\n            <Table className={classes.NVtable} aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"right\">Code</TableCell>\r\n                  <TableCell align=\"right\">Description</TableCell>\r\n                  <TableCell align=\"right\">Date Acquired</TableCell>\r\n                  <TableCell align=\"right\">Last Depriciated</TableCell>\r\n                  <TableCell align=\"right\">Disposal Date</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {rows.map((row) => (\r\n                  <TableRow key={row.name}>\r\n                    <TableCell align=\"right\">{row.code}</TableCell>\r\n                    <TableCell align=\"right\">{row.cc}</TableCell>\r\n                    <TableCell align=\"right\">{row.department}</TableCell>\r\n                    <TableCell align=\"right\">{row.name}</TableCell>\r\n                    <TableCell align=\"right\">{row.reference}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteAsset;\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\cash-position\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\standing-orders-and-direct-debits-enquiry\\index.tsx",["1057","1058","1059"],"import React from \"react\";\r\nimport { makeStyles, createStyles, Theme, useTheme } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport TransactionTable from \"./TransactionTable\";\r\nimport NominalTable from \"./NominalTable\";\r\nimport Button from \"@material-ui/core/Button\";\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    NEHeader: {\r\n      padding: theme.spacing(2),\r\n      fontWeight: \"bold\",\r\n    },\r\n    selectTab: {\r\n      border: \"0.5px solid grey\",\r\n      padding: theme.spacing(0.5),\r\n    },\r\n    inputFieldWrapper: { paddingLeft: theme.spacing(4) },\r\n\r\n    label: {\r\n      fontSize: \"15px\",\r\n      paddingTop: theme.spacing(2),\r\n    },\r\n    tableWrapper: { padding: theme.spacing(2) },\r\n    formControl: {\r\n      minWidth: 300,\r\n    },\r\n    buttonWrapper: {\r\n      margin: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nexport default function StandingOrderAndDebit() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid>\r\n        <Grid item xs={12}>\r\n          <Typography className={classes.NEHeader}>Account Selection</Typography>\r\n          <div className={classes.inputFieldWrapper}>\r\n            <label className={classes.label}>Account :</label>\r\n            <Select id='code-dropdown' className={classes.selectTab}>\r\n              <MenuItem value=''></MenuItem>\r\n              <MenuItem value={\"data data data data\"}>data data data data</MenuItem>\r\n              <MenuItem value={\"data data data data\"}>data data data data</MenuItem>\r\n              <MenuItem value={\"data data data data\"}>data data data data</MenuItem>\r\n            </Select>\r\n            <TextField id='code-consolidated' variant='outlined' size='small' />\r\n            <TextField id='code-consolidated' variant='outlined' size='small' />\r\n            <TextField id='code-consolidated' variant='outlined' size='small' />\r\n            <TextField id='code-consolidated' variant='outlined' size='small' />\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography className={classes.NEHeader}>\r\n            Standing Order/Direct Debit Details\r\n          </Typography>\r\n          <div className={classes.tableWrapper}>\r\n            <TransactionTable />\r\n          </div>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography className={classes.NEHeader}>Payments Details</Typography>\r\n          <Grid item lg={12}>\r\n            <div className={classes.tableWrapper}>\r\n              <NominalTable />\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n        <div>\r\n          <Button variant='contained' className={classes.buttonWrapper}>\r\n            Print\r\n          </Button>\r\n          <Button variant='contained' color='primary' className={classes.buttonWrapper}>\r\n            Close\r\n          </Button>\r\n        </div>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\transaction-enquiries\\index.tsx",["1060"],"import React from \"react\";\r\nimport { makeStyles, createStyles, Theme, useTheme } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport TransactionTable from \"./TransactionTable\";\r\nimport NominalTable from \"./NominalTable\";\r\nimport Button from \"@material-ui/core/Button\";\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    NEHeader: {\r\n      padding: theme.spacing(2),\r\n      fontWeight: \"bold\",\r\n    },\r\n    selectTab: {\r\n      border: \"0.5px solid grey\",\r\n      padding: theme.spacing(0.5),\r\n    },\r\n    inputFieldWrapper: { paddingLeft: theme.spacing(4) },\r\n\r\n    label: {\r\n      fontSize: \"15px\",\r\n      paddingTop: theme.spacing(2),\r\n    },\r\n    tableWrapper: { padding: theme.spacing(2) },\r\n    formControl: {\r\n      minWidth: 300,\r\n    },\r\n    buttonWrapper: {\r\n      margin: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nexport default function TransactionEnquiry() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid>\r\n        <Grid item xs={12}>\r\n          <Typography className={classes.NEHeader}>Account Selection</Typography>\r\n          <div className={classes.inputFieldWrapper}>\r\n            <label className={classes.label}>Account :</label>\r\n            <Select id='code-dropdown' className={classes.selectTab}>\r\n              <MenuItem value=''></MenuItem>\r\n              <MenuItem value={\"data data data data\"}>data data data data</MenuItem>\r\n              <MenuItem value={\"data data data data\"}>data data data data</MenuItem>\r\n              <MenuItem value={\"data data data data\"}>data data data data</MenuItem>\r\n            </Select>\r\n            <TextField id='code-consolidated' variant='outlined' size='small' />\r\n            <TextField id='code-consolidated' variant='outlined' size='small' />\r\n            <TextField id='code-consolidated' variant='outlined' size='small' />\r\n            <TextField id='code-consolidated' variant='outlined' size='small' />\r\n          </div>\r\n          <Typography className={classes.NEHeader}>Transaction Selection</Typography>\r\n          <div className={classes.inputFieldWrapper}>\r\n            <FormControl variant='outlined' className={classes.formControl}>\r\n              <InputLabel id='demo-simple-select-outlined-label'>Filter</InputLabel>\r\n              <Select\r\n                labelId='demo-simple-select-outlined-label'\r\n                id='demo-simple-select-outlined'\r\n                label='Filter'>\r\n                <MenuItem value=''>\r\n                  <em>None</em>\r\n                </MenuItem>\r\n                <MenuItem value={\"No Filter\"}>No Filter</MenuItem>\r\n                <MenuItem value={\"Filter By Date\"}>Filter By Date</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography className={classes.NEHeader}>Transactions</Typography>\r\n          <div className={classes.tableWrapper}>\r\n            <TransactionTable />\r\n          </div>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography className={classes.NEHeader}>Nominal Detail</Typography>\r\n          <Grid item lg={12}>\r\n            <div className={classes.tableWrapper}>\r\n              <NominalTable />\r\n            </div>\r\n          </Grid>\r\n          <Grid item lg={4}>\r\n            <div className={classes.inputFieldWrapper}>\r\n              <FormControl variant='outlined' className={classes.formControl}>\r\n                <InputLabel id='demo-simple-select-outlined-label'>\r\n                  Select DrillDown\r\n                </InputLabel>\r\n                <Select\r\n                  labelId='demo-simple-select-outlined-label'\r\n                  id='demo-simple-select-outlined'\r\n                  label='Select DrillDown'>\r\n                  <MenuItem value=''>\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  <MenuItem value={\"Nominal\"}>Nominal</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </div>\r\n            <div className={classes.inputFieldWrapper}>\r\n              <Button\r\n                variant='contained'\r\n                color='primary'\r\n                className={classes.buttonWrapper}>\r\n                Print DrillDown\r\n              </Button>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n        <div>\r\n          <Button variant='contained' className={classes.buttonWrapper}>\r\n            Account Enquiry\r\n          </Button>\r\n          <Button variant='contained' color='primary' className={classes.buttonWrapper}>\r\n            Find\r\n          </Button>\r\n          <Button variant='contained' className={classes.buttonWrapper}>\r\n            Print\r\n          </Button>\r\n        </div>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\create-amend-accounts\\create-bank-account\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-reports\\sage-bank-feed-faield-posting-report\\index.tsx",["1061","1062","1063","1064","1065","1066","1067"],"import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  createStyles,\r\n  makeStyles,\r\n  Theme,\r\n  withStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"date-fns\";\r\nimport { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\r\n\r\nconst BootstrapInput = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    input: {\r\n      borderRadius: 4,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"7px 26px 7px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"-apple-system\",\r\n        \"BlinkMacSystemFont\",\r\n        '\"Segoe UI\"',\r\n        \"Roboto\",\r\n        '\"Helvetica Neue\"',\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n        '\"Apple Color Emoji\"',\r\n        '\"Segoe UI Emoji\"',\r\n        '\"Segoe UI Symbol\"',\r\n      ].join(\",\"),\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#80bdff\",\r\n        boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n      },\r\n    },\r\n  })\r\n)(InputBase);\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    NominalVatableReceipt: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    NVtitle: {\r\n      fontSize: \"20px\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    NVFieldWrapper: {\r\n      padding: \"10px 0\",\r\n    },\r\n    NVlabel: {\r\n      lineHeight: \"30px\",\r\n      paddingRight: theme.spacing(2),\r\n    },\r\n    NVformWrapper: {\r\n      paddingTop: theme.spacing(2),\r\n    },\r\n    NVtable: {\r\n      width: \"100%\",\r\n    },\r\n    buttonWrapper: {\r\n      margin: theme.spacing(3),\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 400,\r\n    },\r\n  })\r\n);\r\n\r\n// table info\r\nfunction createData(\r\n  code: number,\r\n  cc: string,\r\n  department: string,\r\n  name: string,\r\n  reference: string,\r\n  narrative: string,\r\n  transition: number,\r\n  transda: string,\r\n  grossvalue: number,\r\n  vatco: number,\r\n  rate: number,\r\n  goodval: string,\r\n  vatvalue: number\r\n) {\r\n  return {\r\n    code,\r\n    cc,\r\n    department,\r\n    name,\r\n    reference,\r\n    narrative,\r\n    transition,\r\n    transda,\r\n    grossvalue,\r\n    vatco,\r\n    rate,\r\n    goodval,\r\n    vatvalue,\r\n  };\r\n}\r\n\r\nconst rows = [\r\n  createData(\r\n    1011,\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    1234,\r\n    \"dummy\",\r\n    123,\r\n    123,\r\n    123,\r\n    \"dummy\",\r\n    123\r\n  ),\r\n];\r\nconst SageBankFeedFaieldPostingReport: React.FC<{}> = () => {\r\n  const [selectedDate, setSelectedDate] = React.useState<Date | null>(\r\n    new Date()\r\n  );\r\n\r\n  const handleDateChange = (date: Date | null) => {\r\n    setSelectedDate(date);\r\n  };\r\n  const classes = useStyles();\r\n  const [bankaccount, setBankaccount] = React.useState(\"\");\r\n  const handleChange = (\r\n    event: React.ChangeEvent<{\r\n      value: unknown;\r\n    }>\r\n  ) => {\r\n    setBankaccount(event.target.value as string);\r\n  };\r\n  return (\r\n    <div className={classes.NominalVatableReceipt}>\r\n      <Grid container spacing={3}>\r\n        <Grid item lg={12}>\r\n          <Typography className={classes.NVtitle}>Critarial values</Typography>\r\n          <div className={classes.NVformWrapper}>\r\n            <form>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Account</label>\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    onChange={handleChange}\r\n                    label=\"Age\"\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={10}>Ten</MenuItem>\r\n                    <MenuItem value={20}>Twenty</MenuItem>\r\n                    <MenuItem value={30}>Thirty</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Account Description</label>\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    onChange={handleChange}\r\n                    label=\"Age\"\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={10}>Ten</MenuItem>\r\n                    <MenuItem value={20}>Twenty</MenuItem>\r\n                    <MenuItem value={30}>Thirty</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item lg={12}>\r\n          <div className={classes.NVformWrapper}>\r\n            <form>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Preview a simple report for a specified no of record or transection (0 for all) :</label>\r\n                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  type=\"number\"\r\n                />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Button variant=\"contained\" className={classes.buttonWrapper}>\r\n          Help\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.buttonWrapper}\r\n        >\r\n          Save\r\n        </Button>\r\n        <Button variant=\"contained\" className={classes.buttonWrapper}>\r\n          Load\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.buttonWrapper}\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SageBankFeedFaieldPostingReport;\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-reports\\account-not-active\\index.tsx",["1068","1069","1070","1071","1072","1073","1074"],"import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  createStyles,\r\n  makeStyles,\r\n  Theme,\r\n  withStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"date-fns\";\r\nimport { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\r\n\r\nconst BootstrapInput = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    input: {\r\n      borderRadius: 4,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"7px 26px 7px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"-apple-system\",\r\n        \"BlinkMacSystemFont\",\r\n        '\"Segoe UI\"',\r\n        \"Roboto\",\r\n        '\"Helvetica Neue\"',\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n        '\"Apple Color Emoji\"',\r\n        '\"Segoe UI Emoji\"',\r\n        '\"Segoe UI Symbol\"',\r\n      ].join(\",\"),\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#80bdff\",\r\n        boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n      },\r\n    },\r\n  })\r\n)(InputBase);\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    NominalVatableReceipt: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    NVtitle: {\r\n      fontSize: \"20px\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    NVFieldWrapper: {\r\n      padding: \"10px 0\",\r\n    },\r\n    NVlabel: {\r\n      lineHeight: \"30px\",\r\n      paddingRight: theme.spacing(2),\r\n    },\r\n    NVformWrapper: {\r\n      paddingTop: theme.spacing(2),\r\n    },\r\n    NVtable: {\r\n      width: \"100%\",\r\n    },\r\n    buttonWrapper: {\r\n      margin: theme.spacing(3),\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 400,\r\n    },\r\n  })\r\n);\r\n\r\n// table info\r\nfunction createData(\r\n  code: number,\r\n  cc: string,\r\n  department: string,\r\n  name: string,\r\n  reference: string,\r\n  narrative: string,\r\n  transition: number,\r\n  transda: string,\r\n  grossvalue: number,\r\n  vatco: number,\r\n  rate: number,\r\n  goodval: string,\r\n  vatvalue: number\r\n) {\r\n  return {\r\n    code,\r\n    cc,\r\n    department,\r\n    name,\r\n    reference,\r\n    narrative,\r\n    transition,\r\n    transda,\r\n    grossvalue,\r\n    vatco,\r\n    rate,\r\n    goodval,\r\n    vatvalue,\r\n  };\r\n}\r\n\r\nconst rows = [\r\n  createData(\r\n    1011,\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    1234,\r\n    \"dummy\",\r\n    123,\r\n    123,\r\n    123,\r\n    \"dummy\",\r\n    123\r\n  ),\r\n];\r\nconst AccountNotActive: React.FC<{}> = () => {\r\n  const [selectedDate, setSelectedDate] = React.useState<Date | null>(\r\n    new Date()\r\n  );\r\n\r\n  const handleDateChange = (date: Date | null) => {\r\n    setSelectedDate(date);\r\n  };\r\n  const classes = useStyles();\r\n  const [bankaccount, setBankaccount] = React.useState(\"\");\r\n  const handleChange = (\r\n    event: React.ChangeEvent<{\r\n      value: unknown;\r\n    }>\r\n  ) => {\r\n    setBankaccount(event.target.value as string);\r\n  };\r\n  return (\r\n    <div className={classes.NominalVatableReceipt}>\r\n      <Grid container spacing={3}>\r\n        <Grid item lg={12}>\r\n          <Typography className={classes.NVtitle}>Critarial values</Typography>\r\n          <div className={classes.NVformWrapper}>\r\n            <form>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Account code</label>\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    onChange={handleChange}\r\n                    label=\"Age\"\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={10}>Ten</MenuItem>\r\n                    <MenuItem value={20}>Twenty</MenuItem>\r\n                    <MenuItem value={30}>Thirty</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Account Description</label>\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    onChange={handleChange}\r\n                    label=\"Age\"\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={10}>Ten</MenuItem>\r\n                    <MenuItem value={20}>Twenty</MenuItem>\r\n                    <MenuItem value={30}>Thirty</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Status changed by</label>\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    onChange={handleChange}\r\n                    label=\"Age\"\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={10}>Ten</MenuItem>\r\n                    <MenuItem value={20}>Twenty</MenuItem>\r\n                    <MenuItem value={30}>Thirty</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Status changed date</label>\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    onChange={handleChange}\r\n                    label=\"Age\"\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={10}>Ten</MenuItem>\r\n                    <MenuItem value={20}>Twenty</MenuItem>\r\n                    <MenuItem value={30}>Thirty</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item lg={12}>\r\n          <div className={classes.NVformWrapper}>\r\n            <form>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Preview a simple report for a specified no of record or transection (0 for all) :</label>\r\n                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  type=\"number\"\r\n                />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Button variant=\"contained\" className={classes.buttonWrapper}>\r\n          Help\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.buttonWrapper}\r\n        >\r\n          Save\r\n        </Button>\r\n        <Button variant=\"contained\" className={classes.buttonWrapper}>\r\n          Load\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.buttonWrapper}\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountNotActive;\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\enter-transactions\\sales-receipt\\index.tsx",["1075","1076","1077","1078","1079","1080","1081"],"import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  createStyles,\r\n  makeStyles,\r\n  Theme,\r\n  withStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\n\r\nconst BootstrapInput = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    input: {\r\n      borderRadius: 4,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"7px 26px 7px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"-apple-system\",\r\n        \"BlinkMacSystemFont\",\r\n        '\"Segoe UI\"',\r\n        \"Roboto\",\r\n        '\"Helvetica Neue\"',\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n        '\"Apple Color Emoji\"',\r\n        '\"Segoe UI Emoji\"',\r\n        '\"Segoe UI Symbol\"',\r\n      ].join(\",\"),\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#80bdff\",\r\n        boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n      },\r\n    },\r\n  })\r\n)(InputBase);\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    NominalVatableReceipt: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    NVtitle: {\r\n      fontSize: \"20px\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    NVFieldWrapper: {\r\n      padding: \"10px 0\",\r\n    },\r\n    NVlabel: {\r\n      lineHeight: \"30px\",\r\n      paddingRight: theme.spacing(2),\r\n    },\r\n    NVformWrapper: {\r\n      paddingTop: theme.spacing(2),\r\n    },\r\n    NVtable: {\r\n      width: \"100%\",\r\n    },\r\n    buttonWrapper: {\r\n      margin: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\n// table info\r\nfunction createData(\r\n  code: number,\r\n  cc: string,\r\n  department: string,\r\n  name: string,\r\n  reference: string,\r\n  narrative: string,\r\n  transition: number,\r\n  transda: string,\r\n  grossvalue: number,\r\n  vatco: number,\r\n  rate: number,\r\n  goodval: string,\r\n  vatvalue: number\r\n) {\r\n  return {\r\n    code,\r\n    cc,\r\n    department,\r\n    name,\r\n    reference,\r\n    narrative,\r\n    transition,\r\n    transda,\r\n    grossvalue,\r\n    vatco,\r\n    rate,\r\n    goodval,\r\n    vatvalue,\r\n  };\r\n}\r\n\r\nconst rows = [\r\n  createData(\r\n    1011,\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    1234,\r\n    \"dummy\",\r\n    123,\r\n    123,\r\n    123,\r\n    \"dummy\",\r\n    123\r\n  ),\r\n];\r\nconst SalesRecipt: React.FC<{}> = () => {\r\n  const [selectedDate, setSelectedDate] = React.useState<Date | null>(\r\n    new Date()\r\n  );\r\n\r\n  const handleDateChange = (date: Date | null) => {\r\n    setSelectedDate(date);\r\n  };\r\n  const classes = useStyles();\r\n  const [bankaccount, setBankaccount] = React.useState(\"\");\r\n  const handleChange = (\r\n    event: React.ChangeEvent<{\r\n      value: unknown;\r\n    }>\r\n  ) => {\r\n    setBankaccount(event.target.value as string);\r\n  };\r\n  return (\r\n    <div className={classes.NominalVatableReceipt}>\r\n      <Grid container spacing={3}>\r\n\r\n        <Grid item lg={12}>\r\n          <Typography className={classes.NVtitle}>\r\n            Bank Account Details\r\n          </Typography>\r\n          <div className={classes.NVformWrapper}>\r\n            <form>\r\n\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Bank account</label>\r\n                <NativeSelect\r\n                  id=\"demo-customized-select-native\"\r\n                  value={bankaccount}\r\n                  onChange={handleChange}\r\n                  input={<BootstrapInput />}\r\n                >\r\n                  <option aria-label=\"None\" value=\"\" />\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </NativeSelect>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item lg={12}>\r\n          <Typography className={classes.NVtitle}>Customer Details</Typography>\r\n          <div className={classes.NVformWrapper}>\r\n            <form>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Code :</label>\r\n                <NativeSelect\r\n                  id=\"demo-customized-select-native\"\r\n                  value={bankaccount}\r\n                  onChange={handleChange}\r\n                  input={<BootstrapInput />}\r\n                >\r\n                  <option aria-label=\"None\" value=\"\" />\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </NativeSelect>\r\n                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                <label className={classes.NVlabel}>Credit Limit :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                <label className={classes.NVlabel}>Date :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Short name :</label>\r\n                <NativeSelect\r\n                  id=\"demo-customized-select-native\"\r\n                  value={bankaccount}\r\n                  onChange={handleChange}\r\n                  input={<BootstrapInput />}\r\n                >\r\n                  <option aria-label=\"None\" value=\"\" />\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </NativeSelect>\r\n                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                <label className={classes.NVlabel}>Balencr :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                <label className={classes.NVlabel}>Reference :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n              \r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Post Code :</label>\r\n                <NativeSelect\r\n                  id=\"demo-customized-select-native\"\r\n                  value={bankaccount}\r\n                  onChange={handleChange}\r\n                  input={<BootstrapInput />}\r\n                >\r\n                  <option aria-label=\"None\" value=\"\" />\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </NativeSelect>\r\n                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                <label className={classes.NVlabel}>Second Reference :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item lg={12}>\r\n          <Typography className={classes.NVtitle}>Receipt Details</Typography>\r\n          <div className={classes.NVformWrapper}>\r\n            <form>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Check curency :</label>\r\n                <NativeSelect\r\n                  id=\"demo-customized-select-native\"\r\n                  value={bankaccount}\r\n                  onChange={handleChange}\r\n                  input={<BootstrapInput />}\r\n                >\r\n                  <option aria-label=\"None\" value=\"\" />\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </NativeSelect>\r\n                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                <label className={classes.NVlabel}>Chaque Value :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Sattelment Amount :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n             </form>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Button variant=\"contained\" className={classes.buttonWrapper}>\r\n          Clear\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.buttonWrapper}\r\n        >\r\n          Save\r\n        </Button>\r\n        <Button variant=\"contained\" className={classes.buttonWrapper}>\r\n          Save & Allocate\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.buttonWrapper}\r\n        >\r\n          Close\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SalesRecipt;\r\n\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\enter-transactions\\nominal-vatable-payment\\index.tsx",["1082","1083","1084","1085","1086","1087"],"import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  createStyles,\r\n  makeStyles,\r\n  Theme,\r\n  withStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"date-fns\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\n\r\nconst BootstrapInput = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    input: {\r\n      borderRadius: 4,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"7px 26px 7px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"-apple-system\",\r\n        \"BlinkMacSystemFont\",\r\n        '\"Segoe UI\"',\r\n        \"Roboto\",\r\n        '\"Helvetica Neue\"',\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n        '\"Apple Color Emoji\"',\r\n        '\"Segoe UI Emoji\"',\r\n        '\"Segoe UI Symbol\"',\r\n      ].join(\",\"),\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#80bdff\",\r\n        boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n      },\r\n    },\r\n  })\r\n)(InputBase);\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    NominalVatableReceipt: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    NVtitle: {\r\n      fontSize: \"20px\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    NVFieldWrapper: {\r\n      padding: \"10px 0\",\r\n    },\r\n    NVlabel: {\r\n      lineHeight: \"30px\",\r\n      paddingRight: theme.spacing(2),\r\n    },\r\n    NVformWrapper: {\r\n      paddingTop: theme.spacing(2),\r\n    },\r\n    NVtable: {\r\n      width: \"100%\",\r\n    },\r\n    buttonWrapper: {\r\n      margin: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\n// table info\r\nfunction createData(\r\n  code: number,\r\n  cc: string,\r\n  department: string,\r\n  name: string,\r\n  reference: string,\r\n  narrative: string,\r\n  transition: number,\r\n  transda: string,\r\n  grossvalue: number,\r\n  vatco: number,\r\n  rate: number,\r\n  goodval: string,\r\n  vatvalue: number\r\n) {\r\n  return {\r\n    code,\r\n    cc,\r\n    department,\r\n    name,\r\n    reference,\r\n    narrative,\r\n    transition,\r\n    transda,\r\n    grossvalue,\r\n    vatco,\r\n    rate,\r\n    goodval,\r\n    vatvalue,\r\n  };\r\n}\r\n\r\nconst rows = [\r\n  createData(\r\n    1011,\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    1234,\r\n    \"dummy\",\r\n    123,\r\n    123,\r\n    123,\r\n    \"dummy\",\r\n    123\r\n  ),\r\n];\r\nconst NominalVatablePyment: React.FC<{}> = () => {\r\n  const [selectedDate, setSelectedDate] = React.useState<Date | null>(\r\n    new Date()\r\n  );\r\n\r\n  const handleDateChange = (date: Date | null) => {\r\n    setSelectedDate(date);\r\n  };\r\n  const classes = useStyles();\r\n  const [bankaccount, setBankaccount] = React.useState(\"\");\r\n  const handleChange = (\r\n    event: React.ChangeEvent<{\r\n      value: unknown;\r\n    }>\r\n  ) => {\r\n    setBankaccount(event.target.value as string);\r\n  };\r\n  return (\r\n    <div className={classes.NominalVatableReceipt}>\r\n      <Grid container spacing={3}>\r\n        <Grid item lg={12}>\r\n          <Typography className={classes.NVtitle}>Bank</Typography>\r\n          <div className={classes.NVformWrapper}>\r\n            <form>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Bank account</label>\r\n                <NativeSelect\r\n                  id=\"demo-customized-select-native\"\r\n                  value={bankaccount}\r\n                  onChange={handleChange}\r\n                  input={<BootstrapInput />}\r\n                >\r\n                  <option aria-label=\"None\" value=\"\" />\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </NativeSelect>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Account Type :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                <label className={classes.NVlabel}>Currency :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                <label className={classes.NVlabel}>\r\n                  Exchange rate to base :\r\n                </label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item lg={12}>\r\n          <Typography className={classes.NVtitle}>\r\n            Transaction Details\r\n          </Typography>\r\n          <div className={classes.NVformWrapper}>\r\n            <form>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Chaque Number :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                <label className={classes.NVlabel}>2nd Ref :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Transaction Date :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                <label className={classes.NVlabel}>Narrative :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Button variant=\"contained\" className={classes.buttonWrapper}>\r\n          Clear\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.buttonWrapper}\r\n        >\r\n          Save\r\n        </Button>\r\n        <Button variant=\"contained\" className={classes.buttonWrapper}>\r\n          Save & Allocate\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.buttonWrapper}\r\n        >\r\n          Close\r\n        </Button>\r\n      </Grid>\r\n      <Grid lg={12}>\r\n        <Typography className={classes.NVtitle}>Nomina Transaction</Typography>\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.NVtable} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>User Name</TableCell>\r\n                <TableCell align=\"right\">Work Station</TableCell>\r\n                <TableCell align=\"right\">Module</TableCell>\r\n                <TableCell align=\"right\">Feture</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row) => (\r\n                <TableRow key={row.name}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.name}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">{row.code}</TableCell>\r\n                  <TableCell align=\"right\">{row.cc}</TableCell>\r\n                  <TableCell align=\"right\">{row.department}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NominalVatablePyment;\r\n",["1088","1089"],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-list\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-current-transaction\\nominal-current-transaction.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-list\\bank-account-list-table.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\account-analysis\\trading-report-summary\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\account-analysis\\account-details\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\enter-transactions\\sales-invoice\\index.tsx",[],["1090","1091"],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\create-amend-accounts\\create-bank-account\\AttachmentsTable.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\create-amend-accounts\\amend-bank-account-details\\StatementBalance.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\create-amend-accounts\\amend-bank-account-details\\Contact.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\transaction-enquiries\\TransactionTable.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\standing-orders-and-direct-debits-enquiry\\TransactionTable.tsx",[],["1092","1093"],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\bank-account-enquiry\\AttachmentBalance.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\bank-account-enquiry\\AccountDetails.tsx",["1094","1095"],"import React from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      \"& > *\": {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        margin: theme.spacing(1),\r\n        width: \"100%\",\r\n      },\r\n    },\r\n\r\n    accountsWrapper: {},\r\n    title: {\r\n      textAlign: \"left\",\r\n      fontSize: \"17px\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    label: {\r\n      width: \"30%\",\r\n      fontSize: \"15px\",\r\n      paddingRight: theme.spacing(2),\r\n      paddingTop: theme.spacing(2),\r\n    },\r\n    inputFieldWrapper: {\r\n      marginBottom: theme.spacing(2),\r\n      display: \"flex\",\r\n    },\r\n    selectTab: {\r\n      borderBottom: \"none\",\r\n      border: \".5px solid rgb(211,211,211,0.7)\",\r\n    },\r\n    selectTabActive: {\r\n      borderBottom: \"none\",\r\n      border: \".5px solid rgb(211,211,211,0.7)\",\r\n      width: \"100px\",\r\n    },\r\n    buttonWrapper: {\r\n      margin: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nconst AccountDeatils: React.FC<{}> = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.accountsWrapper}>\r\n        <form className={classes.root} noValidate autoComplete='off'>\r\n          <Typography className={classes.title}>Account Details</Typography>\r\n          <Grid item>\r\n            <Grid lg={12} item>\r\n              <div className={classes.inputFieldWrapper}>\r\n                <label className={classes.label}>Account Number :</label>\r\n                <TextField id='AccountNumber' variant='outlined' size='small' />\r\n              </div>\r\n              <div className={classes.inputFieldWrapper}>\r\n                <label className={classes.label}>Account Name :</label>\r\n                <TextField id='AccountName' variant='outlined' size='small' />\r\n              </div>\r\n              <div className={classes.inputFieldWrapper}>\r\n                <label className={classes.label}>Account Type :</label>\r\n                <TextField id='AccountType' variant='outlined' size='small' />\r\n              </div>\r\n              <div className={classes.inputFieldWrapper}>\r\n                <label className={classes.label}>Account Currency :</label>\r\n                <TextField id='Accountcurrency' variant='outlined' size='small' />\r\n              </div>{\" \"}\r\n              <div className={classes.inputFieldWrapper}>\r\n                <label className={classes.label}>IBAN :</label>\r\n                <TextField id='Iban' variant='outlined' size='small' />\r\n              </div>\r\n              <div className={classes.inputFieldWrapper}>\r\n                <label className={classes.label}>BIC/Swift Number :</label>\r\n                <TextField id='swift number' variant='outlined' size='small' />\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <Grid item lg={6}>\r\n              <Typography className={classes.title}>Balance Information</Typography>\r\n\r\n              <div className={classes.inputFieldWrapper}>\r\n                <label className={classes.label}>Account Balance :</label>\r\n                <TextField id='AccountBalance' variant='outlined' size='small' />\r\n              </div>\r\n              <div className={classes.inputFieldWrapper}>\r\n                <label className={classes.label}>Base Currency Balance :</label>\r\n                <TextField id='baseCurrency' variant='outlined' size='small' />\r\n              </div>\r\n              <div className={classes.inputFieldWrapper}>\r\n                <label className={classes.label}>Overdraft Lmt :</label>\r\n                <TextField id='OverdraftLmt' variant='outlined' size='small' />\r\n              </div>\r\n            </Grid>\r\n            <Grid item lg={6}>\r\n              <Typography className={classes.title}>Nominal Account</Typography>\r\n\r\n              <div className={classes.inputFieldWrapper}>\r\n                <label className={classes.label}>Bank Account :</label>\r\n                <TextField id='bankaccount' variant='outlined' size='small' />\r\n              </div>\r\n              <div className={classes.inputFieldWrapper}>\r\n                <label className={classes.label}>Bank Charges :</label>\r\n                <TextField id='Bankcharges' variant='outlined' size='small' />\r\n              </div>\r\n              <div className={classes.inputFieldWrapper}>\r\n                <label className={classes.label}>Exchange difference :</label>\r\n                <TextField id='exchange difference' variant='outlined' size='small' />\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n\r\n        <div>\r\n          <Button variant='contained' className={classes.buttonWrapper}>\r\n            Transaction Enquiry\r\n          </Button>\r\n          <Button variant='contained' color='primary' className={classes.buttonWrapper}>\r\n            SO/DD Enquiry\r\n          </Button>\r\n          <Button variant='contained' className={classes.buttonWrapper}>\r\n            Bank Feed Rule\r\n          </Button>\r\n          <Button variant='contained' color='primary' className={classes.buttonWrapper}>\r\n            Close\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default AccountDeatils;\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\short-term-cash-projection\\SummaryTable.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\cash-position\\who-owes-us-most-money-table.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\create-amend-accounts\\create-bank-account\\CustomerListTable.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\create-amend-accounts\\amend-bank-account-details\\StatementBalanceTable.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\bank-txn-enquiry\\transaction-option.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\bank-standing-orders-and-direct-debits\\payments-table.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\bank-standing-orders-and-direct-debits\\standings-order-option.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\bank-account-enquiry\\AttachmentsTable.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-enquiries\\nominal-current-transaction-enquiry\\table1.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-enquiries\\nominal-transaction-enquiry\\table.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\create-and-amend-accounts\\create-new-nominal-account\\Memos.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-enquiries\\nominal-enquiry\\Memo.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-enquiries\\nominal-enquiry\\Attachments.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-enquiries\\nominal-enquiry\\General.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\create-and-amend-accounts\\amend-nominal-account-details\\Memo.tsx",["1096","1097","1098"],"import React from \"react\"\r\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport {DataGrid, ColDef, ValueGetterParams} from '@material-ui/data-grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nconst useStyles = makeStyles((theme : Theme) => createStyles({\r\n    root: {\r\n\r\n        margin: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3)\r\n    },\r\n    accountsWrapper: {},\r\n    title: {\r\n        textAlign: 'left',\r\n        fontSize: '17px',\r\n        fontWeight: 'bold'\r\n    },\r\n    label: {\r\n        width: '15%',\r\n        fontSize: '15px',\r\n        paddingRight: theme.spacing(2),\r\n        paddingTop: theme.spacing(2)\r\n    },\r\n    inputFieldWrapper: {},\r\n    selectTab: {\r\n        borderBottom: 'none',\r\n        border: '.5px solid rgb(211,211,211,0.7)'\r\n    },\r\n    selectTabActive: {\r\n        borderBottom: 'none',\r\n        border: '.5px solid rgb(211,211,211,0.7)',\r\n        width: '100px'\r\n    },\r\n    buttonWrapper: {\r\n        margin: theme.spacing(3)\r\n    },\r\n    inputwraper: {\r\n        marginLeft: theme.spacing(2)\r\n    },\r\n    table: {\r\n        minWidth: 650\r\n    }\r\n}),);\r\n\r\nconst columns : ColDef[] = [\r\n    {\r\n        field: 'id',\r\n        headerName: 'Id',\r\n        width: 60\r\n    }, {\r\n        field: 'Created',\r\n        headerName: 'Created',\r\n        width: 130\r\n    }, {\r\n        field: 'Last_Updated',\r\n        headerName: 'Last Updated',\r\n        width: 130\r\n    }, {\r\n        field: 'User',\r\n        headerName: 'User',\r\n        width: 130\r\n    }, {\r\n        field: 'Text',\r\n        headerName: 'Text',\r\n        width: 250\r\n    }, {\r\n        field: 'Active',\r\n        headerName: 'Active',\r\n        width: 130\r\n    }\r\n];\r\n\r\nconst rows = [\r\n    {\r\n        id: 1,\r\n        Created: 1,\r\n        Last_Updated: 1,\r\n        User: 'Snow',\r\n        Text: 'Jon',\r\n        Active: true\r\n    }, {\r\n        id: 2,\r\n        Created: 2,\r\n        Last_Updated: 2,\r\n        User: 'Lannister',\r\n        Text: 'Cersei',\r\n        Active: false\r\n    }, {\r\n        id: 3,\r\n        Created: 3,\r\n        Last_Updated: 3,\r\n        User: 'Lannister',\r\n        Text: 'Jaime',\r\n        Active: false\r\n    }, {\r\n        id: 4,\r\n        Created: 4,\r\n        Last_Updated: 4,\r\n        User: 'Stark',\r\n        Text: 'Arya',\r\n        Active: true\r\n    }, {\r\n        id: 5,\r\n        Created: 5,\r\n        Last_Updated: 5,\r\n        User: 'Targaryen',\r\n        Text: 'Daenerys',\r\n        Active: null\r\n    }, {\r\n        id: 6,\r\n        Created: 6,\r\n        Last_Updated: 6,\r\n        User: 'Melisandre',\r\n        Text: null,\r\n        Active: true\r\n    }, {\r\n        id: 7,\r\n        Created: 7,\r\n        Last_Updated: 7,\r\n        User: 'Clifford',\r\n        Text: 'Ferrara',\r\n        Active: false\r\n    }, {\r\n        id: 8,\r\n        Created: 8,\r\n        Last_Updated: 8,\r\n        User: 'Frances',\r\n        Text: 'Rossini',\r\n        Active: true\r\n    }, {\r\n        id: 9,\r\n        Created: 9,\r\n        Last_Updated: 9,\r\n        User: 'Roxie',\r\n        Text: 'Harvey',\r\n        Active: true\r\n    }\r\n];\r\n\r\nconst Memo : React.FC < {} > = () => {\r\n    const classes = useStyles();\r\n    const [open,\r\n        setOpen] = React.useState(false);\r\n    const [row,setRow]=React.useState('')\r\n    console.log(row);\r\n\r\n    var deleteIcon = (\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.buttonWrapper}>\r\n            Add Memo\r\n        </Button>\r\n    );\r\n\r\n    const rowhandler = (ro : any) => {\r\n        setRow(ro);\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    return (\r\n        <React.Fragment>\r\n            <div className={classes.root}>\r\n                <Typography className={classes.title}>Add New Memo :\r\n                </Typography>\r\n                <div className={classes.inputFieldWrapper}>\r\n                    <label className={classes.label}>Memo Text :</label>\r\n                    <TextField\r\n                        className={classes.inputwraper}\r\n                        id=\"code-consolidated\"\r\n                        variant=\"outlined\"/>\r\n                    <Button variant=\"contained\" color=\"primary\" className={classes.buttonWrapper}>\r\n                        Add Memo\r\n                    </Button>\r\n                </div>\r\n                <hr/>\r\n                <div\r\n                    style={{\r\n                    height: 400,\r\n                    width: '100%'\r\n                }}>\r\n                    <DataGrid\r\n                        rows={rows}\r\n                        columns={columns}\r\n                        pageSize={5}\r\n                        onRowSelected={(row) => {\r\n                        rowhandler(row)\r\n                    }}/>\r\n                </div>\r\n\r\n                <Button variant=\"contained\" color=\"primary\" className={classes.buttonWrapper}>\r\n                    Edit\r\n                </Button>\r\n                <Button variant=\"contained\" color=\"secondary\" className={classes.buttonWrapper}>\r\n                    Delete\r\n                </Button>\r\n\r\n            </div>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={open}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                timeout: 500\r\n            }}>\r\n                <Fade in={open}>\r\n                    <div className={classes.paper}>\r\n                        <div className={classes.inputFieldWrapper}>\r\n                <label className={classes.label}>{}</label>\r\n                <TextField id=\"code\" label=\"Code\" variant=\"outlined\" />\r\n            </div>\r\n            <div className={classes.inputFieldWrapper}>\r\n                <label className={classes.label}>Default name :</label>\r\n                <TextField id=\"cost-center\" variant=\"outlined\" label=\"Default name :\"/>\r\n            </div>\r\n\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default Memo","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\create-and-amend-accounts\\amend-nominal-account-details\\Attachment.tsx",["1099"],"import React from \"react\"\r\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport {DataGrid, ColDef} from '@material-ui/data-grid';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\n\r\nconst useStyles = makeStyles((theme : Theme) => createStyles({\r\n    root: {\r\n\r\n        margin: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3)\r\n    },\r\n    accountsWrapper: {},\r\n    title: {\r\n        textAlign: 'left',\r\n        fontSize: '17px',\r\n        fontWeight: 'bold'\r\n    },\r\n    label: {\r\n        width: '15%',\r\n        fontSize: '15px',\r\n        paddingRight: theme.spacing(2),\r\n        paddingTop: theme.spacing(2)\r\n    },\r\n    inputFieldWrapper: {},\r\n    selectTab: {\r\n        borderBottom: 'none',\r\n        border: '.5px solid rgb(211,211,211,0.7)'\r\n    },\r\n    selectTabActive: {\r\n        borderBottom: 'none',\r\n        border: '.5px solid rgb(211,211,211,0.7)',\r\n        width: '100px'\r\n    },\r\n    buttonWrapper: {\r\n        margin: theme.spacing(3)\r\n    },\r\n    inputwraper: {\r\n        marginLeft: theme.spacing(2)\r\n    },\r\n    table: {\r\n        minWidth: 500\r\n    }\r\n}),);\r\n\r\nconst columns : ColDef[] = [\r\n    {\r\n        field: 'filename',\r\n        headerName: 'Filename',\r\n        width: 110\r\n    }, {\r\n        field: 'description',\r\n        headerName: 'Description',\r\n        width: 130\r\n    }, {\r\n        field: 'status',\r\n        headerName: 'Status',\r\n        width: 80\r\n    }, {\r\n        field: 'filetype',\r\n        headerName: 'Filetype',\r\n        width: 85\r\n    }, {\r\n        field: 'filesize',\r\n        headerName: 'Filesize',\r\n        width: 85\r\n    }, {\r\n        field: 'date',\r\n        headerName: 'Date Modified',\r\n        width: 120\r\n    }, {\r\n        field: 'time',\r\n        headerName: 'Time Modified',\r\n        width: 120\r\n    }, {\r\n        field: 'link',\r\n        headerName: 'Link',\r\n        width: 70\r\n    }\r\n];\r\n\r\nconst rows = [\r\n    {\r\n        id: 1,\r\n        Created: 1,\r\n        Last_Updated: 1,\r\n        User: 'Snow',\r\n        Text: 'Jon',\r\n        Active: true\r\n    }\r\n];\r\n\r\nconst Attachment : React.FC < {} > = () => {\r\n    const classes = useStyles();\r\n    const [open,\r\n        setOpen] = React.useState(false);\r\n    const [row,setRow]=React.useState('')\r\n    console.log(row);\r\n\r\n    var deleteIcon = (\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.buttonWrapper}>\r\n            Add Memo\r\n        </Button>\r\n    );\r\n\r\n    const rowhandler = (ro : any) => {\r\n        setRow(ro);\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    return (\r\n        <React.Fragment>\r\n            <div className={classes.root}>\r\n                <Typography className={classes.title}>Attachment :\r\n                </Typography>\r\n                \r\n                <div\r\n                    style={{\r\n                    height: 400,\r\n                    width: '100%'\r\n                }}>\r\n                    <DataGrid\r\n                        rows={rows}\r\n                        columns={columns}\r\n                        pageSize={5}\r\n                        onRowSelected={(row) => {\r\n                        rowhandler(row)\r\n                    }}/>\r\n                </div>\r\n\r\n                <Button   component=\"label\" variant=\"contained\" className={classes.buttonWrapper}>\r\n  Upload File\r\n  <input\r\n    type=\"file\"\r\n    hidden\r\n  />\r\n               </Button>\r\n                <Button   component=\"label\" variant=\"contained\" color=\"primary\" className={classes.buttonWrapper}>\r\n  Upload Link\r\n  <input\r\n    type=\"file\"\r\n    hidden\r\n  />\r\n               </Button>\r\n               <Button   component=\"label\" variant=\"contained\" color=\"secondary\" className={classes.buttonWrapper}>\r\n  Upload Folder\r\n  <input\r\n    type=\"file\"\r\n    hidden\r\n  />\r\n               </Button>\r\n            </div>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={open}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                timeout: 500\r\n            }}>\r\n                <Fade in={open}>\r\n                    <div className={classes.paper}>\r\n                        <h4>Modal</h4>\r\n            \r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n\r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default Attachment","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\create-and-amend-accounts\\create-accounts-for-cost-center-department\\Costcenter_Department.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\create-and-amend-accounts\\create-accounts-for-cost-center-department\\Department.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\enter-transactions\\sales-credit-note\\index.tsx",["1100","1101"],"import React from 'react';\r\nimport { createStyles, makeStyles, Theme, withStyles } from '@material-ui/core/styles';\r\nimport { Paper, Grid, Typography, TextField, InputAdornment, Checkbox, FormControlLabel, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TableFooter, Button, MenuItem, IconButton } from '@material-ui/core';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    padding: '5px',\r\n    maxWidth: '100%',\r\n    '& .MuiGrid-item': {\r\n        height: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(3),\r\n    textAlign: 'left',\r\n    color: theme.palette.text.primary,\r\n    fontWeight: theme.typography.fontWeightBold,\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        marginLeft: theme.spacing(0),\r\n        marginBottom: theme.spacing(0),\r\n        width: '25ch'\r\n      },\r\n  },\r\n}));\r\n\r\nconst StyledTableCell = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    head: {\r\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 12,\r\n    },\r\n  }),\r\n)(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      '&:nth-child(1)': {\r\n          display: 'none',\r\n      }\r\n    },\r\n  }),\r\n)(TableRow);\r\n\r\nconst customerData = [\r\n    {Code:'A1D001',ShortName:'A1 Desig', Name:'A1 Design', Postcode: 'BP127HT', Balance: '1120.92', OnHold: 'No', CreditLimit: '2000', availableCredit: '980'},\r\n    {Code:'A1D002',ShortName:'A2 Desig', Name:'A2 Design', Postcode: 'BP127HT', Balance: '174.00', OnHold: 'No', CreditLimit: '60000', availableCredit: '59826' },\r\n    {Code:'A1D003',ShortName:'A2 Desig', Name:'A2 Design', Postcode: 'BP127HT', Balance: '16364.99', OnHold: 'No'},\r\n    {Code:'ABS001',ShortName:'ABS Gara', Name:'ABS Garage', Postcode: 'NE311VB', Balance: '2368.16', OnHold: 'No'},\r\n    {Code:'ASB002',ShortName:'ABS Shop', Name:'ABS Garage', Postcode: 'NE311VB', Balance: '0.00', OnHold: 'No'}\r\n]\r\n\r\nconst dummyVATData = [\r\n    {Code: '', Name:'', Rate:'', GoodsValue:'', VATValue: '', VATDiscount: '', DiscountValue: ''},\r\n    {Code: '', Name:'', Rate:'', GoodsValue:'', VATValue: '', VATDiscount: '', DiscountValue: ''},\r\n]\r\n\r\nconst VATData = [\r\n    {Code: '1', Name:'Standard rate', Rate:'20.00', GoodsValue:'20.00', VATValue: '0.00', VATDiscount: '0.00', DiscountValue: '0.00', mappedCode: 'A1D001'},\r\n    {Code: '2', Name:'Standard rate', Rate:'30.00', GoodsValue:'60.00', VATValue: '0.00', VATDiscount: '0.00', DiscountValue: '0.00', mappedCode: 'A1D001'},\r\n    {Code: '1', Name:'Standard rate', Rate:'20.00', GoodsValue:'0.00', VATValue: '0.00', VATDiscount: '0.00', DiscountValue: '0.00', mappedCode: 'A1D002'}\r\n]\r\n\r\nconst dummyNominialData = [\r\n    {Code: '', CC:'', Dept:'', Name:'', GoodsValue:'', Type:'', Narrative:'', TransactionAnalysis:''},\r\n    {Code: '', CC:'', Dept:'', Name:'', GoodsValue:'', Type:'', Narrative:'', TransactionAnalysis:''},\r\n]\r\n\r\nconst NominialData = [\r\n    {Code: '4000', CC:'', Dept:'', Name:'Sales', GoodsValue:'0.00', Type:'Posting', Narrative:'SI/AD001', TransactionAnalysis:'', mappedCode: 'A1D001'},\r\n    {Code: '4000', CC:'ADM', Dept:'4', Name:'Sales North.', GoodsValue:'0.00', Type:'Posting', Narrative:'SI/AD002', TransactionAnalysis:'', mappedCode: 'A1D002'},\r\n]\r\n\r\nconst TransactionData = [\r\n    {\r\n        GoodsValue: '0.00',\r\n        DiscountPercent: '2.50',\r\n        DiscountDays: '15',\r\n        DiscountValue: '0.00',\r\n        VATDiscount: '0.00',\r\n        VATValue: '0.00',\r\n        CreditNoteTotal: '0.00',\r\n        DiscCreditTotal: '0.00',\r\n        mappedCode: 'A1D001'\r\n    },\r\n    {\r\n        GoodsValue: '0.00',\r\n        DiscountPercent: '0.00',\r\n        DiscountDays: '15',\r\n        DiscountValue: '0.00',\r\n        VATDiscount: '0.00',\r\n        VATValue: '0.00',\r\n        CreditNoteTotal: '0.00',\r\n        DiscCreditTotal: '0.00',\r\n        mappedCode: 'A1D002'\r\n    },\r\n]\r\n\r\nconst defaultTransactionData = {\r\n    GoodsValue: '',\r\n    DiscountPercent: '',\r\n    DiscountDays: '',\r\n    DiscountValue: '',\r\n    VATDiscount: '',\r\n    VATValue: '',\r\n    CreditNoteTotal: '',\r\n    DiscCreditTotal: '',\r\n    mappedCode: ''\r\n}\r\n\r\nconst SalesCreditNote: React.FC<{}> = () => {\r\n    const classes = useStyles();\r\n    const [code, setCode] = React.useState('');\r\n    const [shortName, setShortName] = React.useState('');\r\n    const [postcode, setPostcode] = React.useState('');\r\n    const [creditLimit, setCreditLimit] = React.useState('');\r\n    const [balance, setBalance] = React.useState('');\r\n    const [availableCredit, setAvailableCredit] = React.useState('');\r\n    const [transaction, setTransaction] = React.useState(defaultTransactionData);\r\n    const [VATAnalysisData, setVATAnalysisData] = React.useState(dummyVATData);\r\n    const [NominialAnalysisData, setNominialAnalysisData] = React.useState(dummyNominialData);\r\n\r\n    const setCustomerData = (customer:any, value: string) => {\r\n        reset();\r\n        setCode(customer.Code||'');\r\n        setShortName(customer.ShortName||'');\r\n        setPostcode(customer.Postcode||'');\r\n        setCreditLimit(customer.CreditLimit||'');\r\n        setBalance(customer.Balance||'');\r\n        setAvailableCredit(customer.availableCredit||'');\r\n        let vd = VATData.filter(row => row.mappedCode === value);\r\n        let nd = NominialData.filter(row => row.mappedCode === value);\r\n        let td = TransactionData.find(row => row.mappedCode === value);\r\n        setTransaction(td || defaultTransactionData );\r\n        setVATAnalysisData(vd);\r\n        setNominialAnalysisData(nd);\r\n    }\r\n    const handleCodeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let value = event.target.value;\r\n        if(value === '') return;\r\n        let customer = customerData.find(row => row.Code === value);\r\n        if(customer === undefined) return;\r\n        setCustomerData(customer, value);\r\n    };\r\n    \r\n    const handleShortNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let value = event.target.value;\r\n        if(value === '') return;\r\n        let customer = customerData.find(row => row.ShortName === value);\r\n        if(customer === undefined) return;\r\n        setCustomerData(customer, value);\r\n    };\r\n\r\n    const handlePostcodeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let value = event.target.value;\r\n        if(value === '') return;\r\n        let customer = customerData.find(row => row.Postcode === value);\r\n        if(customer === undefined) return;\r\n        setCustomerData(customer, value);\r\n    };\r\n    \r\n    const reset = () => {\r\n        setCode( '');\r\n        setShortName( '');\r\n        setCreditLimit('');\r\n        setPostcode( '');\r\n        setBalance( '');\r\n        setAvailableCredit('');\r\n        setTransaction(defaultTransactionData);\r\n        setVATAnalysisData(dummyVATData);\r\n        setNominialAnalysisData(dummyNominialData);\r\n    }\r\n    const save = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        alert(\"Saved!\");\r\n        reset();\r\n    }\r\n\r\n    const clear = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        alert(\"Cleared!\");\r\n        reset();\r\n    }\r\n    \r\n    const NAGoodsValueTotal = () => {\r\n        let total=0;\r\n        if(NominialAnalysisData===dummyNominialData) return 0;\r\n        for(let i=0;i<NominialAnalysisData.length;i++)\r\n        {\r\n            total+=parseFloat(NominialAnalysisData[i].GoodsValue);\r\n        }\r\n        return total;\r\n    }\r\n\r\n    const VATotals = () => {\r\n        let GoodsValue=0, DiscountValue=0, VATDiscount=0, VATValue=0;\r\n        if(VATAnalysisData===dummyVATData) return { GoodsValue, DiscountValue, VATDiscount, VATValue };\r\n        for(let i=0;i<VATAnalysisData.length;i++)\r\n        {\r\n            GoodsValue+=parseFloat(VATAnalysisData[i].GoodsValue);\r\n            DiscountValue+=parseFloat(VATAnalysisData[i].DiscountValue);\r\n            VATDiscount+=parseFloat(VATAnalysisData[i].VATDiscount);\r\n            VATValue+=parseFloat(VATAnalysisData[i].VATValue);\r\n        }\r\n        return { GoodsValue, DiscountValue, VATDiscount, VATValue };\r\n    }\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid container justify='center'>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h5\" component=\"h5\" align='center' style={{padding:'10px',fontWeight: 'bold'}}>\r\n                SALES CREDIT NOTE\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={8}>\r\n            <Paper className={classes.paper} elevation={0} variant='outlined'>\r\n                <Typography variant=\"h6\" component=\"h6\" align='left'>\r\n                    Customer details\r\n                </Typography>\r\n                <form className={classes.form} noValidate autoComplete=\"off\">\r\n                    <Grid item xs={6}>\r\n                        <TextField \r\n                            id=\"code\" \r\n                            select label=\"Code\" \r\n                            variant=\"filled\"\r\n                            size=\"small\"\r\n                            value={code}\r\n                            onChange={handleCodeChange}\r\n                        >\r\n                            {customerData.map((option) => (\r\n                                <MenuItem key={option.Code} value={option.Code}>\r\n                                    {option.Code}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n                        <TextField \r\n                            id=\"short-name\" \r\n                            select label=\"Short Name\" \r\n                            variant=\"filled\" \r\n                            size=\"small\" \r\n                            value={shortName}\r\n                            onChange={handleShortNameChange}>\r\n                            {customerData.map((option) => (\r\n                                <MenuItem key={option.ShortName} value={option.ShortName}>\r\n                                    {option.ShortName}\r\n                                </MenuItem>\r\n                            ))}                                \r\n                        </TextField>\r\n                        <TextField \r\n                            id=\"postcode\" \r\n                            select \r\n                            label=\"Postcode\"\r\n                            variant=\"filled\"\r\n                            size=\"small\"\r\n                            value={postcode}\r\n                            onChange={handlePostcodeChange}>\r\n                            {customerData.map((option) => (\r\n                                <MenuItem key={option.Postcode} value={option.Postcode}>\r\n                                    {option.Postcode}\r\n                                </MenuItem>\r\n                            ))} \r\n                        </TextField>   \r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                            label=\"Credit limit\"\r\n                            id=\"credit-limit\"\r\n                            InputProps={{\r\n                                startAdornment: <InputAdornment position='start'>£</InputAdornment>,\r\n                            }}\r\n                            variant=\"filled\"\r\n                            size=\"small\"\r\n                            value={creditLimit}\r\n                            />\r\n                        <TextField\r\n                            label=\"Balance\"\r\n                            id=\"balance\"\r\n                            InputProps={{\r\n                                startAdornment: <InputAdornment position='start'>£</InputAdornment>,\r\n                            }}\r\n                            variant=\"filled\"\r\n                            size=\"small\"\r\n                            value={balance}\r\n                        />\r\n                        <TextField\r\n                            label=\"Available credit\"\r\n                            id=\"balance\"\r\n                            InputProps={{\r\n                                startAdornment: <InputAdornment position='start'>£</InputAdornment>,\r\n                            }}\r\n                            variant=\"filled\"\r\n                            size=\"small\"\r\n                            value={availableCredit}\r\n                        />                             \r\n                    </Grid>\r\n                </form>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Paper className={classes.paper} elevation={0} variant='outlined'>\r\n                <Typography variant=\"h6\" component=\"h6\" align='left'>\r\n                    Credit Note details\r\n                </Typography>\r\n                <form className={classes.form} noValidate autoComplete=\"off\">\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            id=\"credit-note-date\"\r\n                            label=\"Credit note date\"\r\n                            type=\"date\"\r\n                            defaultValue=\"2017-05-24\"\r\n                            variant=\"filled\"\r\n                            size=\"small\"/>\r\n                        <TextField\r\n                            id=\"reference\"\r\n                            label=\"Reference\"\r\n                            variant=\"filled\"\r\n                            size=\"small\"/>   \r\n                        <TextField\r\n                            id=\"sec-reference\"\r\n                            label=\"Second ref\"\r\n                            variant=\"filled\"\r\n                            size=\"small\"/>\r\n                    </Grid>\r\n                </form>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Paper className={classes.paper} elevation={0} variant='outlined'>\r\n                <Typography variant=\"h6\" component=\"h6\" align='left'>\r\n                    Transaction details\r\n                </Typography>\r\n                <form className={classes.form} noValidate autoComplete=\"off\">\r\n                    <Grid item xs={4}>\r\n                        <TextField\r\n                            label=\"Goods value\"\r\n                            id=\"goods-value\"\r\n                            InputProps={{\r\n                                startAdornment: <InputAdornment position='start'>£</InputAdornment>,\r\n                            }}\r\n                            variant=\"filled\"\r\n                            size=\"small\"\r\n                            value={transaction?.GoodsValue||''}\r\n                        />\r\n                        <TextField \r\n                            id=\"discount-percent\"\r\n                            label=\"Discount percent\"\r\n                            variant=\"filled\"\r\n                            InputProps={{\r\n                                endAdornment: <InputAdornment position='end'>%</InputAdornment>,\r\n                            }}\r\n                            size=\"small\"\r\n                            value={transaction?.DiscountPercent ||''}\r\n                        />\r\n                        <FormControlLabel\r\n                            control={\r\n                            <Checkbox\r\n                                id=\"traingulated\"\r\n                                name=\"traingulated\"\r\n                                color=\"primary\"\r\n                                disabled={code===''}\r\n                            />\r\n                            }\r\n                            label=\"Traingulated\"\r\n                        />\r\n                        <FormControlLabel\r\n                            control={\r\n                            <Checkbox\r\n                                id=\"settled\"\r\n                                name=\"settled\"\r\n                                color=\"primary\"\r\n                                disabled={code===''}\r\n                            />\r\n                            }\r\n                            label=\"Settled immediately\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <TextField\r\n                            id=\"dicount-days\"\r\n                            label=\"Discount days\"\r\n                            variant=\"filled\"\r\n                            size=\"small\"\r\n                            value={transaction?.DiscountDays ||''}\r\n                        />\r\n                        <TextField\r\n                            label=\"Discount value\"\r\n                            id=\"discount-value\"\r\n                            InputProps={{\r\n                                startAdornment: <InputAdornment position='start'>£</InputAdornment>,\r\n                            }}\r\n                            variant=\"filled\"\r\n                            size=\"small\"\r\n                            value={transaction?.DiscountValue ||''}\r\n                            />\r\n                        <TextField\r\n                            label=\"VAT discount\"\r\n                            id=\"vat-discount\"\r\n                            InputProps={{\r\n                                startAdornment: <InputAdornment position='start'>£</InputAdornment>,\r\n                            }}\r\n                            variant=\"filled\"\r\n                            size=\"small\"\r\n                            value={transaction?.VATDiscount ||''}\r\n                        />                      \r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <TextField\r\n                            label=\"VAT value\"\r\n                            id=\"vat-value\"\r\n                            InputProps={{\r\n                                startAdornment: <InputAdornment position='start'>£</InputAdornment>,\r\n                            }}\r\n                            variant=\"filled\"\r\n                            size=\"small\"\r\n                            value={transaction?.VATValue ||''}\r\n                        />  \r\n                        <TextField\r\n                            label=\"Credit note total\"\r\n                            id=\"credit-note-total\"\r\n                            InputProps={{\r\n                                startAdornment: <InputAdornment position='start'>£</InputAdornment>,\r\n                            }}\r\n                            variant=\"filled\"\r\n                            size=\"small\"\r\n                            value={transaction?.CreditNoteTotal ||''}\r\n                        />\r\n                        <TextField\r\n                            label=\"Disc credit total\"\r\n                            id=\"disc-credit-total\"\r\n                            InputProps={{\r\n                                startAdornment: <InputAdornment position='start'>£</InputAdornment>,\r\n                            }}\r\n                            variant=\"filled\"\r\n                            size=\"small\"\r\n                            value={transaction?.DiscCreditTotal ||''}\r\n                        />                        \r\n                    </Grid>\r\n                </form>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Paper className={classes.paper} elevation={0} variant='outlined'>\r\n                <Typography variant=\"h6\" component=\"h6\" align='left'>\r\n                    VAT analysis\r\n                </Typography>   \r\n                <TableContainer >\r\n                <Table aria-label=\"customized table\" size=\"small\">\r\n                    <TableHead>\r\n                    <TableRow>\r\n                        <StyledTableCell>Code</StyledTableCell>\r\n                        <StyledTableCell>Name</StyledTableCell>\r\n                        <StyledTableCell>Rate</StyledTableCell>\r\n                        <StyledTableCell>Goods value</StyledTableCell>\r\n                        <StyledTableCell>Discount value</StyledTableCell>\r\n                        <StyledTableCell>VAT discount</StyledTableCell>\r\n                        <StyledTableCell>VAT value</StyledTableCell>\r\n                    </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {VATAnalysisData.map((row) => (\r\n                        <StyledTableRow key={row.Code}>\r\n                            <StyledTableCell component=\"th\" scope=\"row\">\r\n                                {row.Code}\r\n                            </StyledTableCell>\r\n                            <StyledTableCell>{row.Name}</StyledTableCell>\r\n                            <StyledTableCell>{row.Rate}</StyledTableCell>\r\n                            <StyledTableCell>{row.GoodsValue}</StyledTableCell>\r\n                            <StyledTableCell>{row.DiscountValue}</StyledTableCell>\r\n                            <StyledTableCell>{row.VATDiscount}</StyledTableCell>\r\n                            <StyledTableCell>{row.VATValue}</StyledTableCell>\r\n                        </StyledTableRow>\r\n                    ))}\r\n                    </TableBody>\r\n                    {/* <IconButton size=\"small\">\r\n                        <AddIcon />\r\n                    </IconButton> */}\r\n                    <TableFooter style={{borderTop:'2px solid rgba(0,0,0,0.3)'}}>\r\n                        <TableRow>\r\n                            <StyledTableCell>\r\n                                Totals\r\n                            </StyledTableCell>\r\n                            <StyledTableCell/>\r\n                            <StyledTableCell/>\r\n                            <StyledTableCell>\r\n                                {VATotals().GoodsValue}\r\n                            </StyledTableCell>\r\n                            <StyledTableCell>\r\n                                {VATotals().DiscountValue}\r\n                            </StyledTableCell>\r\n                            <StyledTableCell>\r\n                                {VATotals().VATDiscount}\r\n                            </StyledTableCell>\r\n                            <StyledTableCell>\r\n                                {VATotals().VATValue}\r\n                            </StyledTableCell>\r\n                        </TableRow>\r\n                    </TableFooter>\r\n                </Table>\r\n            </TableContainer>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n          <Paper className={classes.paper} elevation={0} variant='outlined'>\r\n                <Typography variant=\"h6\" component=\"h6\" align='left'>\r\n                    Nominial analysis\r\n                </Typography>   \r\n                <TableContainer>\r\n                  <Table aria-label=\"customized table\" size=\"small\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell>Code</StyledTableCell>\r\n                            <StyledTableCell>CC</StyledTableCell>\r\n                            <StyledTableCell>Dept</StyledTableCell>\r\n                            <StyledTableCell>Name</StyledTableCell>\r\n                            <StyledTableCell>Goods value</StyledTableCell>\r\n                            <StyledTableCell>Type</StyledTableCell>\r\n                            <StyledTableCell>Narrative</StyledTableCell>\r\n                            <StyledTableCell>Transaction analysis</StyledTableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {NominialAnalysisData.map((row) => (\r\n                        <StyledTableRow key={row.Code}>\r\n                            <StyledTableCell component=\"th\" scope=\"row\">\r\n                                {row.Code }\r\n                            </StyledTableCell>\r\n                            <StyledTableCell>{row.CC}</StyledTableCell>\r\n                            <StyledTableCell>{row.Dept}</StyledTableCell>\r\n                            <StyledTableCell>{row.Name}</StyledTableCell>\r\n                            <StyledTableCell>{row.GoodsValue}</StyledTableCell>\r\n                            <StyledTableCell>{row.Type}</StyledTableCell>\r\n                            <StyledTableCell>{row.Narrative}</StyledTableCell>\r\n                            <StyledTableCell>{row.TransactionAnalysis}</StyledTableCell>\r\n                        </StyledTableRow>\r\n                    ))}\r\n                    </TableBody>\r\n                    <TableFooter style={{borderTop:'2px solid rgba(0,0,0,0.3)'}}>\r\n                        <TableRow>\r\n                            <StyledTableCell>\r\n                                Totals\r\n                            </StyledTableCell>\r\n                            <StyledTableCell/>\r\n                            <StyledTableCell/>\r\n                            <StyledTableCell/>\r\n                            <StyledTableCell>\r\n                                {NAGoodsValueTotal()}\r\n                            </StyledTableCell>\r\n                            <StyledTableCell/>\r\n                            <StyledTableCell/>\r\n                            <StyledTableCell/>\r\n                        </TableRow>\r\n                    </TableFooter>\r\n                </Table>\r\n                </TableContainer>\r\n            </Paper>\r\n          </Grid>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            startIcon={<SaveIcon />}\r\n            style={{margin:'10px',marginBottom:'20px'}}\r\n            onClick={save}\r\n          >Save</Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            startIcon={<ClearIcon />}\r\n            style={{margin:'10px',marginBottom:'20px'}}\r\n            onClick={clear}\r\n          >Clear</Button>\r\n        </Grid>\r\n      </div>\r\n    );\r\n}\r\nexport default SalesCreditNote","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\create-amend-accounts\\create-customer\\panels\\company.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\create-amend-accounts\\create-customer\\panels\\payment.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\create-amend-accounts\\create-customer\\panels\\credit.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\create-amend-accounts\\create-customer\\panels\\memo.tsx",["1102"],"import React, { useState } from \"react\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport BottomDrower from \"../../../../../../components/bottom-navigation\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n    modal: {\r\n      width: 400,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"2px solid #000\",\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n    heading: {\r\n      paddingLeft: theme.spacing(1),\r\n      paddingRight: theme.spacing(1),\r\n    },\r\n\r\n    labelterms: {\r\n      \"& .MuiFormControlLabel-label\": {\r\n        color: \"rgba(0, 0, 0, 0.54)\",\r\n        fontSize: 14,\r\n      },\r\n    },\r\n  })\r\n);\r\nconst Memo: React.FC<{}> = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={12} sm={6}>\r\n          <h3 className={classes.heading}>Alerts</h3>\r\n          <Grid item xs={12} md={12} sm={12}>\r\n            <TableContainer component={Paper}>\r\n              <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Created </TableCell>\r\n                    <TableCell>Last Updates</TableCell>\r\n                    <TableCell align=\"right\">User</TableCell>\r\n                    <TableCell align=\"right\">Text</TableCell>\r\n                    <TableCell align=\"right\">Active</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  <TableRow key={\"row.name\"}>\r\n                    <TableCell component=\"th\" scope=\"row\"></TableCell>\r\n                    <TableCell></TableCell>\r\n                    <TableCell align=\"right\"></TableCell>\r\n                    <TableCell align=\"right\"></TableCell>\r\n                    <TableCell align=\"right\"></TableCell>\r\n                  </TableRow>\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} md={12} sm={12}>\r\n          <BottomDrower>\r\n            <div>\r\n              <FormControlLabel\r\n                className={classes.labelterms}\r\n                control={<Checkbox name=\"checkedB\" color=\"primary\" />}\r\n                label=\"Terms agreed\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <Button variant=\"contained\">Add</Button>\r\n              <Button variant=\"contained\" color=\"primary\">\r\n                Edit\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\">\r\n                Delete\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\">\r\n                Set as Active\r\n              </Button>\r\n            </div>\r\n          </BottomDrower>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default Memo;\r\n","E:\\sage_clone\\jan_warehouse\\src\\components\\navItem\\index.tsx",["1103"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\r\n\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Collapse from '@material-ui/core/Collapse'\r\nimport { history } from \"../../utils/history\"\r\n\r\nimport IconExpandLess from '@material-ui/icons/ExpandLess'\r\nimport IconExpandMore from '@material-ui/icons/ExpandMore'\r\n\r\n\r\nconst useStyles = makeStyles(theme =>\r\n  createStyles({\r\n    menuItem: {\r\n      \"& .MuiListItemIcon-root\":{\r\n        minWidth:34\r\n      },\r\n      \"& .MuiListItemText-inset\":{\r\n        paddingLeft:34\r\n      }\r\n    },\r\n    menuItemIcon: {},\r\n  }),\r\n)\r\n\r\n// React runtime PropTypes\r\nexport const NavItemPropTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  link: PropTypes.string,\r\n  Icon: PropTypes.elementType,\r\n  items: PropTypes.array,\r\n}\r\n\r\n\r\ntype NavItemPropTypes = PropTypes.InferProps<typeof NavItemPropTypes>\r\ntype NavItemPropsWithoutItems = Omit<NavItemPropTypes, 'items'>\r\n\r\n// Improve child items declaration\r\nexport type NavItemProps = NavItemPropsWithoutItems & {\r\n  items?: NavItemProps[]\r\n}\r\n\r\nconst NavItem: React.FC<NavItemProps> = props => {\r\n  const { name, Icon, items = [], link } = props\r\n  const classes = useStyles()\r\n  const isExpandable = items && items.length > 0\r\n  const [open, setOpen] = React.useState(false)\r\n\r\n  function handleClick() {\r\n    setOpen(!open)\r\n  }\r\n  function handleLinkClick(link: string) {\r\n    history.push(link)\r\n  }\r\n  const MenuItemRoot = (\r\n    <>\r\n      {!link\r\n        ?\r\n        <ListItem dense button className={classes.menuItem} onClick={handleClick}>\r\n          {/* Display an icon if any */}\r\n          {!!Icon && (\r\n            <ListItemIcon className={classes.menuItemIcon}>\r\n              <Icon />\r\n            </ListItemIcon>\r\n          )}\r\n          <ListItemText primary={name} inset={!Icon} />\r\n          {/* Display the expand menu if the item has children */}\r\n          {isExpandable && !open && <IconExpandMore />}\r\n          {isExpandable && open && <IconExpandLess />}\r\n        </ListItem> :\r\n        <ListItem dense button className={classes.menuItem} onClick={() => handleLinkClick(link)}>\r\n          {/* Display an icon if any */}\r\n          {!!Icon && (\r\n            <ListItemIcon className={classes.menuItemIcon}>\r\n              <Icon />\r\n            </ListItemIcon>\r\n          )}\r\n          <ListItemText primary={name} inset={!Icon} />\r\n          {/* Display the expand menu if the item has children */}\r\n          {isExpandable && !open && <IconExpandMore />}\r\n          {isExpandable && open && <IconExpandLess />}\r\n        </ListItem>}\r\n    </>\r\n  )\r\n\r\n  const MenuItemChildren = isExpandable ? (\r\n    <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n      <Divider />\r\n      <List component=\"div\" disablePadding>\r\n        {items.map((item, index) => (\r\n          <NavItem {...item} key={index} />\r\n        ))}\r\n      </List>\r\n    </Collapse>\r\n  ) : null\r\n\r\n  return (\r\n    <>\r\n      {MenuItemRoot}\r\n      {MenuItemChildren}\r\n    </>\r\n  )\r\n}\r\n\r\nNavItem.propTypes = NavItemPropTypes\r\n\r\n\r\nexport default NavItem\r\n","E:\\sage_clone\\jan_warehouse\\src\\components\\bottom-navigation\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\reportWebVitals.ts",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\bank-account\\transactions\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\summaries\\stock-control\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\create-and-amend-accounts\\create-accounts-for-cost-center-department\\index.tsx",["1104","1105","1106","1107","1108"],"import React from \"react\"\r\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography/Typography'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// importing all three child components\r\nimport Cost_Center from './Cost_Center'\r\nimport Costcenter_Department from './Costcenter_Department'\r\nimport Department from './Department'\r\nconst useStyles = makeStyles((theme : Theme) => createStyles({\r\n    root: {\r\n        '& > *': {\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            margin: theme.spacing(2),\r\n            width: '100%'\r\n        }\r\n    },\r\n    accountsWrapper: {},\r\n    title: {\r\n        textAlign: 'left',\r\n        fontSize: '17px',\r\n        fontWeight: 'bold'\r\n    },\r\n    label: {\r\n        width: '15%',\r\n        fontSize: '15px',\r\n        paddingRight: theme.spacing(2),\r\n        paddingTop: theme.spacing(2)\r\n    },\r\n    inputFieldWrapper: {},\r\n    selectTab: {\r\n        width:'20%',\r\n        borderBottom: 'none',\r\n        border: '.5px solid rgb(211,211,211,0.7)'\r\n    },\r\n    selectTabActive: {\r\n        borderBottom: 'none',\r\n        border: '.5px solid rgb(211,211,211,0.7)',\r\n        width: '100px'\r\n    },\r\n    buttonWrapper: {\r\n        margin: theme.spacing(3)\r\n    },\r\n    inputwraper: {\r\n        marginLeft: theme.spacing(2)\r\n    },\r\n    table: {\r\n    minWidth: 650,\r\n    },\r\n    renderWrapper:{\r\n        padding:theme.spacing(3)\r\n    }\r\n}),);\r\n\r\nconst CreateAccountDepartment : React.FC < {} > = () => {\r\n    const classes = useStyles();\r\n    const [render,setRender]=React.useState('0')\r\n\r\n    function changeHandler(){\r\n        if(render=='0'){\r\n            return <Cost_Center/>\r\n        }\r\n        else if(render=='1'){\r\n            return <Department/>\r\n        }\r\n        else if(render=='2'){\r\n            return <Costcenter_Department/>\r\n        }\r\n    }\r\n\r\n    return ( <> <div className={classes.accountsWrapper}>\r\n        <Typography className={classes.title}>Generate Type :\r\n        </Typography>\r\n        <form className={classes.root} noValidate autoComplete=\"off\">\r\n            <div className={classes.inputFieldWrapper}>\r\n                <label className={classes.label}>Generate For :</label>\r\n                <Select\r\n                    id=\"code-dropdown\"\r\n                    className={classes.selectTab}\r\n                    onChange={(e) => {\r\n                    setRender((e.target as any).value)\r\n                }}>\r\n                    <MenuItem value={'0'}>Cost Centre</MenuItem>\r\n                    <MenuItem value={'1'}>Department</MenuItem>\r\n                    <MenuItem value={'2'}>Cost Centre And Department</MenuItem>\r\n                </Select>\r\n            </div>\r\n                \r\n        </form>\r\n\r\n        <div className={classes.renderWrapper}>\r\n            {changeHandler()}\r\n        </div>\r\n\r\n        <div>\r\n            <Button variant=\"contained\" className={classes.buttonWrapper}>Ok</Button>\r\n            <Button variant=\"contained\" color=\"primary\" className={classes.buttonWrapper}>\r\n                Cancel\r\n            </Button>\r\n        </div>\r\n    </div> </>\r\n    )\r\n}\r\nexport default CreateAccountDepartment","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-enquiries\\nominal-transaction-enquiry\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\enter-transactions\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\create-and-amend-accounts\\create-new-nominal-account\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\enter-transactions\\prepayment-journal-entry\\index.tsx",["1109"],"import React from \"react\"\r\nimport Grid from '@material-ui/core/Grid'\r\nimport {createStyles, makeStyles, Theme, withStyles} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker} from '@material-ui/pickers';\r\n\r\nconst BootstrapInput = withStyles((theme : Theme) => createStyles({\r\n    input: {\r\n        borderRadius: 4,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '1px solid #ced4da',\r\n        fontSize: 16,\r\n        padding: '7px 26px 7px 12px',\r\n        transition: theme\r\n            .transitions\r\n            .create(['border-color', 'box-shadow']),\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"'\r\n        ].join(','),\r\n        '&:focus': {\r\n            borderRadius: 4,\r\n            borderColor: '#80bdff',\r\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)'\r\n        }\r\n    }\r\n}),)(InputBase);\r\n\r\nconst useStyles = makeStyles((theme : Theme) => createStyles({\r\n    NominalVatableReceipt: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    NVtitle: {\r\n        fontSize: '20px',\r\n        fontWeight: 'bold'\r\n    },\r\n    NVFieldWrapper: {\r\n        padding: '10px 0'\r\n    },\r\n    NVlabel: {\r\n        lineHeight: '30px',\r\n        paddingRight: theme.spacing(2)\r\n    },\r\n    NVformWrapper: {\r\n        paddingTop: theme.spacing(2)\r\n    },\r\n    NVtable: {\r\n        width: '100%'\r\n    }\r\n}),)\r\n\r\n// table info\r\nfunction createData(code : number, cc : string, department : string, name : string, reference : string, narrative : string, transition : number, transda : string, grossvalue : number, vatco : number, rate : number, goodval : string, vatvalue : number) {\r\n    return {\r\n        code,\r\n        cc,\r\n        department,\r\n        name,\r\n        reference,\r\n        narrative,\r\n        transition,\r\n        transda,\r\n        grossvalue,\r\n        vatco,\r\n        rate,\r\n        goodval,\r\n        vatvalue\r\n    };\r\n}\r\n\r\nconst rows = [createData(1011, 'dummy', 'dummy', 'dummy', 'dummy', 'dummy', 1234, 'dummy', 123, 123, 123, 'dummy', 123)];\r\nconst PrepaymentJournalEntry : React.FC < {} > = () => {\r\n    const [selectedDate,\r\n        setSelectedDate] = React.useState < Date | null > (new Date(),);\r\n\r\n    const handleDateChange = (date : Date | null) => {\r\n        setSelectedDate(date);\r\n    };\r\n    const classes = useStyles();\r\n    const [bankaccount,\r\n        setBankaccount] = React.useState('');\r\n    const handleChange = (event : React.ChangeEvent < {\r\n        value: unknown\r\n    } >) => {\r\n        setBankaccount(event.target.value as string);\r\n    };\r\n    return (\r\n        <div className={classes.NominalVatableReceipt}>\r\n            <Grid container spacing={3}>\r\n                <Grid item lg={12}>\r\n                    <Typography className={classes.NVtitle}>Posting Accounts</Typography>\r\n                    <div className={classes.NVformWrapper}>\r\n                        <form>\r\n                            <div className={classes.NVFieldWrapper}>\r\n                                <label className={classes.NVlabel}>Balance Sheet</label>\r\n                                <NativeSelect\r\n                                    id=\"demo-customized-select-native\"\r\n                                    value={bankaccount}\r\n                                    onChange={handleChange}\r\n                                    input={< BootstrapInput />}>\r\n                                    <option aria-label=\"None\" value=\"\"/>\r\n                                    <option value={10}>Ten</option>\r\n                                    <option value={20}>Twenty</option>\r\n                                    <option value={30}>Thirty</option>\r\n                                </NativeSelect>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                            </div>\r\n                            <div className={classes.NVFieldWrapper}>\r\n                                <label className={classes.NVlabel}>Profit And Loss</label>\r\n                                <NativeSelect\r\n                                    id=\"demo-customized-select-native\"\r\n                                    value={bankaccount}\r\n                                    onChange={handleChange}\r\n                                    input={< BootstrapInput />}>\r\n                                    <option aria-label=\"None\" value=\"\"/>\r\n                                    <option value={10}>Ten</option>\r\n                                    <option value={20}>Twenty</option>\r\n                                    <option value={30}>Thirty</option>\r\n                                </NativeSelect>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                            </div>\r\n                            <div className={classes.NVFieldWrapper}>\r\n                                <label className={classes.NVlabel}>Transaction Analysis</label>\r\n                                <NativeSelect\r\n                                    id=\"demo-customized-select-native\"\r\n                                    value={bankaccount}\r\n                                    onChange={handleChange}\r\n                                    input={< BootstrapInput />}>\r\n                                    <option aria-label=\"None\" value=\"\"/>\r\n                                    <option value={10}>Ten</option>\r\n                                    <option value={20}>Twenty</option>\r\n                                    <option value={30}>Thirty</option>\r\n                                </NativeSelect>\r\n                                </div>\r\n                        </form>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item lg={12}>\r\n                    <Typography className={classes.NVtitle}>Transaction Details</Typography>\r\n                    <div className={classes.NVformWrapper}>\r\n                        <form>\r\n                            <div className={classes.NVFieldWrapper}>\r\n                                <label className={classes.NVlabel}>Total Value :</label>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                                <label className={classes.NVlabel}>Reference :</label>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                            </div>\r\n                            <div className={classes.NVFieldWrapper}>\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                    <label\r\n                                        style={{\r\n                                        lineHeight: '55px'\r\n                                    }}>Payment Date :</label>\r\n                                    <KeyboardDatePicker\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-dialog\"\r\n                                        format=\"MM/dd/yyyy\"\r\n                                        value={selectedDate}\r\n                                        onChange={handleDateChange}\r\n                                        KeyboardButtonProps={{\r\n                                        'aria-label': 'change date'\r\n                                    }}/></MuiPickersUtilsProvider>\r\n                                &nbsp;&nbsp;\r\n                                <label className={classes.NVlabel}>Narrative :</label>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item lg={12}>\r\n                    <Typography className={classes.NVtitle}>Nominal Transactions</Typography>\r\n                    <TableContainer component={Paper}>\r\n                        <Table className={classes.NVtable} aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Code</TableCell>\r\n                                    <TableCell align=\"right\">Date</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {rows.map((row) => (\r\n                                    <TableRow key={row.name}>\r\n                                        <TableCell align=\"right\">{row.code}</TableCell>\r\n                                        <TableCell align=\"right\">12-02-2021</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PrepaymentJournalEntry\r\n\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\FixedAssets\\fixed-asset-list\\index.tsx",["1110","1111","1112","1113","1114","1115","1116","1117","1118","1119","1120"],"import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  createStyles,\r\n  makeStyles,\r\n  Theme,\r\n  withStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\n\r\nconst BootstrapInput = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    input: {\r\n      borderRadius: 4,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"7px 26px 7px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"-apple-system\",\r\n        \"BlinkMacSystemFont\",\r\n        '\"Segoe UI\"',\r\n        \"Roboto\",\r\n        '\"Helvetica Neue\"',\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n        '\"Apple Color Emoji\"',\r\n        '\"Segoe UI Emoji\"',\r\n        '\"Segoe UI Symbol\"',\r\n      ].join(\",\"),\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#80bdff\",\r\n        boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n      },\r\n    },\r\n  })\r\n)(InputBase);\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    NominalVatableReceipt: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    NVtitle: {\r\n      fontSize: \"20px\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    NVFieldWrapper: {\r\n      padding: \"10px 0\",\r\n    },\r\n    NVlabel: {\r\n      lineHeight: \"30px\",\r\n      paddingRight: theme.spacing(2),\r\n    },\r\n    NVformWrapper: {\r\n      paddingTop: theme.spacing(2),\r\n    },\r\n    NVtable: {\r\n      width: \"100%\",\r\n    },\r\n  })\r\n);\r\n\r\n// table info\r\nfunction createData(\r\n  code: number,\r\n  cc: string,\r\n  department: string,\r\n  name: string,\r\n  reference: string,\r\n  narrative: string,\r\n  transition: number,\r\n  transda: string,\r\n  grossvalue: number,\r\n  vatco: number,\r\n  rate: number,\r\n  goodval: string,\r\n  vatvalue: number\r\n) {\r\n  return {\r\n    code,\r\n    cc,\r\n    department,\r\n    name,\r\n    reference,\r\n    narrative,\r\n    transition,\r\n    transda,\r\n    grossvalue,\r\n    vatco,\r\n    rate,\r\n    goodval,\r\n    vatvalue,\r\n  };\r\n}\r\n\r\nconst rows = [\r\n  createData(\r\n    1011,\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    1234,\r\n    \"dummy\",\r\n    123,\r\n    123,\r\n    123,\r\n    \"dummy\",\r\n    123\r\n  ),\r\n];\r\nconst FixedAssetList: React.FC<{}> = () => {\r\n  const [selectedDate, setSelectedDate] = React.useState<Date | null>(\r\n    new Date()\r\n  );\r\n\r\n  const handleDateChange = (date: Date | null) => {\r\n    setSelectedDate(date);\r\n  };\r\n  const classes = useStyles();\r\n  const [bankaccount, setBankaccount] = React.useState(\"\");\r\n  const handleChange = (\r\n    event: React.ChangeEvent<{\r\n      value: unknown;\r\n    }>\r\n  ) => {\r\n    setBankaccount(event.target.value as string);\r\n  };\r\n  return (\r\n    <div className={classes.NominalVatableReceipt}>\r\n      <Grid container spacing={3}>\r\n        <Grid item lg={12}>\r\n          <Typography className={classes.NVtitle}>Fix Asset List</Typography>\r\n          <TableContainer component={Paper}>\r\n            <Table className={classes.NVtable} aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Code</TableCell>\r\n                  <TableCell align=\"right\">Code</TableCell>\r\n                  <TableCell align=\"right\">Description</TableCell>\r\n                  <TableCell align=\"right\">Net Book Value</TableCell>\r\n                  <TableCell align=\"right\">Last Depriciated</TableCell>\r\n                  <TableCell align=\"right\">Total Depriciation Posted</TableCell>\r\n                  <TableCell align=\"right\">Disposal Posted</TableCell>\r\n                  <TableCell align=\"right\">Disposal Date</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {rows.map((row) => (\r\n                  <TableRow key={row.name}>\r\n                    <TableCell align=\"right\">{row.code}</TableCell>\r\n                    <TableCell align=\"right\">{row.cc}</TableCell>\r\n                    <TableCell align=\"right\">{row.department}</TableCell>\r\n                    <TableCell align=\"right\">{row.name}</TableCell>\r\n                    <TableCell align=\"right\">{row.reference}</TableCell>\r\n                    <TableCell align=\"right\">{row.narrative}</TableCell>\r\n                    <TableCell align=\"right\">{row.transition}</TableCell>\r\n                    <TableCell align=\"right\">{row.transda}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FixedAssetList;\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\FixedAssets\\dispose-asset\\index.tsx",["1121","1122","1123","1124","1125","1126","1127","1128","1129","1130","1131"],"import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  createStyles,\r\n  makeStyles,\r\n  Theme,\r\n  withStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport \"date-fns\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\n\r\nconst BootstrapInput = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    input: {\r\n      borderRadius: 4,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"7px 26px 7px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"-apple-system\",\r\n        \"BlinkMacSystemFont\",\r\n        '\"Segoe UI\"',\r\n        \"Roboto\",\r\n        '\"Helvetica Neue\"',\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n        '\"Apple Color Emoji\"',\r\n        '\"Segoe UI Emoji\"',\r\n        '\"Segoe UI Symbol\"',\r\n      ].join(\",\"),\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#80bdff\",\r\n        boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n      },\r\n    },\r\n  })\r\n)(InputBase);\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    NominalVatableReceipt: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    NVtitle: {\r\n      fontSize: \"20px\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    NVFieldWrapper: {\r\n      padding: \"10px 0\",\r\n    },\r\n    NVlabel: {\r\n      lineHeight: \"30px\",\r\n      paddingRight: theme.spacing(2),\r\n    },\r\n    NVformWrapper: {\r\n      paddingTop: theme.spacing(2),\r\n    },\r\n    NVtable: {\r\n      width: \"100%\",\r\n    },\r\n  })\r\n);\r\n\r\n// table info\r\nfunction createData(\r\n  code: number,\r\n  cc: string,\r\n  department: string,\r\n  name: string,\r\n  reference: string,\r\n  narrative: string,\r\n  transition: number,\r\n  transda: string,\r\n  grossvalue: number,\r\n  vatco: number,\r\n  rate: number,\r\n  goodval: string,\r\n  vatvalue: number\r\n) {\r\n  return {\r\n    code,\r\n    cc,\r\n    department,\r\n    name,\r\n    reference,\r\n    narrative,\r\n    transition,\r\n    transda,\r\n    grossvalue,\r\n    vatco,\r\n    rate,\r\n    goodval,\r\n    vatvalue,\r\n  };\r\n}\r\n\r\nconst rows = [\r\n  createData(\r\n    1011,\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    1234,\r\n    \"dummy\",\r\n    123,\r\n    123,\r\n    123,\r\n    \"dummy\",\r\n    123\r\n  ),\r\n];\r\nconst DisposeAsset: React.FC<{}> = () => {\r\n  const [selectedDate, setSelectedDate] = React.useState<Date | null>(\r\n    new Date()\r\n  );\r\n\r\n  const handleDateChange = (date: Date | null) => {\r\n    setSelectedDate(date);\r\n  };\r\n  const classes = useStyles();\r\n  const [bankaccount, setBankaccount] = React.useState(\"\");\r\n  const handleChange = (\r\n    event: React.ChangeEvent<{\r\n      value: unknown;\r\n    }>\r\n  ) => {\r\n    setBankaccount(event.target.value as string);\r\n  };\r\n\r\n  const [checked, setChecked] = React.useState(true);\r\n\r\n  const checkboxChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setChecked(event.target.checked);\r\n  };\r\n  return (\r\n    <div className={classes.NominalVatableReceipt}>\r\n      <Grid container spacing={3}>\r\n        <Grid item lg={12}>\r\n          <Typography className={classes.NVtitle}>\r\n            Available Asset List\r\n          </Typography>\r\n          <TableContainer component={Paper}>\r\n            <Table className={classes.NVtable} aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"right\">Code</TableCell>\r\n                  <TableCell align=\"right\">Description</TableCell>\r\n                  <TableCell align=\"right\">Last Depriciated</TableCell>\r\n                  <TableCell align=\"right\">Residual Value</TableCell>\r\n                  <TableCell align=\"right\">Net Book Value</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {rows.map((row) => (\r\n                  <TableRow key={row.name}>\r\n                    <TableCell align=\"right\">\r\n                      <Checkbox\r\n                        checked={checked}\r\n                        onChange={checkboxChange}\r\n                        inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                      />\r\n                      {row.code}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">{row.cc}</TableCell>\r\n                    <TableCell align=\"right\">{row.department}</TableCell>\r\n                    <TableCell align=\"right\">{row.name}</TableCell>\r\n                    <TableCell align=\"right\">{row.reference}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisposeAsset;\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\enter-transactions\\purchase-payment\\index.tsx",["1132","1133","1134","1135","1136","1137","1138"],"import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  createStyles,\r\n  makeStyles,\r\n  Theme,\r\n  withStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\n\r\nconst BootstrapInput = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    input: {\r\n      borderRadius: 4,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"7px 26px 7px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"-apple-system\",\r\n        \"BlinkMacSystemFont\",\r\n        '\"Segoe UI\"',\r\n        \"Roboto\",\r\n        '\"Helvetica Neue\"',\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n        '\"Apple Color Emoji\"',\r\n        '\"Segoe UI Emoji\"',\r\n        '\"Segoe UI Symbol\"',\r\n      ].join(\",\"),\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#80bdff\",\r\n        boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n      },\r\n    },\r\n  })\r\n)(InputBase);\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    NominalVatableReceipt: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    NVtitle: {\r\n      fontSize: \"20px\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    NVFieldWrapper: {\r\n      padding: \"10px 0\",\r\n    },\r\n    NVlabel: {\r\n      lineHeight: \"30px\",\r\n      paddingRight: theme.spacing(2),\r\n    },\r\n    NVformWrapper: {\r\n      paddingTop: theme.spacing(2),\r\n    },\r\n    NVtable: {\r\n      width: \"100%\",\r\n    },\r\n    buttonWrapper: {\r\n      margin: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\n// table info\r\nfunction createData(\r\n  code: number,\r\n  cc: string,\r\n  department: string,\r\n  name: string,\r\n  reference: string,\r\n  narrative: string,\r\n  transition: number,\r\n  transda: string,\r\n  grossvalue: number,\r\n  vatco: number,\r\n  rate: number,\r\n  goodval: string,\r\n  vatvalue: number\r\n) {\r\n  return {\r\n    code,\r\n    cc,\r\n    department,\r\n    name,\r\n    reference,\r\n    narrative,\r\n    transition,\r\n    transda,\r\n    grossvalue,\r\n    vatco,\r\n    rate,\r\n    goodval,\r\n    vatvalue,\r\n  };\r\n}\r\n\r\nconst rows = [\r\n  createData(\r\n    1011,\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    1234,\r\n    \"dummy\",\r\n    123,\r\n    123,\r\n    123,\r\n    \"dummy\",\r\n    123\r\n  ),\r\n];\r\nconst PurchasePayment: React.FC<{}> = () => {\r\n  const [selectedDate, setSelectedDate] = React.useState<Date | null>(\r\n    new Date()\r\n  );\r\n\r\n  const handleDateChange = (date: Date | null) => {\r\n    setSelectedDate(date);\r\n  };\r\n  const classes = useStyles();\r\n  const [bankaccount, setBankaccount] = React.useState(\"\");\r\n  const handleChange = (\r\n    event: React.ChangeEvent<{\r\n      value: unknown;\r\n    }>\r\n  ) => {\r\n    setBankaccount(event.target.value as string);\r\n  };\r\n  return (\r\n    <div className={classes.NominalVatableReceipt}>\r\n      <Grid container spacing={3}>\r\n\r\n        <Grid item lg={12}>\r\n          <Typography className={classes.NVtitle}>\r\n            Bank Account Details\r\n          </Typography>\r\n          <div className={classes.NVformWrapper}>\r\n            <form>\r\n\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Bank account</label>\r\n                <NativeSelect\r\n                  id=\"demo-customized-select-native\"\r\n                  value={bankaccount}\r\n                  onChange={handleChange}\r\n                  input={<BootstrapInput />}\r\n                >\r\n                  <option aria-label=\"None\" value=\"\" />\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </NativeSelect>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item lg={12}>\r\n          <Typography className={classes.NVtitle}>Customer Details</Typography>\r\n          <div className={classes.NVformWrapper}>\r\n            <form>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Code :</label>\r\n                <NativeSelect\r\n                  id=\"demo-customized-select-native\"\r\n                  value={bankaccount}\r\n                  onChange={handleChange}\r\n                  input={<BootstrapInput />}\r\n                >\r\n                  <option aria-label=\"None\" value=\"\" />\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </NativeSelect>\r\n                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                <label className={classes.NVlabel}>Credit Limit :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                <label className={classes.NVlabel}>Date :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Short name :</label>\r\n                <NativeSelect\r\n                  id=\"demo-customized-select-native\"\r\n                  value={bankaccount}\r\n                  onChange={handleChange}\r\n                  input={<BootstrapInput />}\r\n                >\r\n                  <option aria-label=\"None\" value=\"\" />\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </NativeSelect>\r\n                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                <label className={classes.NVlabel}>Balencr :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                <label className={classes.NVlabel}>Reference :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n              \r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Post Code :</label>\r\n                <NativeSelect\r\n                  id=\"demo-customized-select-native\"\r\n                  value={bankaccount}\r\n                  onChange={handleChange}\r\n                  input={<BootstrapInput />}\r\n                >\r\n                  <option aria-label=\"None\" value=\"\" />\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </NativeSelect>\r\n                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                <label className={classes.NVlabel}>Second Reference :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item lg={12}>\r\n          <Typography className={classes.NVtitle}>Receipt Details</Typography>\r\n          <div className={classes.NVformWrapper}>\r\n            <form>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Check curency :</label>\r\n                <NativeSelect\r\n                  id=\"demo-customized-select-native\"\r\n                  value={bankaccount}\r\n                  onChange={handleChange}\r\n                  input={<BootstrapInput />}\r\n                >\r\n                  <option aria-label=\"None\" value=\"\" />\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </NativeSelect>\r\n                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                <label className={classes.NVlabel}>Chaque Value :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Sattelment Amount :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n             </form>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Button variant=\"contained\" className={classes.buttonWrapper}>\r\n          Clear\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.buttonWrapper}\r\n        >\r\n          Save\r\n        </Button>\r\n        <Button variant=\"contained\" className={classes.buttonWrapper}>\r\n          Save & Allocate\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.buttonWrapper}\r\n        >\r\n          Close\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PurchasePayment;\r\n\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-reports\\direct-debit-and-standing-order\\index.tsx",["1139","1140","1141","1142","1143","1144","1145"],"import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  createStyles,\r\n  makeStyles,\r\n  Theme,\r\n  withStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"date-fns\";\r\nimport { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\r\n\r\nconst BootstrapInput = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    input: {\r\n      borderRadius: 4,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"7px 26px 7px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"-apple-system\",\r\n        \"BlinkMacSystemFont\",\r\n        '\"Segoe UI\"',\r\n        \"Roboto\",\r\n        '\"Helvetica Neue\"',\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n        '\"Apple Color Emoji\"',\r\n        '\"Segoe UI Emoji\"',\r\n        '\"Segoe UI Symbol\"',\r\n      ].join(\",\"),\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#80bdff\",\r\n        boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n      },\r\n    },\r\n  })\r\n)(InputBase);\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    NominalVatableReceipt: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    NVtitle: {\r\n      fontSize: \"20px\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    NVFieldWrapper: {\r\n      padding: \"10px 0\",\r\n    },\r\n    NVlabel: {\r\n      lineHeight: \"30px\",\r\n      paddingRight: theme.spacing(2),\r\n    },\r\n    NVformWrapper: {\r\n      paddingTop: theme.spacing(2),\r\n    },\r\n    NVtable: {\r\n      width: \"100%\",\r\n    },\r\n    buttonWrapper: {\r\n      margin: theme.spacing(3),\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 400,\r\n    },\r\n  })\r\n);\r\n\r\n// table info\r\nfunction createData(\r\n  code: number,\r\n  cc: string,\r\n  department: string,\r\n  name: string,\r\n  reference: string,\r\n  narrative: string,\r\n  transition: number,\r\n  transda: string,\r\n  grossvalue: number,\r\n  vatco: number,\r\n  rate: number,\r\n  goodval: string,\r\n  vatvalue: number\r\n) {\r\n  return {\r\n    code,\r\n    cc,\r\n    department,\r\n    name,\r\n    reference,\r\n    narrative,\r\n    transition,\r\n    transda,\r\n    grossvalue,\r\n    vatco,\r\n    rate,\r\n    goodval,\r\n    vatvalue,\r\n  };\r\n}\r\n\r\nconst rows = [\r\n  createData(\r\n    1011,\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    1234,\r\n    \"dummy\",\r\n    123,\r\n    123,\r\n    123,\r\n    \"dummy\",\r\n    123\r\n  ),\r\n];\r\nconst DirectDebitAndStandingOrder: React.FC<{}> = () => {\r\n  const [selectedDate, setSelectedDate] = React.useState<Date | null>(\r\n    new Date()\r\n  );\r\n\r\n  const handleDateChange = (date: Date | null) => {\r\n    setSelectedDate(date);\r\n  };\r\n  const classes = useStyles();\r\n  const [bankaccount, setBankaccount] = React.useState(\"\");\r\n  const handleChange = (\r\n    event: React.ChangeEvent<{\r\n      value: unknown;\r\n    }>\r\n  ) => {\r\n    setBankaccount(event.target.value as string);\r\n  };\r\n  return (\r\n    <div className={classes.NominalVatableReceipt}>\r\n      <Grid container spacing={3}>\r\n        <Grid item lg={12}>\r\n          <Typography className={classes.NVtitle}>Critarial values</Typography>\r\n          <div className={classes.NVformWrapper}>\r\n            <form>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>A/C ref</label>\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    onChange={handleChange}\r\n                    label=\"Age\"\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={10}>Ten</MenuItem>\r\n                    <MenuItem value={20}>Twenty</MenuItem>\r\n                    <MenuItem value={30}>Thirty</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item lg={12}>\r\n          <div className={classes.NVformWrapper}>\r\n            <form>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Preview a simple report for a specified no of record or transection (0 for all) :</label>\r\n                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  type=\"number\"\r\n                />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Button variant=\"contained\" className={classes.buttonWrapper}>\r\n          Help\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.buttonWrapper}\r\n        >\r\n          Save\r\n        </Button>\r\n        <Button variant=\"contained\" className={classes.buttonWrapper}>\r\n          Load\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.buttonWrapper}\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DirectDebitAndStandingOrder;\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-reports\\unpresented-cheques-payment\\index.tsx",["1146","1147","1148","1149","1150","1151","1152"],"import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  createStyles,\r\n  makeStyles,\r\n  Theme,\r\n  withStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"date-fns\";\r\nimport { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\r\n\r\nconst BootstrapInput = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    input: {\r\n      borderRadius: 4,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"7px 26px 7px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"-apple-system\",\r\n        \"BlinkMacSystemFont\",\r\n        '\"Segoe UI\"',\r\n        \"Roboto\",\r\n        '\"Helvetica Neue\"',\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n        '\"Apple Color Emoji\"',\r\n        '\"Segoe UI Emoji\"',\r\n        '\"Segoe UI Symbol\"',\r\n      ].join(\",\"),\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#80bdff\",\r\n        boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n      },\r\n    },\r\n  })\r\n)(InputBase);\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    NominalVatableReceipt: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    NVtitle: {\r\n      fontSize: \"20px\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    NVFieldWrapper: {\r\n      padding: \"10px 0\",\r\n    },\r\n    NVlabel: {\r\n      lineHeight: \"30px\",\r\n      paddingRight: theme.spacing(2),\r\n    },\r\n    NVformWrapper: {\r\n      paddingTop: theme.spacing(2),\r\n    },\r\n    NVtable: {\r\n      width: \"100%\",\r\n    },\r\n    buttonWrapper: {\r\n      margin: theme.spacing(3),\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 400,\r\n    },\r\n  })\r\n);\r\n\r\n// table info\r\nfunction createData(\r\n  code: number,\r\n  cc: string,\r\n  department: string,\r\n  name: string,\r\n  reference: string,\r\n  narrative: string,\r\n  transition: number,\r\n  transda: string,\r\n  grossvalue: number,\r\n  vatco: number,\r\n  rate: number,\r\n  goodval: string,\r\n  vatvalue: number\r\n) {\r\n  return {\r\n    code,\r\n    cc,\r\n    department,\r\n    name,\r\n    reference,\r\n    narrative,\r\n    transition,\r\n    transda,\r\n    grossvalue,\r\n    vatco,\r\n    rate,\r\n    goodval,\r\n    vatvalue,\r\n  };\r\n}\r\n\r\nconst rows = [\r\n  createData(\r\n    1011,\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    1234,\r\n    \"dummy\",\r\n    123,\r\n    123,\r\n    123,\r\n    \"dummy\",\r\n    123\r\n  ),\r\n];\r\nconst UnspreadCheque: React.FC<{}> = () => {\r\n  const [selectedDate, setSelectedDate] = React.useState<Date | null>(\r\n    new Date()\r\n  );\r\n\r\n  const handleDateChange = (date: Date | null) => {\r\n    setSelectedDate(date);\r\n  };\r\n  const classes = useStyles();\r\n  const [bankaccount, setBankaccount] = React.useState(\"\");\r\n  const handleChange = (\r\n    event: React.ChangeEvent<{\r\n      value: unknown;\r\n    }>\r\n  ) => {\r\n    setBankaccount(event.target.value as string);\r\n  };\r\n  return (\r\n    <div className={classes.NominalVatableReceipt}>\r\n      <Grid container spacing={3}>\r\n        <Grid item lg={12}>\r\n          <Typography className={classes.NVtitle}>Critarial values</Typography>\r\n          <div className={classes.NVformWrapper}>\r\n            <form>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>A/C ref</label>\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    onChange={handleChange}\r\n                    label=\"Age\"\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={10}>Ten</MenuItem>\r\n                    <MenuItem value={20}>Twenty</MenuItem>\r\n                    <MenuItem value={30}>Thirty</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Curency</label>\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    onChange={handleChange}\r\n                    label=\"Age\"\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={10}>Ten</MenuItem>\r\n                    <MenuItem value={20}>Twenty</MenuItem>\r\n                    <MenuItem value={30}>Thirty</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>A/C description</label>\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    onChange={handleChange}\r\n                    label=\"Age\"\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={10}>Ten</MenuItem>\r\n                    <MenuItem value={20}>Twenty</MenuItem>\r\n                    <MenuItem value={30}>Thirty</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Transection Date</label>\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    onChange={handleChange}\r\n                    label=\"Age\"\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={10}>Ten</MenuItem>\r\n                    <MenuItem value={20}>Twenty</MenuItem>\r\n                    <MenuItem value={30}>Thirty</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item lg={12}>\r\n          <div className={classes.NVformWrapper}>\r\n            <form>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Preview a simple report for a specified no of record or transection (0 for all) :</label>\r\n                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  type=\"number\"\r\n                />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Button variant=\"contained\" className={classes.buttonWrapper}>\r\n          Help\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.buttonWrapper}\r\n        >\r\n          Save\r\n        </Button>\r\n        <Button variant=\"contained\" className={classes.buttonWrapper}>\r\n          Load\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.buttonWrapper}\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UnspreadCheque;\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-reports\\transection-listing-by-period\\index.tsx",["1153","1154","1155","1156","1157","1158","1159"],"import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  createStyles,\r\n  makeStyles,\r\n  Theme,\r\n  withStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"date-fns\";\r\nimport { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\r\n\r\nconst BootstrapInput = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    input: {\r\n      borderRadius: 4,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"7px 26px 7px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"-apple-system\",\r\n        \"BlinkMacSystemFont\",\r\n        '\"Segoe UI\"',\r\n        \"Roboto\",\r\n        '\"Helvetica Neue\"',\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n        '\"Apple Color Emoji\"',\r\n        '\"Segoe UI Emoji\"',\r\n        '\"Segoe UI Symbol\"',\r\n      ].join(\",\"),\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#80bdff\",\r\n        boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n      },\r\n    },\r\n  })\r\n)(InputBase);\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    NominalVatableReceipt: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    NVtitle: {\r\n      fontSize: \"20px\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    NVFieldWrapper: {\r\n      padding: \"10px 0\",\r\n    },\r\n    NVlabel: {\r\n      lineHeight: \"30px\",\r\n      paddingRight: theme.spacing(2),\r\n    },\r\n    NVformWrapper: {\r\n      paddingTop: theme.spacing(2),\r\n    },\r\n    NVtable: {\r\n      width: \"100%\",\r\n    },\r\n    buttonWrapper: {\r\n      margin: theme.spacing(3),\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 400,\r\n    },\r\n  })\r\n);\r\n\r\n// table info\r\nfunction createData(\r\n  code: number,\r\n  cc: string,\r\n  department: string,\r\n  name: string,\r\n  reference: string,\r\n  narrative: string,\r\n  transition: number,\r\n  transda: string,\r\n  grossvalue: number,\r\n  vatco: number,\r\n  rate: number,\r\n  goodval: string,\r\n  vatvalue: number\r\n) {\r\n  return {\r\n    code,\r\n    cc,\r\n    department,\r\n    name,\r\n    reference,\r\n    narrative,\r\n    transition,\r\n    transda,\r\n    grossvalue,\r\n    vatco,\r\n    rate,\r\n    goodval,\r\n    vatvalue,\r\n  };\r\n}\r\n\r\nconst rows = [\r\n  createData(\r\n    1011,\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    1234,\r\n    \"dummy\",\r\n    123,\r\n    123,\r\n    123,\r\n    \"dummy\",\r\n    123\r\n  ),\r\n];\r\nconst TransectionListingbyPeriod: React.FC<{}> = () => {\r\n  const [selectedDate, setSelectedDate] = React.useState<Date | null>(\r\n    new Date()\r\n  );\r\n\r\n  const handleDateChange = (date: Date | null) => {\r\n    setSelectedDate(date);\r\n  };\r\n  const classes = useStyles();\r\n  const [bankaccount, setBankaccount] = React.useState(\"\");\r\n  const handleChange = (\r\n    event: React.ChangeEvent<{\r\n      value: unknown;\r\n    }>\r\n  ) => {\r\n    setBankaccount(event.target.value as string);\r\n  };\r\n  return (\r\n    <div className={classes.NominalVatableReceipt}>\r\n      <Grid container spacing={3}>\r\n        <Grid item lg={12}>\r\n          <Typography className={classes.NVtitle}>Critarial values</Typography>\r\n          <div className={classes.NVformWrapper}>\r\n            <form>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>A/C ref</label>\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    onChange={handleChange}\r\n                    label=\"Age\"\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={10}>Ten</MenuItem>\r\n                    <MenuItem value={20}>Twenty</MenuItem>\r\n                    <MenuItem value={30}>Thirty</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Transection Date</label>\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    onChange={handleChange}\r\n                    label=\"Age\"\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={10}>Ten</MenuItem>\r\n                    <MenuItem value={20}>Twenty</MenuItem>\r\n                    <MenuItem value={30}>Thirty</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>A/C description</label>\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    onChange={handleChange}\r\n                    label=\"Age\"\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={10}>Ten</MenuItem>\r\n                    <MenuItem value={20}>Twenty</MenuItem>\r\n                    <MenuItem value={30}>Thirty</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Transection Type</label>\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    onChange={handleChange}\r\n                    label=\"Age\"\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={10}>Ten</MenuItem>\r\n                    <MenuItem value={20}>Twenty</MenuItem>\r\n                    <MenuItem value={30}>Thirty</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n          \r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Statement page number</label>\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    onChange={handleChange}\r\n                    label=\"Age\"\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={10}>Ten</MenuItem>\r\n                    <MenuItem value={20}>Twenty</MenuItem>\r\n                    <MenuItem value={30}>Thirty</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Accounting Period</label>\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    onChange={handleChange}\r\n                    label=\"Age\"\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={10}>Ten</MenuItem>\r\n                    <MenuItem value={20}>Twenty</MenuItem>\r\n                    <MenuItem value={30}>Thirty</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n          \r\n            </form>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item lg={12}>\r\n          <div className={classes.NVformWrapper}>\r\n            <form>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Preview a simple report for a specified no of record or transection (0 for all) :</label>\r\n                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  type=\"number\"\r\n                />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Button variant=\"contained\" className={classes.buttonWrapper}>\r\n          Help\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.buttonWrapper}\r\n        >\r\n          Save\r\n        </Button>\r\n        <Button variant=\"contained\" className={classes.buttonWrapper}>\r\n          Load\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.buttonWrapper}\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransectionListingbyPeriod;\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\bank-txn-enquiry\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\bank-account-enquiry\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\bank-account-enquiry\\Memos.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\transaction-enquiries\\NominalTable.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\short-term-cash-projection\\Transactiontable.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\bank-txn-enquiry\\transaction-table.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\bank-account-enquiry\\AttachmentBalanceTable.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\create-amend-accounts\\customer-delivery-addresses\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\account-analysis\\ec-sales-list\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\create-amend-accounts\\create-customer\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\create-amend-accounts\\create-customer\\panels\\pricing.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\create-amend-accounts\\create-customer\\panels\\trading.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\create-amend-accounts\\create-customer\\panels\\contacts.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\cash-position\\why-do-we-owe-most-tabe.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\cash-position\\who-owes-us-most-money-option.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\cash-position\\bank-link-table.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\create-amend-accounts\\create-bank-account\\Contact.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\customer-list\\customer-list-table.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-enquiries\\nominal-account-enquiry\\nominal-deferred-table2.tsx",["1160"],"import React from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button'\r\ninterface Data {\r\n periodnumber:string;\r\n budgetnextyear:number;\r\n budgetthisyear:number;\r\n balancethisyear:number;\r\n budgetlastyear:number;\r\n balancelastyear:number;\r\n budget2year:number;\r\n budget3year:number;\r\n budget4year:number;\r\n \r\n}\r\n\r\nfunction createData(\r\n    periodnumber:string,\r\n    budgetnextyear:number,\r\n    budgetthisyear:number,\r\n    balancethisyear:number,\r\n    budgetlastyear:number,\r\n    balancelastyear:number,\r\n    budget2year:number,\r\n    budget3year:number,\r\n    budget4year:number,\r\n    \r\n): Data {\r\n  return {periodnumber,budgetnextyear,budgetthisyear,balancethisyear,budgetlastyear,balancelastyear,budget2year,budget3year,budget4year};\r\n}\r\n\r\nconst rows = [\r\n  createData('1',233.33,208.33,0.00,0.00,0.00,0.00,0.00,0.00),\r\n  createData('1',233.33,208.33,0.00,0.00,0.00,0.00,0.00,0.00),\r\n  createData('1',233.33,208.33,0.00,0.00,0.00,0.00,0.00,0.00),\r\n  createData('1',233.33,208.33,0.00,0.00,0.00,0.00,0.00,0.00),\r\n  createData('1',233.33,208.33,0.00,0.00,0.00,0.00,0.00,0.00),\r\n  createData('1',233.33,208.33,0.00,0.00,0.00,0.00,0.00,0.00),\r\n  createData('1',233.33,208.33,0.00,0.00,0.00,0.00,0.00,0.00),\r\n  createData('1',233.33,208.33,0.00,0.00,0.00,0.00,0.00,0.00),\r\n];\r\n\r\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\ntype Order = 'asc' | 'desc';\r\n\r\nfunction getComparator<Key extends keyof any>(\r\n  order: Order,\r\n  orderBy: Key,\r\n): (a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\r\n  const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\ninterface HeadCell {\r\n  disablePadding: boolean;\r\n  id: keyof Data;\r\n  label: string;\r\n  numeric: boolean;\r\n}\r\n\r\n   \r\nconst headCells: HeadCell[] = [\r\n  { id: 'periodnumber', numeric: false, disablePadding: true, label: 'Period Number' },\r\n  { id: 'budgetnextyear', numeric: true, disablePadding: false, label: 'Budget Next Year' },\r\n  { id: 'budgetthisyear', numeric: true, disablePadding: false, label: 'Budget This Year' },\r\n  { id: 'balancethisyear', numeric: true, disablePadding: false, label: 'Balance This Year' },\r\n  { id: 'budgetlastyear', numeric: true, disablePadding: false, label: 'Budget Last Year' },\r\n  { id: 'balancelastyear', numeric: true, disablePadding: false, label: 'Balance Last Year' },\r\n  { id: 'budget2year', numeric: true, disablePadding: false, label: 'Budget 2 Year' },\r\n  { id: 'budget3year', numeric: true, disablePadding: false, label: 'BUdget 3 Year' },\r\n  { id: 'budget4year', numeric: true, disablePadding: false, label: 'Budget 4 year' },\r\n  \r\n];\r\n\r\ninterface EnhancedTableProps {\r\n  classes: ReturnType<typeof useStyles>;\r\n  numSelected: number;\r\n  onRequestSort: (event: React.MouseEvent<unknown>, property: keyof Data) => void;\r\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  order: Order;\r\n  orderBy: string;\r\n  rowCount: number;\r\n}\r\n\r\nfunction EnhancedTableHead(props: EnhancedTableProps) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property: keyof Data) => (event: React.MouseEvent<unknown>) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    paper: {\r\n      width: '100%',\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n      minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n      border: 0,\r\n      clip: 'rect(0 0 0 0)',\r\n      height: 1,\r\n      margin: -1,\r\n      overflow: 'hidden',\r\n      padding: 0,\r\n      position: 'absolute',\r\n      top: 20,\r\n      width: 1,\r\n    },\r\n    ButtonWrapper:\r\n    {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    }\r\n  }),\r\n);\r\n\r\nexport default function EnhancedTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState<Order>('asc');\r\n  const [orderBy, setOrderBy] = React.useState<keyof Data>('periodnumber');\r\n  const [selected, setSelected] = React.useState<string[]>([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event: React.MouseEvent<unknown>, property: keyof Data) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.periodnumber);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event: React.MouseEvent<unknown>, name: string) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected: string[] = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n\r\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.ButtonWrapper}>\r\n      <Button variant=\"contained\" color=\"primary\">Actions</Button>\r\n      <Button variant=\"contained\" color=\"primary\">\r\n        Reports\r\n      </Button>\r\n      <Button variant=\"contained\" color=\"primary\">\r\n        Export\r\n      </Button>\r\n      <Button variant=\"contained\" color=\"primary\">\r\n      Print\r\n      </Button>\r\n      <Button variant=\"contained\" color=\"primary\">\r\n        Refresh\r\n      </Button>\r\n    </div>\r\n      <Paper className={classes.paper}>\r\n    \r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.periodnumber);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.periodnumber)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.periodnumber}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.periodnumber}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.budgetnextyear}</TableCell>\r\n                      <TableCell align=\"right\">{row.budgetthisyear}</TableCell>\r\n                      <TableCell align=\"right\">{row.balancethisyear}</TableCell>\r\n                      <TableCell align=\"right\">{row.budgetlastyear}</TableCell>\r\n                      <TableCell align=\"right\">{row.balancelastyear}</TableCell>\r\n                      <TableCell align=\"right\">{row.budget2year}</TableCell>\r\n                      <TableCell align=\"right\">{row.budget3year}</TableCell>\r\n                      <TableCell align=\"right\">{row.budget4year}</TableCell>\r\n                     \r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      \r\n    </div>\r\n  );\r\n}\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-enquiries\\nominal-deferred-pending-postings\\nominal-deferred-table1.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\create-and-amend-accounts\\create-new-nominal-account\\Budget_future\\Budget_future.tsx",["1161","1162"],"import React from \"react\"\r\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography/Typography'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport {DataGrid, ColDef, ValueGetterParams} from '@material-ui/data-grid';\r\n\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst columns : ColDef[] = [\r\n    {\r\n        field: 'id',\r\n        headerName: 'Id',\r\n        width: 60\r\n    }, {\r\n        field: 'Created',\r\n        headerName: 'Created',\r\n        width: 130\r\n    }, {\r\n        field: 'Last_Updated',\r\n        headerName: 'Last Updated',\r\n        width: 130\r\n    }, {\r\n        field: 'User',\r\n        headerName: 'User',\r\n        width: 130\r\n    }, {\r\n        field: 'Text',\r\n        headerName: 'Text',\r\n        width: 250\r\n    }, {\r\n        field: 'Active',\r\n        headerName: 'Active',\r\n        width: 130\r\n    }\r\n];\r\n\r\nconst rows = [\r\n    {\r\n        id: 1,\r\n        Created: 1,\r\n        Last_Updated: 1,\r\n        User: 'Snow',\r\n        Text: 'Jon',\r\n        Active: true\r\n    }, {\r\n        id: 2,\r\n        Created: 2,\r\n        Last_Updated: 2,\r\n        User: 'Lannister',\r\n        Text: 'Cersei',\r\n        Active: false\r\n    }, {\r\n        id: 3,\r\n        Created: 3,\r\n        Last_Updated: 3,\r\n        User: 'Lannister',\r\n        Text: 'Jaime',\r\n        Active: false\r\n    }, {\r\n        id: 4,\r\n        Created: 4,\r\n        Last_Updated: 4,\r\n        User: 'Stark',\r\n        Text: 'Arya',\r\n        Active: true\r\n    }, {\r\n        id: 5,\r\n        Created: 5,\r\n        Last_Updated: 5,\r\n        User: 'Targaryen',\r\n        Text: 'Daenerys',\r\n        Active: null\r\n    }, {\r\n        id: 6,\r\n        Created: 6,\r\n        Last_Updated: 6,\r\n        User: 'Melisandre',\r\n        Text: null,\r\n        Active: true\r\n    }, {\r\n        id: 7,\r\n        Created: 7,\r\n        Last_Updated: 7,\r\n        User: 'Clifford',\r\n        Text: 'Ferrara',\r\n        Active: false\r\n    }, {\r\n        id: 8,\r\n        Created: 8,\r\n        Last_Updated: 8,\r\n        User: 'Frances',\r\n        Text: 'Rossini',\r\n        Active: true\r\n    }, {\r\n        id: 9,\r\n        Created: 9,\r\n        Last_Updated: 9,\r\n        User: 'Roxie',\r\n        Text: 'Harvey',\r\n        Active: true\r\n    }\r\n];\r\n\r\n\r\nconst coldef : ColDef[] = [\r\n    {\r\n        field: 'id',\r\n        headerName: 'ID',\r\n        width: 60\r\n    }, {\r\n        field: 'PN',\r\n        headerName: 'PN',\r\n        width: 130\r\n    }, {\r\n        field: 'budget_year',\r\n        headerName: 'Budget Year',\r\n        width: 130\r\n    }, \r\n];\r\n\r\nconst rowdef = [\r\n    {\r\n        id: 1,\r\n        PN: 10,\r\n        Budget_year: 2010,\r\n        \r\n    }, {\r\n        id: 2,\r\n        PN: 20,\r\n        Budget_year: 2011,\r\n        \r\n    },{\r\n        id: 3,\r\n        PN: 30,\r\n        Budget_year: 2012,\r\n        \r\n    }, {\r\n        id: 4,\r\n        PN: 40,\r\n        Budget_year: 2013,\r\n        \r\n    }, {\r\n        id: 5,\r\n        PN: 50,\r\n        Budget_year: 2014,\r\n        \r\n    }, \r\n    \r\n];\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme : Theme) => createStyles({\r\n    root: {\r\n        '& > *': {\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            margin: theme.spacing(2),\r\n            width: '100%'\r\n        }\r\n    },\r\n    accountsWrapper: {},\r\n    title: {\r\n        textAlign: 'left',\r\n        fontSize: '17px',\r\n        fontWeight: 'bold'\r\n    },\r\n    label: {\r\n        width: '15%',\r\n        fontSize: '15px',\r\n        paddingRight: theme.spacing(2),\r\n        paddingTop: theme.spacing(2)\r\n    },\r\n    inputFieldWrapper: {\r\n        margin: '10px 10px'\r\n    },\r\n    selectTab: {\r\n        borderBottom: 'none',\r\n        border: '.5px solid rgb(211,211,211,0.7)'\r\n    },\r\n    selectTabActive: {\r\n        borderBottom: 'none',\r\n        border: '.5px solid rgb(211,211,211,0.7)',\r\n        width: '100px'\r\n    },\r\n    buttonWrapper: {\r\n        margin: theme.spacing(3)\r\n    },\r\n    inputwraper: {\r\n        marginLeft: theme.spacing(2),\r\n    },table: {\r\n    minWidth: 650,\r\n  }\r\n}),);\r\n\r\nconst Budget_future : React.FC < {} > = () => {\r\n    const classes = useStyles();\r\n\r\n\r\n    function changeHandler(v : any) {\r\n        console.log(v);\r\n    }\r\n\r\n    const typechangeHandler = (v:any) =>\r\n    {\r\n        console.log(v);\r\n    }\r\n\r\n    return ( <> <div className={classes.accountsWrapper}>\r\n        <div className={classes.accountsWrapper}>\r\n                    <Typography className={classes.title}> Period Values :\r\n                    </Typography>\r\n\r\n                        <div className={classes.inputFieldWrapper}>\r\n\r\n                <label className={classes.label}>Budget Year :</label>\r\n                <Select\r\n                    id=\"code-dropdown\"\r\n                    className={classes.selectTab}\r\n                    onChange={(e) => {\r\n                    changeHandler(e.target.value)\r\n                }}>\r\n                    {/* <MenuItem value=\"\" >Select One</MenuItem> */}\r\n\r\n                    <MenuItem value={'0'}>Current Year +1</MenuItem>\r\n                    <MenuItem value={'1'}>Current Year +2</MenuItem>\r\n                    <MenuItem value={'2'}>Current Year +3</MenuItem>\r\n                    <MenuItem value={'3'}>Current Year +4</MenuItem>\r\n                    <MenuItem value={'3'}>Current Year +5</MenuItem>\r\n\r\n                </Select>\r\n            </div>\r\n\r\n            <div className={classes.inputFieldWrapper}>\r\n\r\n                <label className={classes.label}>Budget Type :</label>\r\n                <Select\r\n                    id=\"code-dropdown\"\r\n                    className={classes.selectTab}\r\n                    onChange={(e) => {\r\n                    typechangeHandler(e.target.value)\r\n                }}>\r\n                    {/* <MenuItem value=\"\" >Select One</MenuItem> */}\r\n\r\n                    <MenuItem value={'0'}>No Budget</MenuItem>\r\n                    <MenuItem value={'1'}>Monthly Budget</MenuItem>\r\n                    <MenuItem value={'2'}>Annual Budget</MenuItem>\r\n\r\n                </Select>\r\n            </div>\r\n\r\n            <div className={classes.inputFieldWrapper}>\r\n                    <label className={classes.label}>Annual Budget :</label>\r\n                    <TextField\r\n                        className={classes.inputwraper}\r\n                        id=\"code-consolidated\"\r\n                        variant=\"outlined\"/>\r\n                        <br/>\r\n                    <Button variant=\"contained\" color=\"primary\" className={classes.buttonWrapper}>\r\n                        Save\r\n                    </Button>\r\n                </div>\r\n            \r\n                    \r\n                </div>\r\n                <Typography className={classes.title}> Budget This Year :\r\n                    </Typography>\r\n\r\n                <div\r\n                    style={{\r\n                    height: 400,\r\n                    width: '40%',\r\n                    display: 'inline-flex'\r\n                }}>\r\n                    <DataGrid\r\n                        rows={rowdef}\r\n                        columns={coldef}\r\n                        pageSize={5}\r\n                        />\r\n                </div>\r\n\r\n                {/* <Typography className={classes.title}> Budget This Year(+1) :\r\n                    </Typography> */}\r\n\r\n                <div\r\n                    style={{\r\n                    height: 400,\r\n                    width: '60%',\r\n                    display: 'inline-flex'\r\n                }}>\r\n                    <DataGrid\r\n                        rows={rows}\r\n                        columns={columns}\r\n                        pageSize={5}\r\n                        />\r\n                </div>\r\n\r\n    </div> </>\r\n    )\r\n}\r\nexport default Budget_future","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-enquiries\\nominal-enquiry\\Budgets.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\create-and-amend-accounts\\amend-nominal-account-details\\BudgetThisYear.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\create-and-amend-accounts\\amend-nominal-account-details\\Analysis.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-list\\nomial-list-table.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\components\\navWrapper\\navItems.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\summaries\\sales\\index.tsx",["1163","1164","1165","1166","1167","1168"],"import React from \"react\";\r\nimport { ResponsiveBar } from '@nivo/bar';\r\nimport { ResponsivePie } from '@nivo/pie'\r\nimport { Paper, Grid, Typography, Button, Modal, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, makeStyles } from '@material-ui/core';\r\nconst data: any[] = require('../../../../textJsonData/salesData.json')\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        overflow: 'scroll'\r\n    },\r\n});\r\n\r\nconst SalesSummaries: React.FC<{}> = () => {\r\n    const data1 = () => {\r\n        const sum:number[] = [0,0,0,0,0,0,0,0,0,0,0,0];\r\n        data.forEach((ele)=>{\r\n            const period = new Date(ele[\"Transaction Date\"]).getMonth();\r\n            sum[period]+=ele[\"Net Value in Base Currency\"];\r\n        })\r\n        const finalData:any[]=[];\r\n        for(let i=0;i<12;i++)\r\n        {\r\n            sum[i] = parseFloat(sum[i].toFixed(2));\r\n            finalData.push({\"name\":\"Period \"+(i+1),\"Gross\":sum[i]});\r\n        }\r\n        return finalData;\r\n    }\r\n\r\n    const data3 = () => {\r\n        let total=0;\r\n        let due=0;\r\n        data.forEach((ele)=>{\r\n            if(ele[\"Transaction Type\"].includes(\"invoice\")||ele[\"Transaction Type\"].includes(\"Invoice\")) {\r\n                total+=ele[\"Outstanding Value in Base Currency\"];\r\n                if(ele[\"Overdue\"]!=\"No\")\r\n                    due+=ele[\"Outstanding Value in Base Currency\"];\r\n            }\r\n        })\r\n        due = parseFloat(due.toFixed(2));\r\n        let notdue = total - due;\r\n        notdue = parseFloat(notdue.toFixed(2));\r\n        return [{ name: \"Overdue amount\", value: due },{ name: \"No Overdue amount\", value: notdue }];\r\n    }\r\n\r\n    const data4 = () => {\r\n        let d4 = new Map<string,number>();\r\n        data.forEach((ele)=>{\r\n            if(ele[\"Transaction Type\"].includes(\"invoice\")||ele[\"Transaction Type\"].includes(\"Invoice\")) {\r\n                if (ele[\"Overdue\"]==\"No\")\r\n                {\r\n                    if(d4.get(ele[\"Code\"])==undefined)\r\n                        d4.set(ele[\"Code\"] , 0);\r\n                    let val = d4.get(ele[\"Code\"]) + ele[\"Outstanding Value in Base Currency\"];\r\n                    d4.set(ele[\"Code\"] , val);\r\n                }\r\n            }\r\n        })\r\n        let finalData:any[]=[];\r\n        d4.forEach((value,key)=>{\r\n            value = parseFloat(value.toFixed(2));\r\n            finalData.push({name:key,value});\r\n        })\r\n        return finalData;\r\n    }\r\n\r\n    const data5 = () => {\r\n        let d5 = new Map<string,number>();\r\n        data.forEach((ele)=>{\r\n            if(d5.get(ele[\"Code\"])==undefined)\r\n                        d5.set(ele[\"Code\"] , 0);\r\n            let val = d5.get(ele[\"Code\"]) + ele[\"Net Value in Base Currency\"];\r\n            d5.set(ele[\"Code\"] , val);\r\n        })\r\n        let finalData:any[]=[];\r\n        d5.forEach((value,key)=>{\r\n            value = parseFloat(value.toFixed(2));\r\n            finalData.push({name:key,value});\r\n        })\r\n        finalData.sort((a, b) => (a.value < b.value) ? 1 : -1);\r\n        finalData = finalData.slice(0,10).reverse();\r\n        return finalData;        \r\n    }\r\n\r\n    const data6 = () => {\r\n        let d6 = new Map<string,Array<number>>();\r\n        data.forEach((ele)=>{\r\n            if(d6.get(ele[\"Code\"])==undefined)\r\n                d6.set(ele[\"Code\"],[0,0,0]);\r\n            let di = d6.get(ele[\"Code\"]);\r\n            if(di === undefined) \r\n                di = [0,0,0];\r\n            let val1 = di[0] + ele[\"Outstanding Value in Base Currency\"];\r\n            let date1 = new Date(ele[\"Transaction Date\"]); \r\n            let date2 = new Date(ele[\"Due Date\"]); \r\n            let Difference_In_Time = date2.getTime() - date1.getTime(); \r\n            let Difference_In_Days = Difference_In_Time / (1000 * 3600 * 24); \r\n            let val2 = di[1] + Difference_In_Days;\r\n            let val3 = di[2] + 1;\r\n            d6.set(ele[\"Code\"] , [val1, val2, val3]);\r\n        })\r\n        let finalData:any[]=[];\r\n        d6.forEach((di,key)=>{\r\n            finalData.push({customer_code:key,outstanding_amount:di[0],avg_days:di[1]/di[2]});\r\n        })\r\n        finalData.sort((a, b) => (a.avg_days > b.avg_days) ? 1 : -1);\r\n        finalData = finalData.reverse().slice(0,5).reverse();\r\n        return finalData;        \r\n    }\r\n\r\n    const [pie1, setPie1] = React.useState(true);\r\n    const [pie2, setPie2] = React.useState(false);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [tableData, setTableData] = React.useState(data);\r\n\r\n    const filterTableData2 = (name:string) => {\r\n        const td = data.filter((d)=> (d[\"Code\"] === name) && (d[\"Transaction Type\"].includes(\"invoice\")||d[\"Transaction Type\"].includes(\"Invoice\")) && d[\"Overdue\"] === \"No\");\r\n        console.log('filtered data',td);\r\n        setTableData(td);\r\n    }\r\n\r\n    const CustomTick = (tick:any) => {\r\n        return (\r\n            <g transform={`translate(${tick.x},${tick.y + 22})`} >\r\n                <line stroke=\"rgb(221, 221, 221)\" strokeWidth={1} y1={-22} y2={-12} />\r\n                <text\r\n                    textAnchor=\"middle\"\r\n                    dominantBaseline=\"middle\"\r\n                    style={{\r\n                        fill: '#333',\r\n                        fontSize: 12,\r\n                    }}\r\n                >\r\n                    £{parseFloat((tick.value/1000).toFixed(2))}k\r\n                </text>\r\n            </g>\r\n        )\r\n    }\r\n    const CustomTick2 = (tick:any) => {\r\n        return (\r\n            <g transform={`translate(${tick.x-22},${tick.y})`} >\r\n                <line stroke=\"rgb(221, 221, 221)\" strokeWidth={1} x1={22} x2={12} />\r\n                <text\r\n                    textAnchor=\"middle\"\r\n                    dominantBaseline=\"middle\"\r\n                    style={{\r\n                        fill: '#333',\r\n                        fontSize: 12,\r\n                    }}\r\n                >\r\n                    £{parseFloat((tick.value/1000).toFixed(2))}k\r\n                </text>\r\n            </g>\r\n        )\r\n    }\r\n    const getRandomColor = () =>  {\r\n        let letters = '0123456789ABCDEF';\r\n        let color = '#';\r\n        for (let i = 0; i < 6; i++) {\r\n          color += letters[Math.floor(Math.random() * 16)];\r\n        }\r\n        return color;\r\n    }\r\n    const CustomBarComponent = (b:any) => (\r\n        <circle cx={b.x + b.width / 2} cy={b.y + b.height / 2} r={Math.min(b.width, b.height)/2} fill={getRandomColor()} fill-opacity=\"0.7\" stroke-width=\"1\"  style={{cursor:'pointer'}}/>\r\n    )\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid container justify='center'>\r\n            <Grid item xs={12}>\r\n                <Typography variant=\"h5\" component=\"h5\" align='center' style={{padding:'10px',fontWeight: 'bold'}}>\r\n                    SALES SUMMARIES\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} style={{padding:'20px',paddingBottom:'0px'}}>\r\n                <Paper elevation={4} style={{height:'50vh',paddingBottom:'60px'}} >\r\n                    <Typography variant=\"h6\" component=\"h6\" align='right' style={{padding:'10px',fontWeight: 'bold'}}>\r\n                            Turnover chart\r\n                    </Typography>\r\n                    <ResponsiveBar\r\n                        data={data1()}\r\n                        keys={['Gross']}\r\n                        indexBy=\"name\"\r\n                        margin={{right: 110, bottom: 50, left: 80 }}\r\n                        padding={0.3}\r\n                        valueScale={{ type: 'linear' }}\r\n                        indexScale={{ type: 'band', round: true }}\r\n                        colors={'#3f51b5'}\r\n                        enableLabel={false}\r\n                        borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\r\n                        axisTop={null}\r\n                        axisRight={null}\r\n                        axisBottom={{\r\n                            tickSize: 5,\r\n                            tickPadding: 5,\r\n                            tickRotation: 0,\r\n                            legend: 'Period',\r\n                            legendPosition: 'middle',\r\n                            legendOffset: 45\r\n                        }}\r\n                        axisLeft={{\r\n                            tickSize: 5,\r\n                            tickPadding: 5,\r\n                            tickRotation: 0,\r\n                            legend: 'Amount',\r\n                            legendPosition: 'middle',\r\n                            legendOffset: -60\r\n                        }}\r\n                        legends={[\r\n                            {\r\n                                dataFrom: 'keys',\r\n                                anchor: 'bottom-right',\r\n                                direction: 'column',\r\n                                justify: false,\r\n                                translateX: 120,\r\n                                translateY: 0,\r\n                                itemsSpacing: 2,\r\n                                itemWidth: 100,\r\n                                itemHeight: 20,\r\n                                itemDirection: 'left-to-right',\r\n                                itemOpacity: 0.85,\r\n                                symbolSize: 20,\r\n                                effects: [\r\n                                    {\r\n                                        on: 'hover',\r\n                                        style: {\r\n                                            itemOpacity: 1\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]}\r\n                        animate={true}\r\n                        motionStiffness={90}\r\n                        motionDamping={15}\r\n                    />\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={6} style={{padding:'20px',paddingRight:0,paddingBottom:0}}>\r\n                <Paper elevation={4}>\r\n                    <Typography variant=\"h6\" component=\"h6\" align='right' style={{padding:'10px',fontWeight: 'bold'}}>\r\n                        {pie1&&\"Outstanding debts\"}\r\n                        {pie2&&\"Customers with no overdue\"}\r\n                    </Typography>\r\n                    <Button size='small' variant=\"contained\" disableElevation color='primary' style={{visibility:pie2?'visible':'hidden',marginLeft:'20px'}}\r\n                        onClick={()=>{{setPie1(true);setPie2(false);}}}\r\n                    >\r\n                            Back\r\n                    </Button>\r\n                    <div style={{height:'45vh', display:pie1?'block':'none',cursor:'pointer'}}>\r\n                    <ResponsivePie\r\n                        data={data3()}\r\n                        margin={{right: 80, bottom: 30, left: 30 }}\r\n                        padAngle={0.7}\r\n                        id='name'\r\n                        value='value'\r\n                        cornerRadius={3}\r\n                        colors={{ scheme: 'nivo' }}\r\n                        borderWidth={1}\r\n                        borderColor={{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] }}\r\n                        radialLabelsSkipAngle={10}\r\n                        radialLabelsTextColor=\"#333333\"\r\n                        radialLabelsLinkColor={{ from: 'color' }}\r\n                        sliceLabelsSkipAngle={10}\r\n                        sliceLabelsTextColor=\"#333333\"\r\n                        legends={[\r\n                            {\r\n                                anchor: 'right',\r\n                                direction: 'column',\r\n                                justify: false,\r\n                                itemsSpacing: 2,\r\n                                itemWidth: 60,\r\n                                itemHeight: 14,\r\n                                itemTextColor: '#999',\r\n                                itemDirection: 'left-to-right',\r\n                                itemOpacity: 1,\r\n                                symbolSize: 14,\r\n                                symbolShape: 'circle'\r\n                            }]}\r\n                        onClick={()=>{setPie1(false);setPie2(true);}}\r\n                    />\r\n                    </div>\r\n                    <div style={{height:'50vh', display:pie2?'block':'none',cursor:'pointer'}}>\r\n                    <ResponsivePie\r\n                        data={data4()}\r\n                        margin={{right: 0, bottom: 40, left: 0, top:40 }}\r\n                        padAngle={0.7}\r\n                        id='name'\r\n                        value='value'\r\n                        cornerRadius={3}\r\n                        colors={{ scheme: 'nivo' }}\r\n                        borderWidth={1}\r\n                        borderColor={{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] }}\r\n                        radialLabelsSkipAngle={10}\r\n                        radialLabelsTextColor={{\r\n                            from: 'color',\r\n                            modifiers: [['darker', 2]],\r\n                        }}\r\n                        enableSliceLabels={false}                \r\n                        radialLabelsLinkColor={{ from: 'color' }}\r\n                        radialLabel={d => `${d.id}:${d.value}`}\r\n                        onClick={(data:any)=>{ filterTableData2(data.id);setOpen(true);}}\r\n                    />\r\n                    </div>\r\n                    <Button variant=\"contained\" disableElevation size='small' onClick={()=> {setTableData(data); setOpen(true)}} style={{marginLeft:'20px',marginBottom:'10px',visibility:pie1?'visible':'hidden'}}>\r\n                        View Data\r\n                    </Button>\r\n                </Paper>\r\n                <Modal\r\n                open={open}\r\n                onClose={()=>setOpen(false)}\r\n                >\r\n                    <Grid container justify={'center'} style={{height:'100%'}}>\r\n                        <Grid item xs={9} style={{alignSelf:'center',background:'white', padding:'20px'}} >\r\n                            <TableContainer component={Paper} style={{height:'80vh',overflow:'scroll'}}>\r\n                                <Table className={classes.table} size='small' aria-label=\"simple table\">\r\n                                    <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell> Code </TableCell>\r\n                                        <TableCell align=\"right\"> Transaction Type </TableCell>\r\n                                        <TableCell align=\"right\"> Transaction Date </TableCell>\r\n                                        <TableCell align=\"right\"> Gross Value in Base Currency </TableCell>\r\n                                        <TableCell align=\"right\"> Net Value in Base Currency </TableCell>\r\n                                        <TableCell align=\"right\"> Value in Account Currency </TableCell>\r\n                                        <TableCell align=\"right\"> Outstanding Value in Base Currency </TableCell>\r\n                                        <TableCell align=\"right\"> Outstanding Value in Account Currency </TableCell>\r\n                                        <TableCell align=\"right\"> Due Date </TableCell>\r\n                                        <TableCell align=\"right\"> Overdue </TableCell>\r\n                                        <TableCell align=\"right\"> Overdue Days </TableCell>\r\n                                        <TableCell align=\"right\"> Reference</TableCell>\r\n                                        <TableCell align=\"right\"> Query Flag</TableCell>\r\n                                        <TableCell align=\"right\"> Status</TableCell>\r\n                                    </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                    {tableData.map((row) => (\r\n                                        <TableRow key={row['Code']}>\r\n                                            <TableCell> {row['Code']} </TableCell>\r\n                                            <TableCell align=\"right\"> {row['Transaction Type']}</TableCell>\r\n                                            <TableCell align=\"right\"> {row['Transaction Date']}</TableCell>\r\n                                            <TableCell align=\"right\"> {row['Gross Value in Base Currency']}</TableCell>\r\n                                            <TableCell align=\"right\"> {row['Net Value in Base Currency']}</TableCell>\r\n                                            <TableCell align=\"right\"> {row['Value in Account Currency']}</TableCell>\r\n                                            <TableCell align=\"right\"> {row['Outstanding Value in Base Currency']}</TableCell>\r\n                                            <TableCell align=\"right\"> {row['Outstanding Value in Account Currency']}</TableCell>\r\n                                            <TableCell align=\"right\"> {row['Due Date']}</TableCell>\r\n                                            <TableCell align=\"right\"> {row['Overdue']}</TableCell>\r\n                                            <TableCell align=\"right\"> {row['Overdue Days']}</TableCell>\r\n                                            <TableCell align=\"right\"> {row['Reference']}</TableCell>\r\n                                            <TableCell align=\"right\"> {row['Query Flag']}</TableCell>\r\n                                            <TableCell align=\"right\"> {row['Status']}</TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                            <Button variant=\"contained\" color='secondary' disableElevation size='small' onClick={()=> setOpen(false)} style={{margin:'10px'}}>\r\n                                Close\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Modal>\r\n            </Grid>\r\n            <Grid item xs={6} style={{padding:'20px',paddingBottom:0}}>\r\n                <Paper elevation={4}>\r\n                    <Typography variant=\"h6\" component=\"h6\" align='right' style={{padding:'10px',fontWeight: 'bold'}}>\r\n                            Top customers\r\n                    </Typography>\r\n                    <div style={{height:'56vh',cursor:'pointer'}}>\r\n                    <ResponsiveBar\r\n                        data={data5()}\r\n                        keys={['value']}\r\n                        layout=\"horizontal\"\r\n                        indexBy=\"name\"\r\n                        maxValue={data5()[9].value + 5000}\r\n                        enableGridX={true}\r\n                        enableGridY={false}\r\n                        margin={{right: 50, bottom: 50, left: 80 }}\r\n                        valueScale={{ type: 'linear' }}\r\n                        indexScale={{ type: 'band', round: true }}\r\n                        colors={'rgb(244, 117, 96)'}\r\n                        enableLabel={false}\r\n                        axisLeft={{\r\n                            tickSize: 5,\r\n                            tickPadding: 5,\r\n                            tickRotation: 0,\r\n                            legend: 'Customer Codes',\r\n                            legendPosition: 'middle',\r\n                            legendOffset: -70\r\n                        }}\r\n                        axisBottom={{\r\n                            tickSize: 5,\r\n                            renderTick: CustomTick\r\n                        }}\r\n                        animate={true}\r\n                        motionStiffness={90}\r\n                        motionDamping={15}\r\n                        tooltip={({ id, value, color }) => (\r\n                            <strong>\r\n                                £{parseFloat((value/1000).toFixed(2))}k\r\n                            </strong>\r\n                        )}\r\n                    />\r\n                    </div>\r\n                </Paper>\r\n                </Grid>                     \r\n            <Grid item xs={6} style={{padding:'20px',paddingBottom:0}}>\r\n                <Paper elevation={4}>\r\n                    <Typography variant=\"h6\" component=\"h6\" align='right' style={{padding:'10px',fontWeight: 'bold'}}>\r\n                            Worst Paying Customers\r\n                    </Typography>\r\n                    <div style={{height:'56vh'}}>\r\n                    <ResponsiveBar\r\n                        data={data6()}\r\n                        keys={['outstanding_amount']}\r\n                        indexBy='avg_days'\r\n                        enableGridX={false}\r\n                        enableGridY={true}\r\n                        margin={{right: 50, bottom: 50, left: 80, top:5 }}\r\n                        valueScale={{ type: 'linear' }}\r\n                        indexScale={{ type: 'band', round: true }}\r\n                        enableLabel={false}\r\n                        axisLeft={{\r\n                            tickSize: 5,\r\n                            tickPadding: 5,\r\n                            tickRotation: 0,\r\n                            legend: 'Outstanding Balance',\r\n                            legendPosition: 'middle',\r\n                            legendOffset: -70,\r\n                            renderTick: CustomTick2\r\n                        }}\r\n                        axisBottom={{\r\n                            tickSize: 5,\r\n                            legend: 'Average days to pay',\r\n                            legendPosition: 'middle',\r\n                            legendOffset: 30,\r\n                        }}\r\n                        animate={true}\r\n                        motionStiffness={90}\r\n                        motionDamping={15}\r\n                        barComponent={CustomBarComponent}\r\n                    />\r\n                    </div>\r\n                </Paper>\r\n            </Grid>                     \r\n           </Grid>\r\n\r\n    )\r\n}\r\n\r\nexport default SalesSummaries;\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\create-amend-accounts\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\customer-list\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-list\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\enter-transactions\\nominal-vatable-receipt\\index.tsx",["1169"],"import React from \"react\"\r\nimport Grid from '@material-ui/core/Grid'\r\nimport {createStyles, makeStyles, Theme, withStyles} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker} from '@material-ui/pickers';\r\n\r\nconst BootstrapInput = withStyles((theme : Theme) => createStyles({\r\n    input: {\r\n        borderRadius: 4,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '1px solid #ced4da',\r\n        fontSize: 16,\r\n        padding: '7px 26px 7px 12px',\r\n        transition: theme\r\n            .transitions\r\n            .create(['border-color', 'box-shadow']),\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"'\r\n        ].join(','),\r\n        '&:focus': {\r\n            borderRadius: 4,\r\n            borderColor: '#80bdff',\r\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)'\r\n        }\r\n    }\r\n}),)(InputBase);\r\n\r\nconst useStyles = makeStyles((theme : Theme) => createStyles({\r\n    NominalVatableReceipt: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    NVtitle: {\r\n        fontSize: '20px',\r\n        fontWeight: 'bold'\r\n    },\r\n    NVFieldWrapper: {\r\n        padding: '10px 0'\r\n    },\r\n    NVlabel: {\r\n        lineHeight: '30px',\r\n        paddingRight: theme.spacing(2)\r\n    },\r\n    NVformWrapper: {\r\n        paddingTop: theme.spacing(2)\r\n    },\r\n    NVtable: {\r\n        width: '100%'\r\n    }\r\n}),)\r\n\r\n// table info\r\nfunction createData(code : number, cc : string, department : string, name : string, reference : string, narrative : string, transition : number, transda : string, grossvalue : number, vatco : number, rate : number, goodval : string, vatvalue : number) {\r\n    return {\r\n        code,\r\n        cc,\r\n        department,\r\n        name,\r\n        reference,\r\n        narrative,\r\n        transition,\r\n        transda,\r\n        grossvalue,\r\n        vatco,\r\n        rate,\r\n        goodval,\r\n        vatvalue\r\n    };\r\n}\r\n\r\nconst rows = [createData(1011, 'dummy', 'dummy', 'dummy', 'dummy', 'dummy', 1234, 'dummy', 123, 123, 123, 'dummy', 123)];\r\nconst NominalVatableReceipt : React.FC < {} > = () => {\r\n    const [selectedDate,\r\n        setSelectedDate] = React.useState < Date | null > (new Date(),);\r\n\r\n    const handleDateChange = (date : Date | null) => {\r\n        setSelectedDate(date);\r\n    };\r\n    const classes = useStyles();\r\n    const [bankaccount,\r\n        setBankaccount] = React.useState('');\r\n    const handleChange = (event : React.ChangeEvent < {\r\n        value: unknown\r\n    } >) => {\r\n        setBankaccount(event.target.value as string);\r\n    };\r\n    return (\r\n        <div className={classes.NominalVatableReceipt}>\r\n            <Grid container spacing={3}>\r\n                <Grid item lg={12}>\r\n                    <Typography className={classes.NVtitle}>Bank</Typography>\r\n                    <div className={classes.NVformWrapper}>\r\n                        <form>\r\n                            <div className={classes.NVFieldWrapper}>\r\n                                <label className={classes.NVlabel}>Bank Account</label>\r\n                                <NativeSelect\r\n                                    id=\"demo-customized-select-native\"\r\n                                    value={bankaccount}\r\n                                    onChange={handleChange}\r\n                                    input={< BootstrapInput />}>\r\n                                    <option aria-label=\"None\" value=\"\"/>\r\n                                    <option value={10}>Ten</option>\r\n                                    <option value={20}>Twenty</option>\r\n                                    <option value={30}>Thirty</option>\r\n                                </NativeSelect>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                            </div>\r\n                            <div className={classes.NVFieldWrapper}>\r\n                                <label className={classes.NVlabel}>Account Type :</label>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                                &nbsp; &nbsp;\r\n                                <label className={classes.NVlabel}>Currency :</label>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                                &nbsp; &nbsp;\r\n                                <label className={classes.NVlabel}>Exchange rate to base :</label>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item lg={12}>\r\n                    <Typography className={classes.NVtitle}>Transaction Details</Typography>\r\n                    <div className={classes.NVformWrapper}>\r\n                        <form>\r\n                            <div className={classes.NVFieldWrapper}>\r\n                                <label className={classes.NVlabel}>Cheque Number :</label>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                                <label className={classes.NVlabel}>2nd ref :</label>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                            </div>\r\n                            <div className={classes.NVFieldWrapper}>\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                    <label\r\n                                        style={{\r\n                                        lineHeight: '55px'\r\n                                    }}>Transactions Date :</label>\r\n                                    <KeyboardDatePicker\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-dialog\"\r\n                                        format=\"MM/dd/yyyy\"\r\n                                        value={selectedDate}\r\n                                        onChange={handleDateChange}\r\n                                        KeyboardButtonProps={{\r\n                                        'aria-label': 'change date'\r\n                                    }}/></MuiPickersUtilsProvider>\r\n                                &nbsp;&nbsp;\r\n                                <label className={classes.NVlabel}>Narrative :</label>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item lg={12}>\r\n                    <Typography className={classes.NVtitle}>Nominal Transactions</Typography>\r\n                    <TableContainer component={Paper}>\r\n                        <Table className={classes.NVtable} aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Code</TableCell>\r\n                                    <TableCell align=\"right\">CC</TableCell>\r\n                                    <TableCell align=\"right\">Dept</TableCell>\r\n                                    <TableCell align=\"right\">Department</TableCell>\r\n                                    <TableCell align=\"right\">Name</TableCell>\r\n                                    <TableCell align=\"right\">Reference</TableCell>\r\n                                    <TableCell align='right'>Narrative</TableCell>\r\n                                    <TableCell align='right'>Transaction</TableCell>\r\n                                    <TableCell align='right'>Trans. Da</TableCell>\r\n                                    <TableCell align='right'>Gross value</TableCell>\r\n                                    <TableCell align='right'>VAT Co</TableCell>\r\n                                    <TableCell align='right'>Rate</TableCell>\r\n                                    <TableCell align='right'>Goods Val</TableCell>\r\n                                    <TableCell align='right'>VAT Value</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {rows.map((row) => (\r\n                                    <TableRow key={row.name}>\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {row.name}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">{row.code}</TableCell>\r\n                                        <TableCell align=\"right\">{row.cc}</TableCell>\r\n                                        <TableCell align=\"right\">{row.department}</TableCell>\r\n                                        <TableCell align=\"right\">{row.name}</TableCell>\r\n                                        <TableCell align=\"right\">{row.reference}</TableCell>\r\n                                        <TableCell align=\"right\">{row.narrative}</TableCell>\r\n                                        <TableCell align=\"right\">{row.transition}</TableCell>\r\n                                        <TableCell align=\"right\">{row.transda}</TableCell>\r\n                                        <TableCell align=\"right\">{row.grossvalue}</TableCell>\r\n                                        <TableCell align=\"right\">{row.vatco}</TableCell>\r\n                                        <TableCell align=\"right\">{row.rate}</TableCell>\r\n                                        <TableCell align=\"right\">{row.goodval}</TableCell>\r\n                                        <TableCell align=\"right\">{row.vatvalue}</TableCell>\r\n\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NominalVatableReceipt","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-reports\\sage-bank-feed-posting-report\\index.tsx",["1170","1171","1172","1173","1174","1175","1176"],"import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  createStyles,\r\n  makeStyles,\r\n  Theme,\r\n  withStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"date-fns\";\r\nimport { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\r\n\r\nconst BootstrapInput = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    input: {\r\n      borderRadius: 4,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"7px 26px 7px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"-apple-system\",\r\n        \"BlinkMacSystemFont\",\r\n        '\"Segoe UI\"',\r\n        \"Roboto\",\r\n        '\"Helvetica Neue\"',\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n        '\"Apple Color Emoji\"',\r\n        '\"Segoe UI Emoji\"',\r\n        '\"Segoe UI Symbol\"',\r\n      ].join(\",\"),\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#80bdff\",\r\n        boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n      },\r\n    },\r\n  })\r\n)(InputBase);\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    NominalVatableReceipt: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    NVtitle: {\r\n      fontSize: \"20px\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    NVFieldWrapper: {\r\n      padding: \"10px 0\",\r\n    },\r\n    NVlabel: {\r\n      lineHeight: \"30px\",\r\n      paddingRight: theme.spacing(2),\r\n    },\r\n    NVformWrapper: {\r\n      paddingTop: theme.spacing(2),\r\n    },\r\n    NVtable: {\r\n      width: \"100%\",\r\n    },\r\n    buttonWrapper: {\r\n      margin: theme.spacing(3),\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 400,\r\n    },\r\n  })\r\n);\r\n\r\n// table info\r\nfunction createData(\r\n  code: number,\r\n  cc: string,\r\n  department: string,\r\n  name: string,\r\n  reference: string,\r\n  narrative: string,\r\n  transition: number,\r\n  transda: string,\r\n  grossvalue: number,\r\n  vatco: number,\r\n  rate: number,\r\n  goodval: string,\r\n  vatvalue: number\r\n) {\r\n  return {\r\n    code,\r\n    cc,\r\n    department,\r\n    name,\r\n    reference,\r\n    narrative,\r\n    transition,\r\n    transda,\r\n    grossvalue,\r\n    vatco,\r\n    rate,\r\n    goodval,\r\n    vatvalue,\r\n  };\r\n}\r\n\r\nconst rows = [\r\n  createData(\r\n    1011,\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    1234,\r\n    \"dummy\",\r\n    123,\r\n    123,\r\n    123,\r\n    \"dummy\",\r\n    123\r\n  ),\r\n];\r\nconst SageBankFeedPostingReport: React.FC<{}> = () => {\r\n  const [selectedDate, setSelectedDate] = React.useState<Date | null>(\r\n    new Date()\r\n  );\r\n\r\n  const handleDateChange = (date: Date | null) => {\r\n    setSelectedDate(date);\r\n  };\r\n  const classes = useStyles();\r\n  const [bankaccount, setBankaccount] = React.useState(\"\");\r\n  const handleChange = (\r\n    event: React.ChangeEvent<{\r\n      value: unknown;\r\n    }>\r\n  ) => {\r\n    setBankaccount(event.target.value as string);\r\n  };\r\n  return (\r\n    <div className={classes.NominalVatableReceipt}>\r\n      <Grid container spacing={3}>\r\n        <Grid item lg={12}>\r\n          <Typography className={classes.NVtitle}>Critarial values</Typography>\r\n          <div className={classes.NVformWrapper}>\r\n            <form>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Account</label>\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    onChange={handleChange}\r\n                    label=\"Age\"\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={10}>Ten</MenuItem>\r\n                    <MenuItem value={20}>Twenty</MenuItem>\r\n                    <MenuItem value={30}>Thirty</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Account Description</label>\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    onChange={handleChange}\r\n                    label=\"Age\"\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={10}>Ten</MenuItem>\r\n                    <MenuItem value={20}>Twenty</MenuItem>\r\n                    <MenuItem value={30}>Thirty</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Posting Details</label>\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    onChange={handleChange}\r\n                    label=\"Age\"\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={10}>Ten</MenuItem>\r\n                    <MenuItem value={20}>Twenty</MenuItem>\r\n                    <MenuItem value={30}>Thirty</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item lg={12}>\r\n          <div className={classes.NVformWrapper}>\r\n            <form>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Preview a simple report for a specified no of record or transection (0 for all) :</label>\r\n                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  type=\"number\"\r\n                />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Button variant=\"contained\" className={classes.buttonWrapper}>\r\n          Help\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.buttonWrapper}\r\n        >\r\n          Save\r\n        </Button>\r\n        <Button variant=\"contained\" className={classes.buttonWrapper}>\r\n          Load\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.buttonWrapper}\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SageBankFeedPostingReport;\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\short-term-cash-projection\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-enquiries\\nominal-enquiry\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\Budgets\\amend-combined-nominal-budget\\index.tsx",["1177","1178","1179","1180","1181","1182","1183","1184","1185","1186","1187"],"import React from \"react\"\r\nimport Grid from '@material-ui/core/Grid'\r\nimport {createStyles, makeStyles, Theme, withStyles} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker} from '@material-ui/pickers';\r\n\r\nconst BootstrapInput = withStyles((theme : Theme) => createStyles({\r\n    input: {\r\n        borderRadius: 4,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '1px solid #ced4da',\r\n        fontSize: 16,\r\n        padding: '7px 26px 7px 12px',\r\n        transition: theme\r\n            .transitions\r\n            .create(['border-color', 'box-shadow']),\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"'\r\n        ].join(','),\r\n        '&:focus': {\r\n            borderRadius: 4,\r\n            borderColor: '#80bdff',\r\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)'\r\n        }\r\n    }\r\n}),)(InputBase);\r\n\r\nconst useStyles = makeStyles((theme : Theme) => createStyles({\r\n    NominalVatableReceipt: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    NVtitle: {\r\n        fontSize: '20px',\r\n        fontWeight: 'bold'\r\n    },\r\n    NVFieldWrapper: {\r\n        padding: '10px 0'\r\n    },\r\n    NVlabel: {\r\n        lineHeight: '30px',\r\n        paddingRight: theme.spacing(2)\r\n    },\r\n    NVformWrapper: {\r\n        paddingTop: theme.spacing(2)\r\n    },\r\n    NVtable: {\r\n        width: '100%'\r\n    }\r\n}),)\r\n\r\n// table info\r\nfunction createData(code : number, cc : string, department : string, name : string, reference : string, narrative : string, transition : number, transda : string, grossvalue : number, vatco : number, rate : number, goodval : string, vatvalue : number) {\r\n    return {\r\n        code,\r\n        cc,\r\n        department,\r\n        name,\r\n        reference,\r\n        narrative,\r\n        transition,\r\n        transda,\r\n        grossvalue,\r\n        vatco,\r\n        rate,\r\n        goodval,\r\n        vatvalue\r\n    };\r\n}\r\n\r\nconst rows = [createData(1011, 'dummy', 'dummy', 'dummy', 'dummy', 'dummy', 1234, 'dummy', 123, 123, 123, 'dummy', 123)];\r\nconst AmendCombinedNominalBudget : React.FC < {} > = () => {\r\n    const [selectedDate,\r\n        setSelectedDate] = React.useState < Date | null > (new Date(),);\r\n\r\n    const handleDateChange = (date : Date | null) => {\r\n        setSelectedDate(date);\r\n    };\r\n    const classes = useStyles();\r\n    const [bankaccount,\r\n        setBankaccount] = React.useState('');\r\n    const handleChange = (event : React.ChangeEvent < {\r\n        value: unknown\r\n    } >) => {\r\n        setBankaccount(event.target.value as string);\r\n    };\r\n    return (\r\n        <div className={classes.NominalVatableReceipt}>\r\n            <Grid container spacing={3}>\r\n\r\n                <Grid item lg={12}>\r\n                    <Typography className={classes.NVtitle}>Combined Nominal Budget</Typography>\r\n                    <TableContainer component={Paper}>\r\n                        <Table className={classes.NVtable} aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>User Name</TableCell>\r\n                                    <TableCell align=\"right\">Work Station</TableCell>\r\n                                    <TableCell align=\"right\">Module</TableCell>\r\n                                    <TableCell align=\"right\">Feture</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {rows.map((row) => (\r\n                                    <TableRow key={row.name}>\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {row.name}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">{row.code}</TableCell>\r\n                                        <TableCell align=\"right\">{row.cc}</TableCell>\r\n                                        <TableCell align=\"right\">{row.department}</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AmendCombinedNominalBudget\r\n\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\FixedAssets\\amend-asset\\index.tsx",["1188","1189"],"import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  createStyles,\r\n  makeStyles,\r\n  Theme,\r\n  withStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\n\r\nconst BootstrapInput = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    input: {\r\n      borderRadius: 4,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"7px 26px 7px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"-apple-system\",\r\n        \"BlinkMacSystemFont\",\r\n        '\"Segoe UI\"',\r\n        \"Roboto\",\r\n        '\"Helvetica Neue\"',\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n        '\"Apple Color Emoji\"',\r\n        '\"Segoe UI Emoji\"',\r\n        '\"Segoe UI Symbol\"',\r\n      ].join(\",\"),\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#80bdff\",\r\n        boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n      },\r\n    },\r\n  })\r\n)(InputBase);\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    NominalVatableReceipt: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    NVtitle: {\r\n      fontSize: \"20px\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    NVFieldWrapper: {\r\n      padding: \"10px 0\",\r\n    },\r\n    NVlabel: {\r\n      lineHeight: \"30px\",\r\n      paddingRight: theme.spacing(2),\r\n    },\r\n    NVformWrapper: {\r\n      paddingTop: theme.spacing(2),\r\n    },\r\n    NVtable: {\r\n      width: \"100%\",\r\n    },\r\n    buttonWrapper: {\r\n      margin: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\n// table info\r\nfunction createData(\r\n  code: number,\r\n  cc: string,\r\n  department: string,\r\n  name: string,\r\n  reference: string,\r\n  narrative: string,\r\n  transition: number,\r\n  transda: string,\r\n  grossvalue: number,\r\n  vatco: number,\r\n  rate: number,\r\n  goodval: string,\r\n  vatvalue: number\r\n) {\r\n  return {\r\n    code,\r\n    cc,\r\n    department,\r\n    name,\r\n    reference,\r\n    narrative,\r\n    transition,\r\n    transda,\r\n    grossvalue,\r\n    vatco,\r\n    rate,\r\n    goodval,\r\n    vatvalue,\r\n  };\r\n}\r\n\r\nconst rows = [\r\n  createData(\r\n    1011,\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    1234,\r\n    \"dummy\",\r\n    123,\r\n    123,\r\n    123,\r\n    \"dummy\",\r\n    123\r\n  ),\r\n];\r\nconst AmendAsset: React.FC<{}> = () => {\r\n  const [selectedDate, setSelectedDate] = React.useState<Date | null>(\r\n    new Date()\r\n  );\r\n\r\n  const handleDateChange = (date: Date | null) => {\r\n    setSelectedDate(date);\r\n  };\r\n  const classes = useStyles();\r\n  const [bankaccount, setBankaccount] = React.useState(\"\");\r\n  const handleChange = (\r\n    event: React.ChangeEvent<{\r\n      value: unknown;\r\n    }>\r\n  ) => {\r\n    setBankaccount(event.target.value as string);\r\n  };\r\n  return (\r\n    <div className={classes.NominalVatableReceipt}>\r\n      <Grid container spacing={3}>\r\n        <Grid item lg={12}>\r\n          <Typography className={classes.NVtitle}>Asset Details</Typography>\r\n          <div className={classes.NVformWrapper}>\r\n            <form>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Code :</label>\r\n                <NativeSelect\r\n                  id=\"demo-customized-select-native\"\r\n                  value={bankaccount}\r\n                  onChange={handleChange}\r\n                  input={<BootstrapInput />}\r\n                >\r\n                  <option aria-label=\"None\" value=\"\" />\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </NativeSelect>\r\n                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                <label className={classes.NVlabel}>Initial Value :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <label\r\n                    style={{\r\n                      lineHeight: \"55px\",\r\n                    }}\r\n                  >\r\n                    Date Acquired :\r\n                  </label>\r\n                  <KeyboardDatePicker\r\n                    margin=\"normal\"\r\n                    id=\"date-picker-dialog\"\r\n                    format=\"MM/dd/yyyy\"\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                      \"aria-label\": \"change date\",\r\n                    }}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n                &nbsp;&nbsp;\r\n                <label className={classes.NVlabel}>Description :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n\r\n              <div className={classes.NVFieldWrapper}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <label\r\n                    style={{\r\n                      lineHeight: \"55px\",\r\n                    }}\r\n                  >\r\n                    Last Depriciated :\r\n                  </label>\r\n                  <KeyboardDatePicker\r\n                    margin=\"normal\"\r\n                    id=\"date-picker-dialog\"\r\n                    format=\"MM/dd/yyyy\"\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                      \"aria-label\": \"change date\",\r\n                    }}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n                &nbsp;&nbsp;\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item lg={12}>\r\n          <Typography className={classes.NVtitle}>\r\n            Depriciation Details\r\n          </Typography>\r\n          <div className={classes.NVformWrapper}>\r\n            <form>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Description Method</label>\r\n                <NativeSelect\r\n                  id=\"demo-customized-select-native\"\r\n                  value={bankaccount}\r\n                  onChange={handleChange}\r\n                  input={<BootstrapInput />}\r\n                >\r\n                  <option aria-label=\"None\" value=\"\" />\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </NativeSelect>\r\n              </div>\r\n\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Net book value</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Balence Sheet</label>\r\n                <NativeSelect\r\n                  id=\"demo-customized-select-native\"\r\n                  value={bankaccount}\r\n                  onChange={handleChange}\r\n                  input={<BootstrapInput />}\r\n                >\r\n                  <option aria-label=\"None\" value=\"\" />\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </NativeSelect>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Profit and loss</label>\r\n                <NativeSelect\r\n                  id=\"demo-customized-select-native\"\r\n                  value={bankaccount}\r\n                  onChange={handleChange}\r\n                  input={<BootstrapInput />}\r\n                >\r\n                  <option aria-label=\"None\" value=\"\" />\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </NativeSelect>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item lg={12}>\r\n          <Typography className={classes.NVtitle}>Analysis Details</Typography>\r\n          <div className={classes.NVformWrapper}>\r\n            <form>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Manager :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Location :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Analysis 1 :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Analysis 2 :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Analysis 3 :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n        <Button variant=\"contained\" className={classes.buttonWrapper}>\r\n          Clear\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.buttonWrapper}\r\n        >\r\n          Save\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AmendAsset;\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\account-analysis\\txn-listing-current\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\enter-transactions\\sales-receipt\\index.tsx",["1190","1191","1192","1193","1194","1195","1196","1197","1198","1199"],"import React from 'react';\r\nimport { createStyles, makeStyles, Theme, withStyles } from '@material-ui/core/styles';\r\nimport { Paper, Grid, Typography, TextField, InputAdornment, Checkbox, FormControlLabel, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TableFooter, Button, MenuItem, IconButton } from '@material-ui/core';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    padding: '5px',\r\n    maxWidth: '100%',\r\n    '& .MuiGrid-item': {\r\n        height: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(3),\r\n    textAlign: 'left',\r\n    color: theme.palette.text.primary,\r\n    fontWeight: theme.typography.fontWeightBold,\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        marginLeft: theme.spacing(0),\r\n        marginBottom: theme.spacing(0),\r\n        width: '25ch'\r\n      },\r\n  },\r\n}));\r\n\r\nconst bankData = [\r\n    {Code: '1200',AccountDescription:'Bank Current Account', ShortCode: '233434',AccountNumber: '003234234'},\r\n    {Code: '1201',AccountDescription:'Euro Bank', ShortCode: '464564',AccountNumber: '45646456'},\r\n    {Code: '1210',AccountDescription:'Bank Deposit Account', ShortCode: '454545',AccountNumber: '900474345'},\r\n    {Code: '1220',AccountDescription:'Building Society Account', ShortCode: '9245454',AccountNumber: '083454358'}\r\n]\r\n\r\nconst customerData = [\r\n    {Code:'A1D001',ShortName:'A1 Desig', Name:'A1 Design', Postcode: 'BP127HT', Balance: '1120.92', OnHold: 'No', CreditLimit: '2000', availableCredit: '980'},\r\n    {Code:'A1D002',ShortName:'A2 Desig', Name:'A2 Design', Postcode: 'BP127HT', Balance: '174.00', OnHold: 'No', CreditLimit: '60000', availableCredit: '59826' },\r\n    {Code:'A1D003',ShortName:'A2 Desig', Name:'A2 Design', Postcode: 'BP127HT', Balance: '16364.99', OnHold: 'No'},\r\n    {Code:'ABS001',ShortName:'ABS Gara', Name:'ABS Garage', Postcode: 'NE311VB', Balance: '2368.16', OnHold: 'No'},\r\n    {Code:'ASB002',ShortName:'ABS Shop', Name:'ABS Garage', Postcode: 'NE311VB', Balance: '0.00', OnHold: 'No'}\r\n]\r\n\r\nconst SalesReceipt: React.FC<{}> = () => {\r\n    const classes = useStyles();\r\n    const [code, setCode] = React.useState('');\r\n    const [shortName, setShortName] = React.useState('');\r\n    const [postcode, setPostcode] = React.useState('');\r\n    const [creditLimit, setCreditLimit] = React.useState('');\r\n    const [balance, setBalance] = React.useState('');\r\n    const [bankAccount, setBankAccount] = React.useState('');\r\n    const [chequeCurrency, setChequeCurrency] = React.useState('');\r\n    const [settlementDiscount, setSettlementDiscount] = React.useState('');\r\n    const [chequeValue, setChequeValue] = React.useState('');\r\n\r\n    const setCustomerData = (customer:any, value: string) => {\r\n        setCode(customer.Code||'');\r\n        setShortName(customer.ShortName||'');\r\n        setPostcode(customer.Postcode||'');\r\n        setCreditLimit(customer.CreditLimit||'');\r\n        setBalance(customer.Balance||'');\r\n    }\r\n\r\n    const handleBankAccountChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let value = event.target.value;\r\n        if(value === '') return;\r\n        console.log(value);\r\n        setBankAccount(value||'');\r\n    };\r\n\r\n    const handleCodeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let value = event.target.value;\r\n        if(value === '') return;\r\n        let customer = customerData.find(row => row.Code === value);\r\n        if(customer === undefined) return;\r\n        setCustomerData(customer, value);\r\n    };\r\n    \r\n    const handleShortNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let value = event.target.value;\r\n        if(value === '') return;\r\n        let customer = customerData.find(row => row.ShortName === value);\r\n        if(customer === undefined) return;\r\n        setCustomerData(customer, value);\r\n    };\r\n\r\n    const handlePostcodeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let value = event.target.value;\r\n        if(value === '') return;\r\n        let customer = customerData.find(row => row.Postcode === value);\r\n        if(customer === undefined) return;\r\n        setCustomerData(customer, value);\r\n    };\r\n    \r\n    const reset = () => {\r\n        setCode( '');\r\n        setShortName( '');\r\n        setCreditLimit('');\r\n        setPostcode( '');\r\n        setBalance( '');\r\n        setBankAccount('');\r\n        setChequeCurrency('');\r\n        setSettlementDiscount('');\r\n        setChequeValue('');\r\n    }\r\n    const save = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        alert(\"Saved!\");\r\n        reset();\r\n    }\r\n\r\n    const clear = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        alert(\"Cleared!\");\r\n        reset();\r\n    }\r\n    \r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid container justify='center'>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h5\" component=\"h5\" align='center' style={{padding:'10px',fontWeight: 'bold'}}>\r\n                SALES RECEIPT\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n              <Paper className={classes.paper} elevation={0} variant='outlined'>\r\n                <Typography variant=\"h6\" component=\"h6\" align='left'>\r\n                    Bank account details\r\n                </Typography>\r\n                <TextField \r\n                    id=\"bank-account\" \r\n                    select\r\n                    label=\"Bank account\" \r\n                    variant=\"filled\"\r\n                    size=\"small\"\r\n                    value={bankAccount}\r\n                    onChange={handleBankAccountChange}\r\n                    style={{width:'60ch'}}\r\n                >\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell size=\"small\">Code</TableCell>\r\n                            <TableCell align=\"right\" size=\"small\">Account description</TableCell> \r\n                            <TableCell align=\"right\" size=\"small\">Short Code</TableCell> \r\n                            <TableCell align=\"right\" size=\"small\">Account Number</TableCell> \r\n                        </TableRow>\r\n                    </TableHead>\r\n                    {bankData.map((option) => (\r\n                        <MenuItem key={option.Code} value={option.Code} style={{padding:0,display: \"table-row-group\"}}>\r\n                            <TableRow key={option.Code}>\r\n                                <TableCell size=\"small\">{option.Code}</TableCell>\r\n                                <TableCell align=\"right\" size=\"small\">{option.AccountDescription}</TableCell>\r\n                                <TableCell align=\"right\" size=\"small\">{option.ShortCode}</TableCell>\r\n                                <TableCell align=\"right\" size=\"small\">{option.AccountNumber}</TableCell>\r\n                            </TableRow>\r\n                        </MenuItem>\r\n                    ))}\r\n                </TextField>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={8}>\r\n            <Paper className={classes.paper} elevation={0} variant='outlined'>\r\n                <Typography variant=\"h6\" component=\"h6\" align='left'>\r\n                    Customer details\r\n                </Typography>\r\n                <form className={classes.form} noValidate autoComplete=\"off\">\r\n                    <Grid item xs={6}>\r\n                        <TextField \r\n                            id=\"code\" \r\n                            select label=\"Code\" \r\n                            variant=\"filled\"\r\n                            size=\"small\"\r\n                            value={code}\r\n                            onChange={handleCodeChange}\r\n                        >\r\n                            {customerData.map((option) => (\r\n                                <MenuItem key={option.Code} value={option.Code}>\r\n                                    {option.Code}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n                        <TextField \r\n                            id=\"short-name\" \r\n                            select label=\"Short Name\" \r\n                            variant=\"filled\" \r\n                            size=\"small\" \r\n                            value={shortName}\r\n                            onChange={handleShortNameChange}>\r\n                            {customerData.map((option) => (\r\n                                <MenuItem key={option.ShortName} value={option.ShortName}>\r\n                                    {option.ShortName}\r\n                                </MenuItem>\r\n                            ))}                                \r\n                        </TextField>\r\n                        <TextField \r\n                            id=\"postcode\" \r\n                            select \r\n                            label=\"Postcode\"\r\n                            variant=\"filled\"\r\n                            size=\"small\"\r\n                            value={postcode}\r\n                            onChange={handlePostcodeChange}>\r\n                            {customerData.map((option) => (\r\n                                <MenuItem key={option.Postcode} value={option.Postcode}>\r\n                                    {option.Postcode}\r\n                                </MenuItem>\r\n                            ))} \r\n                        </TextField>   \r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                            label=\"Credit limit\"\r\n                            id=\"credit-limit\"\r\n                            InputProps={{\r\n                                startAdornment: <InputAdornment position='start'>£</InputAdornment>,\r\n                            }}\r\n                            variant=\"filled\"\r\n                            size=\"small\"\r\n                            value={creditLimit}\r\n                            />\r\n                        <TextField\r\n                            label=\"Balance\"\r\n                            id=\"balance\"\r\n                            InputProps={{\r\n                                startAdornment: <InputAdornment position='start'>£</InputAdornment>,\r\n                            }}\r\n                            variant=\"filled\"\r\n                            size=\"small\"\r\n                            value={balance}\r\n                        />                        \r\n                    </Grid>\r\n                </form>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Paper className={classes.paper} elevation={0} variant='outlined'>\r\n                <Typography variant=\"h6\" component=\"h6\" align='left'>\r\n                    Transaction details\r\n                </Typography>\r\n                <form className={classes.form} noValidate autoComplete=\"off\">\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            id=\"date\"\r\n                            label=\"Date\"\r\n                            type=\"date\"\r\n                            defaultValue=\"2017-05-24\"\r\n                            variant=\"filled\"\r\n                            size=\"small\"/>\r\n                        <TextField\r\n                            id=\"reference\"\r\n                            label=\"Reference\"\r\n                            variant=\"filled\"\r\n                            size=\"small\"/>   \r\n                        <TextField\r\n                            id=\"sec-reference\"\r\n                            label=\"Second ref\"\r\n                            variant=\"filled\"\r\n                            size=\"small\"/>\r\n                    </Grid>\r\n                </form>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Paper className={classes.paper} elevation={0} variant='outlined'>\r\n                <Typography variant=\"h6\" component=\"h6\" align='left'>\r\n                    Receipt details\r\n                </Typography>\r\n                <form className={classes.form} noValidate autoComplete=\"off\">\r\n                    <Grid item xs={4}>\r\n                        <TextField \r\n                            id=\"cheque-currency\" \r\n                            select\r\n                            label=\"Cheque currency\" \r\n                            variant=\"filled\"\r\n                            size=\"small\"\r\n                            value={chequeCurrency}\r\n                            onChange={(e) => setChequeCurrency(e.target.value) }\r\n                            >\r\n                            <MenuItem key={'EUR'} value={'EUR'}>\r\n                                    {'EUR'}\r\n                            </MenuItem>\r\n                            <MenuItem key={'USD'} value={'USD'}>\r\n                                    {'USD'}\r\n                            </MenuItem>\r\n                        </TextField>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <TextField\r\n                            label=\"Settlement discount\"\r\n                            id=\"settlement-discount\"\r\n                            InputProps={{\r\n                                startAdornment: <InputAdornment position='start'>£</InputAdornment>,\r\n                            }}\r\n                            variant=\"filled\"\r\n                            size=\"small\"\r\n                            value={settlementDiscount}\r\n                            onChange={(e) => setSettlementDiscount(e.target.value) }\r\n                            />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <TextField\r\n                            label=\"Cheque value\"\r\n                            id=\"cheque-value\"\r\n                            InputProps={{\r\n                                startAdornment: <InputAdornment position='start'>£</InputAdornment>,\r\n                            }}\r\n                            variant=\"filled\"\r\n                            size=\"small\"\r\n                            value={chequeValue}\r\n                            onChange={(e) => setChequeValue(e.target.value) }\r\n                        />                      \r\n                    </Grid>\r\n                </form>\r\n            </Paper>\r\n          </Grid>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            startIcon={<SaveIcon />}\r\n            style={{margin:'10px',marginBottom:'20px'}}\r\n            onClick={save}\r\n          >Save</Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            startIcon={<ClearIcon />}\r\n            style={{margin:'10px',marginBottom:'20px'}}\r\n            onClick={clear}\r\n          >Clear</Button>\r\n        </Grid>\r\n      </div>\r\n    );\r\n}\r\nexport default SalesReceipt","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\bank-standing-orders-and-direct-debits\\payments-option.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-enquiries\\nominal-deferred-pending-postings\\nominal-deferred-table2.tsx",["1200"],"import React from 'react';\r\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Typography ,Divider} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        width: '50%',\r\n        paddingTop:theme.spacing(2),\r\n\r\n      },\r\n    },\r\n    detailWrapper:{\r\n        display:'flex',\r\n        alignContent:'space-around',\r\n        paddingTop:theme.spacing(1),\r\n        borderBottom:'0.5px solid #000',\r\n        \r\n    },\r\n    value:{\r\n        width:'50%',\r\n        paddingLeft:theme.spacing(10),\r\n        fontSize:'15px',\r\n        textTransform:'uppercase'\r\n    }\r\n  }),\r\n);\r\n\r\nexport default function SimplePaper() {\r\n  const classes = useStyles();\r\nconst data=[\r\n    {title:'code',value:'2100'},\r\n    {title:'cost center',value:''},\r\n    {title:'department',value:''},\r\n    {title:'transaction type',value:'General'},\r\n    {title:'transaction Date',value:'03/11/2021'},\r\n    {title:'credit value',value:'360.00'},\r\n    {title:'debit value',value:'0.00'},\r\n    {title:'document credit value',value:'360.00'},\r\n    {title:'document debit value',value:'0.00'},\r\n    {title:'document currency',value:'Pound Stering'},\r\n    {title:'document rate',value:'1.00000'},\r\n    {title:'reference',value:'pur/nov/c2'},\r\n    {title:'narrative',value:'PI/CON002'},\r\n    {title:'posted date',value:'05/08/2021'},\r\n    {title:'transaction analysis',value:''},\r\n    {title:'user',value:'1 slobhan winter'},\r\n    {title:'source',value:'purchase ledger'},\r\n    {title:'urn',value:'1308'}\r\n\r\n]\r\n  return (\r\n    <div className={classes.root}>\r\n      \r\n      <Paper>\r\n          {data.map((d,i)=>{\r\nreturn(\r\n    <div className={classes.detailWrapper} key={i}>\r\n    <Typography className={classes.value}>\r\n        {d.title}\r\n    </Typography>\r\n    <Typography className={classes.value}>\r\n        {d.value}\r\n    </Typography>\r\n    </div>\r\n)\r\n          })}\r\n     \r\n          \r\n      </Paper>\r\n    </div>\r\n  );\r\n}","E:\\sage_clone\\jan_warehouse\\src\\components\\navWrapper\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-enquiries\\nominal-enquiry\\Analysis.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\create-and-amend-accounts\\amend-nominal-account-details\\BudgetFutureYear.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\create-and-amend-accounts\\create-accounts-for-cost-center-department\\Cost_Center.tsx",["1201","1202"],"import React from \"react\"\r\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography/Typography'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme : Theme) => createStyles({\r\n    root: {\r\n        '& > *': {\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            margin: theme.spacing(2),\r\n            width: '100%'\r\n        }\r\n    },\r\n    costCentre: {},\r\n    title: {\r\n        textAlign: 'left',\r\n        fontSize: '17px',\r\n        fontWeight: 'bold'\r\n    },\r\n    label: {\r\n        width: '15%',\r\n        fontSize: '15px',\r\n        paddingRight: theme.spacing(2),\r\n        paddingTop: theme.spacing(2)\r\n    },\r\n    inputFieldWrapper: {\r\n        marginTop:theme.spacing(2)\r\n    },\r\n    selectTab: {\r\n        borderBottom: 'none',\r\n        border: '.5px solid rgb(211,211,211,0.7)',\r\n        width:'15%',\r\n        height:'30px',\r\n        paddingLeft:theme.spacing(1)\r\n    },\r\n    selectTabActive: {\r\n        borderBottom: 'none',\r\n        border: '.5px solid rgb(211,211,211,0.7)',\r\n        width: '100px'\r\n    },\r\n    buttonWrapper: {\r\n        margin: theme.spacing(3)\r\n    },\r\n    inputwraper: {\r\n        marginLeft: theme.spacing(2)\r\n    }\r\n}),);\r\n\r\nconst Cost_Center : React.FC < {} > = () => {\r\n        const classes = useStyles();\r\n        \r\nreturn (\r\n    \r\n    <>\r\n    \r\n        <div className={classes.costCentre}>\r\n                    <Typography className={classes.title}>Cost Centre Details :\r\n                    </Typography>\r\n\r\n                    <div className={classes.inputFieldWrapper}>\r\n                        <label className={classes.label}>Code :</label>\r\n                        <TextField\r\n                            className={classes.inputwraper}\r\n                            id=\"code-consolidated\"\r\n                            variant=\"outlined\"/>\r\n                    </div>\r\n\r\n                    <div className={classes.inputFieldWrapper}>\r\n                        <label className={classes.label}>Name :</label>\r\n                        <TextField\r\n                            className={classes.inputwraper}\r\n                            id=\"code-consolidated\"\r\n                            variant=\"outlined\"/>\r\n                    </div>\r\n\r\n            <div className={classes.inputFieldWrapper}>\r\n\r\n                <label className={classes.label}>Source :</label>\r\n                <Select\r\n                    id=\"code-dropdown\"\r\n                    className={classes.selectTab}>\r\n                    <MenuItem value={'ADM'}>Administration</MenuItem>\r\n                    <MenuItem value={'BIR'}>Birmingham</MenuItem>\r\n                    <MenuItem value={'INS'}>Installation/De</MenuItem>\r\n                    <MenuItem value={'LON'}>London</MenuItem>\r\n                    <MenuItem value={'MAN'}>Manchester</MenuItem>\r\n                    <MenuItem value={'RFT'}>Retail Outlet</MenuItem>\r\n                    <MenuItem value={'SAI'}>Factory Warehouse</MenuItem>\r\n                    <MenuItem value={'SCO'}>Scotland</MenuItem>\r\n                </Select>\r\n            </div>\r\n        </div>\r\n    </>\r\n)\r\n};\r\n\r\nexport default Cost_Center;\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\cash-position\\bank-list-option.tsx",["1203"],"import React from \"react\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport LoopIcon from \"@material-ui/icons/Loop\";\r\n\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      paddingTop: theme.spacing(1),\r\n      paddingLeft: theme.spacing(1),\r\n    },\r\n  })\r\n);\r\nexport default function BankListOption() {\r\n  const buttonOption = [\r\n    { icon: <AddCircleIcon />, data: \"Actions\" },\r\n    { icon: <AssignmentIcon />, data: \"Exports\" },\r\n    { icon: <ReceiptIcon />, data: \"Print\" },\r\n    { icon: <LoopIcon />, data: \"Refresh\" },\r\n  ];\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography>Bank List</Typography>\r\n      <Grid container direction='row' justify='flex-start' alignItems='flex-start'>\r\n        {buttonOption.map((option) => {\r\n          return (\r\n            <Button>\r\n              <Grid container direction='column' alignItems='center'>\r\n                {option.icon}\r\n                {option.data}\r\n              </Grid>\r\n            </Button>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\bank-txn-enquiry\\bank-account-option.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\short-term-cash-projection\\AccountsTable.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\create-and-amend-accounts\\create-new-nominal-account\\budget_year\\Budget_year.tsx",["1204","1205","1206"],"import React from \"react\"\r\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography/Typography'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme : Theme) => createStyles({\r\n    root: {\r\n        '& > *': {\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            margin: theme.spacing(2),\r\n            width: '100%'\r\n        }\r\n    },\r\n    accountsWrapper: {},\r\n    title: {\r\n        textAlign: 'left',\r\n        fontSize: '17px',\r\n        fontWeight: 'bold'\r\n    },\r\n    label: {\r\n        width: '15%',\r\n        fontSize: '15px',\r\n        paddingRight: theme.spacing(2),\r\n        paddingTop: theme.spacing(2)\r\n    },\r\n    inputFieldWrapper: {},\r\n    selectTab: {\r\n        borderBottom: 'none',\r\n        border: '.5px solid rgb(211,211,211,0.7)'\r\n    },\r\n    selectTabActive: {\r\n        borderBottom: 'none',\r\n        border: '.5px solid rgb(211,211,211,0.7)',\r\n        width: '100px'\r\n    },\r\n    buttonWrapper: {\r\n        margin: theme.spacing(3)\r\n    },\r\n    inputwraper: {\r\n        marginLeft: theme.spacing(2)\r\n    },table: {\r\n    minWidth: 650,\r\n  }\r\n}),);\r\n\r\nconst Budget_year : React.FC < {} > = () => {\r\n    const classes = useStyles();\r\n\r\n\r\n    function changeHandler(v : any) {\r\n        console.log(v);\r\n    }\r\n\r\n    return ( <> <div className={classes.accountsWrapper}>\r\n        <div className={classes.accountsWrapper}>\r\n                    <Typography className={classes.title}> Period Values :\r\n                    </Typography>\r\n\r\n                        <div className={classes.inputFieldWrapper}>\r\n\r\n                <label className={classes.label}>Budget Type :</label>\r\n                <Select\r\n                    id=\"code-dropdown\"\r\n                    className={classes.selectTab}\r\n                    onChange={(e) => {\r\n                    changeHandler(e.target.value)\r\n                }}>\r\n                    {/* <MenuItem value=\"\" >Select One</MenuItem> */}\r\n\r\n                    <MenuItem value={'0'}>No Budget</MenuItem>\r\n                    <MenuItem value={'1'}>Monthly Budget</MenuItem>\r\n                    <MenuItem value={'2'}>Annual Budget</MenuItem>\r\n                    <MenuItem value={'3'}>Profiled Budget</MenuItem>\r\n\r\n                </Select>\r\n            </div>\r\n            \r\n                    \r\n                </div>\r\n\r\n    </div> </>\r\n    )\r\n}\r\nexport default Budget_year","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\create-amend-accounts\\amend-bank-account-details\\EBanking.tsx",["1207","1208","1209"],"import React from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Button from \"@material-ui/core/Button\";\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      \"& > *\": {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        margin: theme.spacing(1),\r\n        width: \"100%\",\r\n      },\r\n    },\r\n    formControl: {},\r\n    accountsWrapper: {},\r\n    title: {\r\n      textAlign: \"left\",\r\n      fontSize: \"17px\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    label: {\r\n      width: \"15%\",\r\n      fontSize: \"15px\",\r\n      paddingRight: theme.spacing(2),\r\n      paddingTop: theme.spacing(2),\r\n    },\r\n    inputFieldWrapper: {},\r\n    selectTab: {\r\n      borderBottom: \"none\",\r\n      border: \".5px solid rgb(211,211,211,0.7)\",\r\n    },\r\n    selectTabActive: {\r\n      borderBottom: \"none\",\r\n      border: \".5px solid rgb(211,211,211,0.7)\",\r\n      width: \"100px\",\r\n    },\r\n    buttonWrapper: {\r\n      margin: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nconst EBanking: React.FC<{}> = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.accountsWrapper}>\r\n        <Typography className={classes.title}>E - Banking Details</Typography>\r\n        <form className={classes.root} noValidate autoComplete='off'>\r\n          <div className={classes.inputFieldWrapper}>\r\n            <label className={classes.label}>E-Banking Service:</label>\r\n            <FormControl variant='outlined' className={classes.formControl}>\r\n              <Select\r\n                native\r\n                inputProps={{\r\n                  name: \"banking service\",\r\n                  id: \"outlined-age-native-simple\",\r\n                }}>\r\n                <option aria-label='None' value='' />\r\n                <option value={\"Dummy\"}>'Dummy'</option>\r\n                <option value={\"Dummy\"}>'Dummy'</option>\r\n                <option value={\"Dummy\"}>'Dummy'</option>\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <div className={classes.inputFieldWrapper}>\r\n            <label className={classes.label}>E-Banking Functions:</label>\r\n            <FormControl variant='outlined' className={classes.formControl}>\r\n              <Select\r\n                native\r\n                inputProps={{\r\n                  name: \"banking function\",\r\n                  id: \"outlined-age-native-simple\",\r\n                }}>\r\n                <option aria-label='None' value='' />\r\n                <option value={\"Dummy\"}>'Dummy'</option>\r\n                <option value={\"Dummy\"}>Dummy</option>\r\n                <option value={\"Dummy\"}>Dummy</option>\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <div className={classes.inputFieldWrapper}>\r\n            <FormControl variant='outlined' className={classes.formControl}>\r\n              <Button\r\n                variant='contained'\r\n                color='primary'\r\n                className={classes.buttonWrapper}>\r\n                Use Location\r\n              </Button>\r\n            </FormControl>\r\n          </div>\r\n        </form>\r\n        <div>\r\n          <Button variant='contained' className={classes.buttonWrapper}>\r\n            Clear\r\n          </Button>\r\n          <Button variant='contained' color='primary' className={classes.buttonWrapper}>\r\n            Save\r\n          </Button>\r\n          <Button variant='contained' color='primary' className={classes.buttonWrapper}>\r\n            Close\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default EBanking;\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\create-amend-accounts\\create-customer\\panels\\alerts.tsx",["1210"],"import React, { useState } from \"react\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport BottomDrower from \"../../../../../../components/bottom-navigation\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n    modal: {\r\n      width: 400,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"2px solid #000\",\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n    heading: {\r\n      paddingLeft: theme.spacing(1),\r\n      paddingRight: theme.spacing(1),\r\n    },\r\n  })\r\n);\r\nconst Alerts: React.FC<{}> = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={12} sm={6}>\r\n          <h3 className={classes.heading}>Alerts</h3>\r\n          <Grid item xs={12} md={12} sm={12}>\r\n            <TableContainer component={Paper}>\r\n              <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Created </TableCell>\r\n                    <TableCell>Last Updates</TableCell>\r\n                    <TableCell align=\"right\">User</TableCell>\r\n                    <TableCell align=\"right\">Description</TableCell>\r\n                    <TableCell align=\"right\">Active</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  <TableRow key={\"row.name\"}>\r\n                    <TableCell component=\"th\" scope=\"row\"></TableCell>\r\n                    <TableCell></TableCell>\r\n                    <TableCell align=\"right\"></TableCell>\r\n                    <TableCell align=\"right\"></TableCell>\r\n                    <TableCell align=\"right\"></TableCell>\r\n                  </TableRow>\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} md={12} sm={12}>\r\n          <BottomDrower>\r\n            <div />\r\n            <div>\r\n              <Button variant=\"contained\">Add</Button>\r\n              <Button variant=\"contained\" color=\"primary\">\r\n                Edit\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\">\r\n                Delete\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\">\r\n                Set as Active\r\n              </Button>\r\n            </div>\r\n          </BottomDrower>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default Alerts;\r\n","E:\\sage_clone\\jan_warehouse\\src\\components\\tabpanel\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\create-amend-accounts\\amend-bank-account-details\\Memos.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\create-amend-accounts\\amend-bank-account-details\\AccountDeatils.tsx",["1211"],"import React from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      \"& > *\": {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        margin: theme.spacing(1),\r\n        width: \"100%\",\r\n      },\r\n    },\r\n\r\n    accountsWrapper: {},\r\n    title: {\r\n      textAlign: \"left\",\r\n      fontSize: \"17px\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    label: {\r\n      width: \"30%\",\r\n      fontSize: \"15px\",\r\n      paddingRight: theme.spacing(2),\r\n      paddingTop: theme.spacing(2),\r\n    },\r\n    inputFieldWrapper: {\r\n      marginBottom: theme.spacing(2),\r\n      display: \"flex\",\r\n    },\r\n    selectTab: {\r\n      borderBottom: \"none\",\r\n      border: \".5px solid rgb(211,211,211,0.7)\",\r\n    },\r\n    selectTabActive: {\r\n      borderBottom: \"none\",\r\n      border: \".5px solid rgb(211,211,211,0.7)\",\r\n      width: \"100px\",\r\n    },\r\n    buttonWrapper: {\r\n      margin: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nconst AccountDeatils: React.FC<{}> = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.accountsWrapper}>\r\n        <form className={classes.root} noValidate autoComplete='off'>\r\n          <Typography className={classes.title}>Account</Typography>\r\n          <Grid item>\r\n            <Grid lg={6} item>\r\n              <div className={classes.inputFieldWrapper}>\r\n                <label className={classes.label}>Code :</label>\r\n                <TextField id='code' variant='outlined' size='small' />\r\n              </div>\r\n              <div className={classes.inputFieldWrapper}>\r\n                <label className={classes.label}>Active Status :</label>\r\n\r\n                <Select id='active-dropdown' className={classes.selectTabActive}>\r\n                  <MenuItem value={\"Active\"}>Active</MenuItem>\r\n                  <MenuItem value={\"Hidden\"}>Hidden</MenuItem>\r\n                </Select>\r\n              </div>\r\n            </Grid>\r\n            <Grid lg={6} item>\r\n              <div className={classes.inputFieldWrapper}>\r\n                <label className={classes.label}>Description :</label>\r\n                <TextField id='code' variant='outlined' size='small' />\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n          <Typography className={classes.title}>Bank Details</Typography>\r\n\r\n          <Grid item>\r\n            <Grid item lg={6}>\r\n              {\" \"}\r\n              <div className={classes.inputFieldWrapper}>\r\n                <label className={classes.label}>Active Type :</label>\r\n\r\n                <Select id='active-dropdown' className={classes.selectTabActive}>\r\n                  <MenuItem value={\"Current\"}>Current</MenuItem>\r\n                  <MenuItem value={\"Savings\"}>Savings</MenuItem>\r\n                </Select>\r\n              </div>\r\n              <div className={classes.inputFieldWrapper}>\r\n                <label className={classes.label}>Account Number :</label>\r\n                <TextField id='Account Number' variant='outlined' size='small' />\r\n              </div>\r\n              <div className={classes.inputFieldWrapper}>\r\n                <label className={classes.label}>Sort Code :</label>\r\n                <TextField id='Sort Code' variant='outlined' size='small' />\r\n              </div>\r\n              <div className={classes.inputFieldWrapper}>\r\n                <label className={classes.label}>Account Name :</label>\r\n                <TextField id='Account Name' variant='outlined' size='small' />\r\n              </div>\r\n              <div className={classes.inputFieldWrapper}>\r\n                <label className={classes.label}>Active Currency :</label>\r\n\r\n                <Select id='active-dropdown' className={classes.selectTabActive}>\r\n                  <MenuItem value={\"Currency 1\"}>Currency 1</MenuItem>\r\n                  <MenuItem value={\"Currency 2\"}>Currency 1</MenuItem>\r\n                  <MenuItem value={\"Currency 3\"}>Currency 1</MenuItem>\r\n                  <MenuItem value={\"Currency 4\"}>Currency 1</MenuItem>\r\n                </Select>\r\n              </div>\r\n            </Grid>\r\n            <Grid item lg={6}>\r\n              <div className={classes.inputFieldWrapper}>\r\n                <label className={classes.label}>Last Statement Date :</label>\r\n                <TextField id='Last Statement Date' variant='outlined' size='small' />\r\n              </div>\r\n              <div className={classes.inputFieldWrapper}>\r\n                <label className={classes.label}>Balance :</label>\r\n                <TextField id='Balance' variant='outlined' size='small' />\r\n              </div>\r\n              <div className={classes.inputFieldWrapper}>\r\n                <label className={classes.label}>Base Currency Balance :</label>\r\n                <TextField id='Base Currency Balance' variant='outlined' size='small' />\r\n              </div>\r\n              <div className={classes.inputFieldWrapper}>\r\n                <label className={classes.label}>OverDraft Amt :</label>\r\n                <TextField id='OverDraft Amt' variant='outlined' size='small' />\r\n              </div>\r\n              <div className={classes.inputFieldWrapper}>\r\n                <label className={classes.label}>BAN :</label>\r\n                <TextField id='Ban' size='small' variant='outlined' />\r\n              </div>\r\n              <div className={classes.inputFieldWrapper}>\r\n                <label className={classes.label}>BICI Swift Number :</label>\r\n                <TextField id='BICI Swift Number' variant='outlined' size='small' />\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Typography className={classes.title}>Nominal Acccounts</Typography>\r\n          <Grid item>\r\n            <Grid item lg={12}>\r\n              <div className={classes.inputFieldWrapper}>\r\n                <label className={classes.label}>Bank Account :</label>\r\n\r\n                <Select id='code-dropdown' className={classes.selectTab}>\r\n                  <MenuItem value=''></MenuItem>\r\n                  <MenuItem value={\"data data data data\"}>data data data data</MenuItem>\r\n                  <MenuItem value={\"data data data data\"}>data data data data</MenuItem>\r\n                  <MenuItem value={\"data data data data\"}>data data data data</MenuItem>\r\n                </Select>\r\n                <TextField id='code-consolidated' variant='outlined' size='small' />\r\n                <TextField id='code-consolidated' variant='outlined' size='small' />\r\n                <TextField id='code-consolidated' variant='outlined' size='small' />\r\n                <TextField id='code-consolidated' variant='outlined' size='small' />\r\n              </div>\r\n              <div className={classes.inputFieldWrapper}>\r\n                <label className={classes.label}>Bank Charges :</label>\r\n\r\n                <Select id='code-dropdown' className={classes.selectTab}>\r\n                  <MenuItem value=''></MenuItem>\r\n                  <MenuItem value={\"data data data data\"}>data data data data</MenuItem>\r\n                  <MenuItem value={\"data data data data\"}>data data data data</MenuItem>\r\n                  <MenuItem value={\"data data data data\"}>data data data data</MenuItem>\r\n                </Select>\r\n                <TextField id='code-consolidated' variant='outlined' size='small' />\r\n                <TextField id='code-consolidated' variant='outlined' size='small' />\r\n                <TextField id='code-consolidated' variant='outlined' size='small' />\r\n                <TextField id='code-consolidated' variant='outlined' size='small' />\r\n              </div>\r\n              <div className={classes.inputFieldWrapper}>\r\n                <label className={classes.label}>Exchange Differences :</label>\r\n\r\n                <Select id='code-dropdown' className={classes.selectTab}>\r\n                  <MenuItem value=''></MenuItem>\r\n                  <MenuItem value={\"data data data data\"}>data data data data</MenuItem>\r\n                  <MenuItem value={\"data data data data\"}>data data data data</MenuItem>\r\n                  <MenuItem value={\"data data data data\"}>data data data data</MenuItem>\r\n                </Select>\r\n                <TextField id='code-consolidated' variant='outlined' size='small' />\r\n                <TextField id='code-consolidated' variant='outlined' size='small' />\r\n                <TextField id='code-consolidated' variant='outlined' size='small' />\r\n                <TextField id='code-consolidated' variant='outlined' size='small' />\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n\r\n        <div>\r\n          <Button variant='contained' className={classes.buttonWrapper}>\r\n            Clear\r\n          </Button>\r\n          <Button variant='contained' color='primary' className={classes.buttonWrapper}>\r\n            Save\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default AccountDeatils;\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\create-amend-accounts\\amend-bank-account-details\\CustomerListTable.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\summaries\\purchase-orders\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\enter-transactions\\sales-payment\\index.tsx",["1212","1213","1214","1215","1216","1217","1218","1219","1220","1221"],"import React from 'react';\r\nimport { createStyles, makeStyles, Theme, withStyles } from '@material-ui/core/styles';\r\nimport { Paper, Grid, Typography, TextField, InputAdornment, Checkbox, FormControlLabel, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TableFooter, Button, MenuItem, IconButton } from '@material-ui/core';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    padding: '5px',\r\n    maxWidth: '100%',\r\n    '& .MuiGrid-item': {\r\n        height: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(3),\r\n    textAlign: 'left',\r\n    color: theme.palette.text.primary,\r\n    fontWeight: theme.typography.fontWeightBold,\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        marginLeft: theme.spacing(0),\r\n        marginBottom: theme.spacing(0),\r\n        width: '25ch'\r\n      },\r\n  },\r\n}));\r\n\r\nconst bankData = [\r\n    {Code: '1200',AccountDescription:'Bank Current Account', ShortCode: '233434',AccountNumber: '003234234'},\r\n    {Code: '1201',AccountDescription:'Euro Bank', ShortCode: '464564',AccountNumber: '45646456'},\r\n    {Code: '1210',AccountDescription:'Bank Deposit Account', ShortCode: '454545',AccountNumber: '900474345'},\r\n    {Code: '1220',AccountDescription:'Building Society Account', ShortCode: '9245454',AccountNumber: '083454358'}\r\n]\r\n\r\nconst customerData = [\r\n    {Code:'A1D001',ShortName:'A1 Desig', Name:'A1 Design', Postcode: 'BP127HT', Balance: '1120.92', OnHold: 'No', CreditLimit: '2000', availableCredit: '980'},\r\n    {Code:'A1D002',ShortName:'A2 Desig', Name:'A2 Design', Postcode: 'BP127HT', Balance: '174.00', OnHold: 'No', CreditLimit: '60000', availableCredit: '59826' },\r\n    {Code:'A1D003',ShortName:'A2 Desig', Name:'A2 Design', Postcode: 'BP127HT', Balance: '16364.99', OnHold: 'No'},\r\n    {Code:'ABS001',ShortName:'ABS Gara', Name:'ABS Garage', Postcode: 'NE311VB', Balance: '2368.16', OnHold: 'No'},\r\n    {Code:'ASB002',ShortName:'ABS Shop', Name:'ABS Garage', Postcode: 'NE311VB', Balance: '0.00', OnHold: 'No'}\r\n]\r\n\r\nconst SalesPayment: React.FC<{}> = () => {\r\n    const classes = useStyles();\r\n    const [code, setCode] = React.useState('');\r\n    const [shortName, setShortName] = React.useState('');\r\n    const [postcode, setPostcode] = React.useState('');\r\n    const [creditLimit, setCreditLimit] = React.useState('');\r\n    const [balance, setBalance] = React.useState('');\r\n    const [bankAccount, setBankAccount] = React.useState('');\r\n    const [chequeCurrency, setChequeCurrency] = React.useState('');\r\n    const [settlementDiscount, setSettlementDiscount] = React.useState('');\r\n    const [chequeValue, setChequeValue] = React.useState('');\r\n\r\n    const setCustomerData = (customer:any, value: string) => {\r\n        setCode(customer.Code||'');\r\n        setShortName(customer.ShortName||'');\r\n        setPostcode(customer.Postcode||'');\r\n        setCreditLimit(customer.CreditLimit||'');\r\n        setBalance(customer.Balance||'');\r\n    }\r\n\r\n    const handleBankAccountChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let value = event.target.value;\r\n        if(value === '') return;\r\n        console.log(value);\r\n        setBankAccount(value||'');\r\n    };\r\n\r\n    const handleCodeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let value = event.target.value;\r\n        if(value === '') return;\r\n        let customer = customerData.find(row => row.Code === value);\r\n        if(customer === undefined) return;\r\n        setCustomerData(customer, value);\r\n    };\r\n    \r\n    const handleShortNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let value = event.target.value;\r\n        if(value === '') return;\r\n        let customer = customerData.find(row => row.ShortName === value);\r\n        if(customer === undefined) return;\r\n        setCustomerData(customer, value);\r\n    };\r\n\r\n    const handlePostcodeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let value = event.target.value;\r\n        if(value === '') return;\r\n        let customer = customerData.find(row => row.Postcode === value);\r\n        if(customer === undefined) return;\r\n        setCustomerData(customer, value);\r\n    };\r\n    \r\n    const reset = () => {\r\n        setCode( '');\r\n        setShortName( '');\r\n        setCreditLimit('');\r\n        setPostcode( '');\r\n        setBalance( '');\r\n        setBankAccount('');\r\n        setChequeCurrency('');\r\n        setSettlementDiscount('');\r\n        setChequeValue('');\r\n    }\r\n    const save = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        alert(\"Saved!\");\r\n        reset();\r\n    }\r\n\r\n    const clear = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        alert(\"Cleared!\");\r\n        reset();\r\n    }\r\n    \r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid container justify='center'>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h5\" component=\"h5\" align='center' style={{padding:'10px',fontWeight: 'bold'}}>\r\n                SALES PAYMENT\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n              <Paper className={classes.paper} elevation={0} variant='outlined'>\r\n                <Typography variant=\"h6\" component=\"h6\" align='left'>\r\n                    Bank account details\r\n                </Typography>\r\n                <TextField \r\n                    id=\"bank-account\" \r\n                    select\r\n                    label=\"Bank account\" \r\n                    variant=\"filled\"\r\n                    size=\"small\"\r\n                    value={bankAccount}\r\n                    onChange={handleBankAccountChange}\r\n                    style={{width:'60ch'}}\r\n                >\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell size=\"small\">Code</TableCell>\r\n                            <TableCell align=\"right\" size=\"small\">Account description</TableCell> \r\n                            <TableCell align=\"right\" size=\"small\">Short Code</TableCell> \r\n                            <TableCell align=\"right\" size=\"small\">Account Number</TableCell> \r\n                        </TableRow>\r\n                    </TableHead>\r\n                    {bankData.map((option) => (\r\n                        <MenuItem key={option.Code} value={option.Code} style={{padding:0,display: \"table-row-group\"}}>\r\n                            <TableRow key={option.Code}>\r\n                                <TableCell size=\"small\">{option.Code}</TableCell>\r\n                                <TableCell align=\"right\" size=\"small\">{option.AccountDescription}</TableCell>\r\n                                <TableCell align=\"right\" size=\"small\">{option.ShortCode}</TableCell>\r\n                                <TableCell align=\"right\" size=\"small\">{option.AccountNumber}</TableCell>\r\n                            </TableRow>\r\n                        </MenuItem>\r\n                    ))}\r\n                </TextField>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={8}>\r\n            <Paper className={classes.paper} elevation={0} variant='outlined'>\r\n                <Typography variant=\"h6\" component=\"h6\" align='left'>\r\n                    Customer details\r\n                </Typography>\r\n                <form className={classes.form} noValidate autoComplete=\"off\">\r\n                    <Grid item xs={6}>\r\n                        <TextField \r\n                            id=\"code\" \r\n                            select label=\"Code\" \r\n                            variant=\"filled\"\r\n                            size=\"small\"\r\n                            value={code}\r\n                            onChange={handleCodeChange}\r\n                        >\r\n                            {customerData.map((option) => (\r\n                                <MenuItem key={option.Code} value={option.Code}>\r\n                                    {option.Code}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n                        <TextField \r\n                            id=\"short-name\" \r\n                            select label=\"Short Name\" \r\n                            variant=\"filled\" \r\n                            size=\"small\" \r\n                            value={shortName}\r\n                            onChange={handleShortNameChange}>\r\n                            {customerData.map((option) => (\r\n                                <MenuItem key={option.ShortName} value={option.ShortName}>\r\n                                    {option.ShortName}\r\n                                </MenuItem>\r\n                            ))}                                \r\n                        </TextField>\r\n                        <TextField \r\n                            id=\"postcode\" \r\n                            select \r\n                            label=\"Postcode\"\r\n                            variant=\"filled\"\r\n                            size=\"small\"\r\n                            value={postcode}\r\n                            onChange={handlePostcodeChange}>\r\n                            {customerData.map((option) => (\r\n                                <MenuItem key={option.Postcode} value={option.Postcode}>\r\n                                    {option.Postcode}\r\n                                </MenuItem>\r\n                            ))} \r\n                        </TextField>   \r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                            label=\"Credit limit\"\r\n                            id=\"credit-limit\"\r\n                            InputProps={{\r\n                                startAdornment: <InputAdornment position='start'>£</InputAdornment>,\r\n                            }}\r\n                            variant=\"filled\"\r\n                            size=\"small\"\r\n                            value={creditLimit}\r\n                            />\r\n                        <TextField\r\n                            label=\"Balance\"\r\n                            id=\"balance\"\r\n                            InputProps={{\r\n                                startAdornment: <InputAdornment position='start'>£</InputAdornment>,\r\n                            }}\r\n                            variant=\"filled\"\r\n                            size=\"small\"\r\n                            value={balance}\r\n                        />                        \r\n                    </Grid>\r\n                </form>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Paper className={classes.paper} elevation={0} variant='outlined'>\r\n                <Typography variant=\"h6\" component=\"h6\" align='left'>\r\n                    Transaction details\r\n                </Typography>\r\n                <form className={classes.form} noValidate autoComplete=\"off\">\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            id=\"date\"\r\n                            label=\"Date\"\r\n                            type=\"date\"\r\n                            defaultValue=\"2017-05-24\"\r\n                            variant=\"filled\"\r\n                            size=\"small\"/>\r\n                        <TextField\r\n                            id=\"reference\"\r\n                            label=\"Reference\"\r\n                            variant=\"filled\"\r\n                            size=\"small\"/>   \r\n                        <TextField\r\n                            id=\"sec-reference\"\r\n                            label=\"Second ref\"\r\n                            variant=\"filled\"\r\n                            size=\"small\"/>\r\n                    </Grid>\r\n                </form>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Paper className={classes.paper} elevation={0} variant='outlined'>\r\n                <Typography variant=\"h6\" component=\"h6\" align='left'>\r\n                    Payment details\r\n                </Typography>\r\n                <form className={classes.form} noValidate autoComplete=\"off\">\r\n                    <Grid item xs={4}>\r\n                        <TextField \r\n                            id=\"cheque-currency\" \r\n                            select\r\n                            label=\"Cheque currency\" \r\n                            variant=\"filled\"\r\n                            size=\"small\"\r\n                            value={chequeCurrency}\r\n                            onChange={(e) => setChequeCurrency(e.target.value) }\r\n                            >\r\n                            <MenuItem key={'EUR'} value={'EUR'}>\r\n                                    {'EUR'}\r\n                            </MenuItem>\r\n                            <MenuItem key={'USD'} value={'USD'}>\r\n                                    {'USD'}\r\n                            </MenuItem>\r\n                        </TextField>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <TextField\r\n                            label=\"Settlement discount\"\r\n                            id=\"settlement-discount\"\r\n                            InputProps={{\r\n                                startAdornment: <InputAdornment position='start'>£</InputAdornment>,\r\n                            }}\r\n                            variant=\"filled\"\r\n                            size=\"small\"\r\n                            value={settlementDiscount}\r\n                            onChange={(e) => setSettlementDiscount(e.target.value) }\r\n                            />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <TextField\r\n                            label=\"Cheque value\"\r\n                            id=\"cheque-value\"\r\n                            InputProps={{\r\n                                startAdornment: <InputAdornment position='start'>£</InputAdornment>,\r\n                            }}\r\n                            variant=\"filled\"\r\n                            size=\"small\"\r\n                            value={chequeValue}\r\n                            onChange={(e) => setChequeValue(e.target.value) }\r\n                        />                      \r\n                    </Grid>\r\n                </form>\r\n            </Paper>\r\n          </Grid>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            startIcon={<SaveIcon />}\r\n            style={{margin:'10px',marginBottom:'20px'}}\r\n            onClick={save}\r\n          >Save</Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            startIcon={<ClearIcon />}\r\n            style={{margin:'10px',marginBottom:'20px'}}\r\n            onClick={clear}\r\n          >Clear</Button>\r\n        </Grid>\r\n      </div>\r\n    );\r\n}\r\nexport default SalesPayment","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\enter-transactions\\inter-bank-transfer\\index.tsx",["1222","1223","1224","1225","1226","1227","1228","1229","1230","1231","1232","1233","1234","1235"],"import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  createStyles,\r\n  makeStyles,\r\n  Theme,\r\n  withStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"date-fns\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\n\r\nconst BootstrapInput = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    input: {\r\n      borderRadius: 4,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"7px 26px 7px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"-apple-system\",\r\n        \"BlinkMacSystemFont\",\r\n        '\"Segoe UI\"',\r\n        \"Roboto\",\r\n        '\"Helvetica Neue\"',\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n        '\"Apple Color Emoji\"',\r\n        '\"Segoe UI Emoji\"',\r\n        '\"Segoe UI Symbol\"',\r\n      ].join(\",\"),\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#80bdff\",\r\n        boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n      },\r\n    },\r\n  })\r\n)(InputBase);\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    NominalVatableReceipt: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    NVtitle: {\r\n      fontSize: \"20px\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    NVFieldWrapper: {\r\n      padding: \"10px 0\",\r\n    },\r\n    NVlabel: {\r\n      lineHeight: \"30px\",\r\n      paddingRight: theme.spacing(2),\r\n    },\r\n    NVformWrapper: {\r\n      paddingTop: theme.spacing(2),\r\n    },\r\n    NVtable: {\r\n      width: \"100%\",\r\n    },\r\n    buttonWrapper: {\r\n      margin: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\n// table info\r\nfunction createData(\r\n  code: number,\r\n  cc: string,\r\n  department: string,\r\n  name: string,\r\n  reference: string,\r\n  narrative: string,\r\n  transition: number,\r\n  transda: string,\r\n  grossvalue: number,\r\n  vatco: number,\r\n  rate: number,\r\n  goodval: string,\r\n  vatvalue: number\r\n) {\r\n  return {\r\n    code,\r\n    cc,\r\n    department,\r\n    name,\r\n    reference,\r\n    narrative,\r\n    transition,\r\n    transda,\r\n    grossvalue,\r\n    vatco,\r\n    rate,\r\n    goodval,\r\n    vatvalue,\r\n  };\r\n}\r\n\r\nconst rows = [\r\n  createData(\r\n    1011,\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    1234,\r\n    \"dummy\",\r\n    123,\r\n    123,\r\n    123,\r\n    \"dummy\",\r\n    123\r\n  ),\r\n];\r\nconst InterBankTransfer: React.FC<{}> = () => {\r\n  const [selectedDate, setSelectedDate] = React.useState<Date | null>(\r\n    new Date()\r\n  );\r\n\r\n  const handleDateChange = (date: Date | null) => {\r\n    setSelectedDate(date);\r\n  };\r\n  const classes = useStyles();\r\n  const [bankaccount, setBankaccount] = React.useState(\"\");\r\n  const handleChange = (\r\n    event: React.ChangeEvent<{\r\n      value: unknown;\r\n    }>\r\n  ) => {\r\n    setBankaccount(event.target.value as string);\r\n  };\r\n  return (\r\n    <div className={classes.NominalVatableReceipt}>\r\n      <Grid container spacing={3}>\r\n        <Grid item lg={12}>\r\n          <Typography className={classes.NVtitle}>Account Selection</Typography>\r\n          <div className={classes.NVformWrapper}>\r\n            <form>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Payment account</label>\r\n                <NativeSelect\r\n                  id=\"demo-customized-select-native\"\r\n                  value={bankaccount}\r\n                  onChange={handleChange}\r\n                  input={<BootstrapInput />}\r\n                >\r\n                  <option aria-label=\"None\" value=\"\" />\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </NativeSelect>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n              <label className={classes.NVlabel}>Balance :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n             \r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Receipt account</label>\r\n                <NativeSelect\r\n                  id=\"demo-customized-select-native\"\r\n                  value={bankaccount}\r\n                  onChange={handleChange}\r\n                  input={<BootstrapInput />}\r\n                >\r\n                  <option aria-label=\"None\" value=\"\" />\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </NativeSelect>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n\r\n              </div>\r\n              <label className={classes.NVlabel}>Balance :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item lg={12}>\r\n          <Typography className={classes.NVtitle}>\r\n            Transfer Details\r\n          </Typography>\r\n          <div className={classes.NVformWrapper}>\r\n            <form>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Description :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                <label className={classes.NVlabel}>Payment Value :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Transfer Date :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Refference :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Second Refference :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Button variant=\"contained\" className={classes.buttonWrapper}>\r\n          Clear\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.buttonWrapper}\r\n        >\r\n          Save\r\n        </Button>\r\n        <Button variant=\"contained\" className={classes.buttonWrapper}>\r\n          Save & Allocate\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.buttonWrapper}\r\n        >\r\n          Close\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InterBankTransfer;\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\enter-transactions\\purchase-receipt\\index.tsx",["1236","1237","1238","1239","1240","1241","1242"],"import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  createStyles,\r\n  makeStyles,\r\n  Theme,\r\n  withStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\n\r\nconst BootstrapInput = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    input: {\r\n      borderRadius: 4,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"7px 26px 7px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"-apple-system\",\r\n        \"BlinkMacSystemFont\",\r\n        '\"Segoe UI\"',\r\n        \"Roboto\",\r\n        '\"Helvetica Neue\"',\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n        '\"Apple Color Emoji\"',\r\n        '\"Segoe UI Emoji\"',\r\n        '\"Segoe UI Symbol\"',\r\n      ].join(\",\"),\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#80bdff\",\r\n        boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n      },\r\n    },\r\n  })\r\n)(InputBase);\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    NominalVatableReceipt: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    NVtitle: {\r\n      fontSize: \"20px\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    NVFieldWrapper: {\r\n      padding: \"10px 0\",\r\n    },\r\n    NVlabel: {\r\n      lineHeight: \"30px\",\r\n      paddingRight: theme.spacing(2),\r\n    },\r\n    NVformWrapper: {\r\n      paddingTop: theme.spacing(2),\r\n    },\r\n    NVtable: {\r\n      width: \"100%\",\r\n    },\r\n    buttonWrapper: {\r\n      margin: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\n// table info\r\nfunction createData(\r\n  code: number,\r\n  cc: string,\r\n  department: string,\r\n  name: string,\r\n  reference: string,\r\n  narrative: string,\r\n  transition: number,\r\n  transda: string,\r\n  grossvalue: number,\r\n  vatco: number,\r\n  rate: number,\r\n  goodval: string,\r\n  vatvalue: number\r\n) {\r\n  return {\r\n    code,\r\n    cc,\r\n    department,\r\n    name,\r\n    reference,\r\n    narrative,\r\n    transition,\r\n    transda,\r\n    grossvalue,\r\n    vatco,\r\n    rate,\r\n    goodval,\r\n    vatvalue,\r\n  };\r\n}\r\n\r\nconst rows = [\r\n  createData(\r\n    1011,\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    1234,\r\n    \"dummy\",\r\n    123,\r\n    123,\r\n    123,\r\n    \"dummy\",\r\n    123\r\n  ),\r\n];\r\nconst PurchaseRecept: React.FC<{}> = () => {\r\n  const [selectedDate, setSelectedDate] = React.useState<Date | null>(\r\n    new Date()\r\n  );\r\n\r\n  const handleDateChange = (date: Date | null) => {\r\n    setSelectedDate(date);\r\n  };\r\n  const classes = useStyles();\r\n  const [bankaccount, setBankaccount] = React.useState(\"\");\r\n  const handleChange = (\r\n    event: React.ChangeEvent<{\r\n      value: unknown;\r\n    }>\r\n  ) => {\r\n    setBankaccount(event.target.value as string);\r\n  };\r\n  return (\r\n    <div className={classes.NominalVatableReceipt}>\r\n      <Grid container spacing={3}>\r\n\r\n        <Grid item lg={12}>\r\n          <Typography className={classes.NVtitle}>\r\n            Bank Account Details\r\n          </Typography>\r\n          <div className={classes.NVformWrapper}>\r\n            <form>\r\n\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Bank account</label>\r\n                <NativeSelect\r\n                  id=\"demo-customized-select-native\"\r\n                  value={bankaccount}\r\n                  onChange={handleChange}\r\n                  input={<BootstrapInput />}\r\n                >\r\n                  <option aria-label=\"None\" value=\"\" />\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </NativeSelect>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item lg={12}>\r\n          <Typography className={classes.NVtitle}>Customer Details</Typography>\r\n          <div className={classes.NVformWrapper}>\r\n            <form>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Code :</label>\r\n                <NativeSelect\r\n                  id=\"demo-customized-select-native\"\r\n                  value={bankaccount}\r\n                  onChange={handleChange}\r\n                  input={<BootstrapInput />}\r\n                >\r\n                  <option aria-label=\"None\" value=\"\" />\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </NativeSelect>\r\n                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                <label className={classes.NVlabel}>Credit Limit :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                <label className={classes.NVlabel}>Date :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Short name :</label>\r\n                <NativeSelect\r\n                  id=\"demo-customized-select-native\"\r\n                  value={bankaccount}\r\n                  onChange={handleChange}\r\n                  input={<BootstrapInput />}\r\n                >\r\n                  <option aria-label=\"None\" value=\"\" />\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </NativeSelect>\r\n                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                <label className={classes.NVlabel}>Balencr :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                <label className={classes.NVlabel}>Reference :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n              \r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Post Code :</label>\r\n                <NativeSelect\r\n                  id=\"demo-customized-select-native\"\r\n                  value={bankaccount}\r\n                  onChange={handleChange}\r\n                  input={<BootstrapInput />}\r\n                >\r\n                  <option aria-label=\"None\" value=\"\" />\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </NativeSelect>\r\n                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                <label className={classes.NVlabel}>Second Reference :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item lg={12}>\r\n          <Typography className={classes.NVtitle}>Receipt Details</Typography>\r\n          <div className={classes.NVformWrapper}>\r\n            <form>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Check curency :</label>\r\n                <NativeSelect\r\n                  id=\"demo-customized-select-native\"\r\n                  value={bankaccount}\r\n                  onChange={handleChange}\r\n                  input={<BootstrapInput />}\r\n                >\r\n                  <option aria-label=\"None\" value=\"\" />\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </NativeSelect>\r\n                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                <label className={classes.NVlabel}>Chaque Value :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Sattelment Amount :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n             </form>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Button variant=\"contained\" className={classes.buttonWrapper}>\r\n          Clear\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.buttonWrapper}\r\n        >\r\n          Save\r\n        </Button>\r\n        <Button variant=\"contained\" className={classes.buttonWrapper}>\r\n          Save & Allocate\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.buttonWrapper}\r\n        >\r\n          Close\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PurchaseRecept;\r\n\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\create-amend-accounts\\amend-bank-account-details\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-list\\nominal-option.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\create-and-amend-accounts\\create-new-nominal-account\\AnalysisCode.tsx",["1243"],"import React from \"react\"\r\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography/Typography'\r\nconst useStyles = makeStyles((theme : Theme) => createStyles({\r\n    root: {\r\n         \r\n            margin: theme.spacing(1),\r\n            width: '100%'\r\n        },\r\n}),);\r\n\r\nconst AnalysisCode: React.FC<{}> = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <React.Fragment>\r\n            <div className={classes.root}>\r\n             \r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default AnalysisCode","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-enquiries\\nominal-account-enquiry\\nominal-deferred-table1.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-enquiries\\nominal-current-transaction-enquiry\\table2.tsx",["1244"],"E:\\sage_clone\\jan_warehouse\\src\\components\\page-internal-header\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\bank-account-enquiry\\Attachments.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\bank-account-enquiry\\Contact.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\create-amend-accounts\\create-bank-account\\EBanking.tsx",["1245","1246","1247"],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\create-amend-accounts\\create-bank-account\\Memos.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\create-amend-accounts\\amend-bank-account-details\\Attachments.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\account-analysis\\list-of-accounts\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\PurchaseOrderList\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\PurchaseOrderList\\PurchaseOrderList.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\PurchaseOrderList\\PurchaseOrderOptions.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\index.tsx",[],["1248","1249"],"E:\\sage_clone\\jan_warehouse\\src\\utils\\history.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\dashboard.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\summaries\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\components\\copyright-footer\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\bank-account\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\summaries\\purchases\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-enquiries\\nominal-current-transaction-enquiry\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\enter-transactions\\previous-year-journal-entry\\index.tsx",["1250","1251","1252","1253","1254"],"import React from \"react\"\r\nimport Grid from '@material-ui/core/Grid'\r\nimport {createStyles, makeStyles, Theme, withStyles} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker} from '@material-ui/pickers';\r\n\r\nconst BootstrapInput = withStyles((theme : Theme) => createStyles({\r\n    input: {\r\n        borderRadius: 4,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '1px solid #ced4da',\r\n        fontSize: 16,\r\n        padding: '7px 26px 7px 12px',\r\n        transition: theme\r\n            .transitions\r\n            .create(['border-color', 'box-shadow']),\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"'\r\n        ].join(','),\r\n        '&:focus': {\r\n            borderRadius: 4,\r\n            borderColor: '#80bdff',\r\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)'\r\n        }\r\n    }\r\n}),)(InputBase);\r\n\r\nconst useStyles = makeStyles((theme : Theme) => createStyles({\r\n    NominalVatableReceipt: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    NVtitle: {\r\n        fontSize: '20px',\r\n        fontWeight: 'bold'\r\n    },\r\n    NVFieldWrapper: {\r\n        padding: '10px 0'\r\n    },\r\n    NVlabel: {\r\n        lineHeight: '30px',\r\n        paddingRight: theme.spacing(2)\r\n    },\r\n    NVformWrapper: {\r\n        paddingTop: theme.spacing(2)\r\n    },\r\n    NVtable: {\r\n        width: '100%'\r\n    }\r\n}),)\r\n\r\n// table info\r\nfunction createData(code : number, cc : string, department : string, name : string, reference : string, narrative : string, transition : number, transda : string, grossvalue : number, vatco : number, rate : number, goodval : string, vatvalue : number) {\r\n    return {\r\n        code,\r\n        cc,\r\n        department,\r\n        name,\r\n        reference,\r\n        narrative,\r\n        transition,\r\n        transda,\r\n        grossvalue,\r\n        vatco,\r\n        rate,\r\n        goodval,\r\n        vatvalue\r\n    };\r\n}\r\n\r\nconst rows = [createData(1011, 'dummy', 'dummy', 'dummy', 'dummy', 'dummy', 1234, 'dummy', 123, 123, 123, 'dummy', 123)];\r\nconst PreviousYearJournalEntry : React.FC < {} > = () => {\r\n    const [selectedDate,\r\n        setSelectedDate] = React.useState < Date | null > (new Date(),);\r\n\r\n    const handleDateChange = (date : Date | null) => {\r\n        setSelectedDate(date);\r\n    };\r\n    const classes = useStyles();\r\n    const [bankaccount,\r\n        setBankaccount] = React.useState('');\r\n    const handleChange = (event : React.ChangeEvent < {\r\n        value: unknown\r\n    } >) => {\r\n        setBankaccount(event.target.value as string);\r\n    };\r\n    return (\r\n        <div className={classes.NominalVatableReceipt}>\r\n            <Grid container spacing={3}>\r\n                <Grid item lg={12}>\r\n                    <Typography className={classes.NVtitle}>Header Details</Typography>\r\n                    <div className={classes.NVformWrapper}>\r\n                        <form>\r\n                            <div className={classes.NVFieldWrapper}>\r\n                            <label className={classes.NVlabel}>Journel Title :</label>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                            </div>\r\n                            <div className={classes.NVFieldWrapper}>\r\n                            <label className={classes.NVlabel}>Journel Refference :</label>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                            </div>\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                    <label\r\n                                        style={{\r\n                                        lineHeight: '55px'\r\n                                    }}>Journal Posting Date :</label>\r\n                                    <KeyboardDatePicker\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-dialog\"\r\n                                        format=\"MM/dd/yyyy\"\r\n                                        value={selectedDate}\r\n                                        onChange={handleDateChange}\r\n                                        KeyboardButtonProps={{\r\n                                        'aria-label': 'change date'\r\n                                    }}/></MuiPickersUtilsProvider>\r\n                        </form>\r\n                    </div>\r\n                </Grid>\r\n        \r\n                <Grid item lg={12}>\r\n                    <Typography className={classes.NVtitle}>Journal Transactions</Typography>\r\n                    <TableContainer component={Paper}>\r\n                        <Table className={classes.NVtable} aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Code</TableCell>\r\n                                    <TableCell align=\"right\">CC</TableCell>\r\n                                    <TableCell align=\"right\">Dept</TableCell>\r\n                                    <TableCell align=\"right\">Name</TableCell>\r\n                                    <TableCell align='right'>Narrative</TableCell>\r\n                                    <TableCell align='right'>Transaction An</TableCell>\r\n                                    <TableCell align='right'>Debit</TableCell>\r\n                                    <TableCell align='right'>Credit</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {rows.map((row) => (\r\n                                    <TableRow key={row.name}>\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {row.name}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">{row.code}</TableCell>\r\n                                        <TableCell align=\"right\">{row.cc}</TableCell>\r\n                                        <TableCell align=\"right\">{row.department}</TableCell>\r\n                                        <TableCell align=\"right\">{row.name}</TableCell>\r\n                                        <TableCell align=\"right\">{row.reference}</TableCell>\r\n                                        <TableCell align=\"right\">{row.narrative}</TableCell>\r\n                                        <TableCell align=\"right\">{row.transition}</TableCell>\r\n                                        <TableCell align=\"right\">{row.transda}</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreviousYearJournalEntry\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-reports\\direct-debit-and-standing-order-due\\index.tsx",["1255","1256","1257","1258","1259","1260","1261"],"import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  createStyles,\r\n  makeStyles,\r\n  Theme,\r\n  withStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"date-fns\";\r\nimport { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\r\n\r\nconst BootstrapInput = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    input: {\r\n      borderRadius: 4,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"7px 26px 7px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"-apple-system\",\r\n        \"BlinkMacSystemFont\",\r\n        '\"Segoe UI\"',\r\n        \"Roboto\",\r\n        '\"Helvetica Neue\"',\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n        '\"Apple Color Emoji\"',\r\n        '\"Segoe UI Emoji\"',\r\n        '\"Segoe UI Symbol\"',\r\n      ].join(\",\"),\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#80bdff\",\r\n        boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n      },\r\n    },\r\n  })\r\n)(InputBase);\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    NominalVatableReceipt: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    NVtitle: {\r\n      fontSize: \"20px\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    NVFieldWrapper: {\r\n      padding: \"10px 0\",\r\n    },\r\n    NVlabel: {\r\n      lineHeight: \"30px\",\r\n      paddingRight: theme.spacing(2),\r\n    },\r\n    NVformWrapper: {\r\n      paddingTop: theme.spacing(2),\r\n    },\r\n    NVtable: {\r\n      width: \"100%\",\r\n    },\r\n    buttonWrapper: {\r\n      margin: theme.spacing(3),\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 400,\r\n    },\r\n  })\r\n);\r\n\r\n// table info\r\nfunction createData(\r\n  code: number,\r\n  cc: string,\r\n  department: string,\r\n  name: string,\r\n  reference: string,\r\n  narrative: string,\r\n  transition: number,\r\n  transda: string,\r\n  grossvalue: number,\r\n  vatco: number,\r\n  rate: number,\r\n  goodval: string,\r\n  vatvalue: number\r\n) {\r\n  return {\r\n    code,\r\n    cc,\r\n    department,\r\n    name,\r\n    reference,\r\n    narrative,\r\n    transition,\r\n    transda,\r\n    grossvalue,\r\n    vatco,\r\n    rate,\r\n    goodval,\r\n    vatvalue,\r\n  };\r\n}\r\n\r\nconst rows = [\r\n  createData(\r\n    1011,\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    1234,\r\n    \"dummy\",\r\n    123,\r\n    123,\r\n    123,\r\n    \"dummy\",\r\n    123\r\n  ),\r\n];\r\nconst DirectDebitAndStandingOrderDue: React.FC<{}> = () => {\r\n  const [selectedDate, setSelectedDate] = React.useState<Date | null>(\r\n    new Date()\r\n  );\r\n\r\n  const handleDateChange = (date: Date | null) => {\r\n    setSelectedDate(date);\r\n  };\r\n  const classes = useStyles();\r\n  const [bankaccount, setBankaccount] = React.useState(\"\");\r\n  const handleChange = (\r\n    event: React.ChangeEvent<{\r\n      value: unknown;\r\n    }>\r\n  ) => {\r\n    setBankaccount(event.target.value as string);\r\n  };\r\n  return (\r\n    <div className={classes.NominalVatableReceipt}>\r\n      <Grid container spacing={3}>\r\n        <Grid item lg={12}>\r\n          <Typography className={classes.NVtitle}>Critarial values</Typography>\r\n          <div className={classes.NVformWrapper}>\r\n            <form>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>A/C ref</label>\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    onChange={handleChange}\r\n                    label=\"Age\"\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={10}>Ten</MenuItem>\r\n                    <MenuItem value={20}>Twenty</MenuItem>\r\n                    <MenuItem value={30}>Thirty</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Transection type</label>\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    onChange={handleChange}\r\n                    label=\"Age\"\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={10}>Ten</MenuItem>\r\n                    <MenuItem value={20}>Twenty</MenuItem>\r\n                    <MenuItem value={30}>Thirty</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Document type</label>\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    onChange={handleChange}\r\n                    label=\"Age\"\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={10}>Ten</MenuItem>\r\n                    <MenuItem value={20}>Twenty</MenuItem>\r\n                    <MenuItem value={30}>Thirty</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item lg={12}>\r\n          <div className={classes.NVformWrapper}>\r\n            <form>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Preview a simple report for a specified no of record or transection (0 for all) :</label>\r\n                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  type=\"number\"\r\n                />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Button variant=\"contained\" className={classes.buttonWrapper}>\r\n          Help\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.buttonWrapper}\r\n        >\r\n          Save\r\n        </Button>\r\n        <Button variant=\"contained\" className={classes.buttonWrapper}>\r\n          Load\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.buttonWrapper}\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DirectDebitAndStandingOrderDue;\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\create-amend-accounts\\create-customer\\panels\\attachments.tsx",["1262"],"import React, { useState } from \"react\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport BottomDrower from \"../../../../../../components/bottom-navigation\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n    modal: {\r\n      width: 400,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"2px solid #000\",\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n    heading: {\r\n      paddingLeft: theme.spacing(1),\r\n      paddingRight: theme.spacing(1),\r\n    },\r\n  })\r\n);\r\n\r\nconst Attachments: React.FC<{}> = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={12} sm={6}>\r\n          <h3 className={classes.heading}>Attachments</h3>\r\n          <Grid item xs={12} md={12} sm={12}>\r\n            <TableContainer component={Paper}>\r\n              <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>File Name</TableCell>\r\n                    <TableCell>Description</TableCell>\r\n                    <TableCell align=\"right\">Status</TableCell>\r\n                    <TableCell align=\"right\">File type</TableCell>\r\n                    <TableCell align=\"right\">File size</TableCell>\r\n                    <TableCell align=\"right\">Date time modified</TableCell>\r\n                    <TableCell align=\"right\">Link</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  <TableRow key={\"row.name\"}>\r\n                    <TableCell>Test file</TableCell>\r\n                    <TableCell>Description</TableCell>\r\n                    <TableCell align=\"right\">saved</TableCell>\r\n                    <TableCell align=\"right\">pdf</TableCell>\r\n                    <TableCell align=\"right\">456 M</TableCell>\r\n                    <TableCell align=\"right\">15 Jan 21</TableCell>\r\n                    <TableCell align=\"right\">Link</TableCell>\r\n                  </TableRow>\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} md={12} sm={12}>\r\n          <BottomDrower>\r\n            <div></div>\r\n            <div>\r\n              <Button variant=\"contained\">Add File</Button>\r\n              <Button variant=\"contained\" color=\"primary\">\r\n                Add Link\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\">\r\n                Add Folder\r\n              </Button>\r\n            </div>\r\n          </BottomDrower>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default Attachments;\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\create-amend-accounts\\create-customer\\panels\\modals\\add-contacts.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\cash-position\\why-do-we-owe-most-option.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-enquiries\\nominal-transaction-enquiry\\form.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\create-and-amend-accounts\\amend-nominal-account-details\\Account.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\bank-account-enquiry\\CustomerListTable.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\enter-transactions\\nominal-non-vatable-payment\\index.tsx",["1263"],"import React from \"react\"\r\nimport Grid from '@material-ui/core/Grid'\r\nimport {createStyles, makeStyles, Theme, withStyles} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker} from '@material-ui/pickers';\r\n\r\nconst BootstrapInput = withStyles((theme : Theme) => createStyles({\r\n    input: {\r\n        borderRadius: 4,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '1px solid #ced4da',\r\n        fontSize: 16,\r\n        padding: '7px 26px 7px 12px',\r\n        transition: theme\r\n            .transitions\r\n            .create(['border-color', 'box-shadow']),\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"'\r\n        ].join(','),\r\n        '&:focus': {\r\n            borderRadius: 4,\r\n            borderColor: '#80bdff',\r\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)'\r\n        }\r\n    }\r\n}),)(InputBase);\r\n\r\nconst useStyles = makeStyles((theme : Theme) => createStyles({\r\n    NominalVatableReceipt: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    NVtitle: {\r\n        fontSize: '20px',\r\n        fontWeight: 'bold'\r\n    },\r\n    NVFieldWrapper: {\r\n        padding: '10px 0'\r\n    },\r\n    NVlabel: {\r\n        lineHeight: '30px',\r\n        paddingRight: theme.spacing(2)\r\n    },\r\n    NVformWrapper: {\r\n        paddingTop: theme.spacing(2)\r\n    },\r\n    NVtable: {\r\n        width: '100%'\r\n    }\r\n}),)\r\n\r\n// table info\r\nfunction createData(code : number, cc : string, department : string, name : string, reference : string, narrative : string, transition : number, transda : string, grossvalue : number, vatco : number, rate : number, goodval : string, vatvalue : number) {\r\n    return {\r\n        code,\r\n        cc,\r\n        department,\r\n        name,\r\n        reference,\r\n        narrative,\r\n        transition,\r\n        transda,\r\n        grossvalue,\r\n        vatco,\r\n        rate,\r\n        goodval,\r\n        vatvalue\r\n    };\r\n}\r\n\r\nconst rows = [createData(1011, 'dummy', 'dummy', 'dummy', 'dummy', 'dummy', 1234, 'dummy', 123, 123, 123, 'dummy', 123)];\r\nconst NominalNonVatablePayment : React.FC < {} > = () => {\r\n    const [selectedDate,\r\n        setSelectedDate] = React.useState < Date | null > (new Date(),);\r\n\r\n    const handleDateChange = (date : Date | null) => {\r\n        setSelectedDate(date);\r\n    };\r\n    const classes = useStyles();\r\n    const [bankaccount,\r\n        setBankaccount] = React.useState('');\r\n    const handleChange = (event : React.ChangeEvent < {\r\n        value: unknown\r\n    } >) => {\r\n        setBankaccount(event.target.value as string);\r\n    };\r\n    return (\r\n        <div className={classes.NominalVatableReceipt}>\r\n            <Grid container spacing={3}>\r\n                <Grid item lg={12}>\r\n                    <Typography className={classes.NVtitle}>Bank</Typography>\r\n                    <div className={classes.NVformWrapper}>\r\n                        <form>\r\n                            <div className={classes.NVFieldWrapper}>\r\n                                <label className={classes.NVlabel}>Bank Account</label>\r\n                                <NativeSelect\r\n                                    id=\"demo-customized-select-native\"\r\n                                    value={bankaccount}\r\n                                    onChange={handleChange}\r\n                                    input={< BootstrapInput />}>\r\n                                    <option aria-label=\"None\" value=\"\"/>\r\n                                    <option value={10}>Ten</option>\r\n                                    <option value={20}>Twenty</option>\r\n                                    <option value={30}>Thirty</option>\r\n                                </NativeSelect>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                            </div>\r\n                            <div className={classes.NVFieldWrapper}>\r\n                                <label className={classes.NVlabel}>Account Type :</label>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                                &nbsp; &nbsp;\r\n                                <label className={classes.NVlabel}>Currency :</label>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                                &nbsp; &nbsp;\r\n                                <label className={classes.NVlabel}>Exchange rate to base :</label>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item lg={12}>\r\n                    <Typography className={classes.NVtitle}>Transaction Details</Typography>\r\n                    <div className={classes.NVformWrapper}>\r\n                        <form>\r\n                            <div className={classes.NVFieldWrapper}>\r\n                                <label className={classes.NVlabel}>Cheque Number :</label>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                                <label className={classes.NVlabel}>2nd ref :</label>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                            </div>\r\n                            <div className={classes.NVFieldWrapper}>\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                    <label\r\n                                        style={{\r\n                                        lineHeight: '55px'\r\n                                    }}>Transactions Date :</label>\r\n                                    <KeyboardDatePicker\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-dialog\"\r\n                                        format=\"MM/dd/yyyy\"\r\n                                        value={selectedDate}\r\n                                        onChange={handleDateChange}\r\n                                        KeyboardButtonProps={{\r\n                                        'aria-label': 'change date'\r\n                                    }}/></MuiPickersUtilsProvider>\r\n                                &nbsp;&nbsp;\r\n                                <label className={classes.NVlabel}>Narrative :</label>\r\n                                <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item lg={12}>\r\n                    <Typography className={classes.NVtitle}>Nominal Transactions</Typography>\r\n                    <TableContainer component={Paper}>\r\n                        <Table className={classes.NVtable} aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Code</TableCell>\r\n                                    <TableCell align=\"right\">CC</TableCell>\r\n                                    <TableCell align=\"right\">Dept</TableCell>\r\n                                    <TableCell align=\"right\">Department</TableCell>\r\n                                    <TableCell align=\"right\">Name</TableCell>\r\n                                    <TableCell align=\"right\">Reference</TableCell>\r\n                                    <TableCell align='right'>Narrative</TableCell>\r\n                                    <TableCell align='right'>Transaction</TableCell>\r\n                                    <TableCell align='right'>Trans. Da</TableCell>\r\n                                    <TableCell align='right'>Gross value</TableCell>\r\n                                    <TableCell align='right'>VAT Co</TableCell>\r\n                                    <TableCell align='right'>Rate</TableCell>\r\n                                    <TableCell align='right'>Goods Val</TableCell>\r\n                                    <TableCell align='right'>VAT Value</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {rows.map((row) => (\r\n                                    <TableRow key={row.name}>\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {row.name}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">{row.code}</TableCell>\r\n                                        <TableCell align=\"right\">{row.cc}</TableCell>\r\n                                        <TableCell align=\"right\">{row.department}</TableCell>\r\n                                        <TableCell align=\"right\">{row.name}</TableCell>\r\n                                        <TableCell align=\"right\">{row.reference}</TableCell>\r\n                                        <TableCell align=\"right\">{row.narrative}</TableCell>\r\n                                        <TableCell align=\"right\">{row.transition}</TableCell>\r\n                                        <TableCell align=\"right\">{row.transda}</TableCell>\r\n                                        <TableCell align=\"right\">{row.grossvalue}</TableCell>\r\n                                        <TableCell align=\"right\">{row.vatco}</TableCell>\r\n                                        <TableCell align=\"right\">{row.rate}</TableCell>\r\n                                        <TableCell align=\"right\">{row.goodval}</TableCell>\r\n                                        <TableCell align=\"right\">{row.vatvalue}</TableCell>\r\n\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NominalNonVatablePayment\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-reports\\account-details-report\\index.tsx",["1264","1265","1266","1267","1268","1269","1270"],"import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  createStyles,\r\n  makeStyles,\r\n  Theme,\r\n  withStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"date-fns\";\r\nimport { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\r\n\r\nconst BootstrapInput = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    input: {\r\n      borderRadius: 4,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"7px 26px 7px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"-apple-system\",\r\n        \"BlinkMacSystemFont\",\r\n        '\"Segoe UI\"',\r\n        \"Roboto\",\r\n        '\"Helvetica Neue\"',\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n        '\"Apple Color Emoji\"',\r\n        '\"Segoe UI Emoji\"',\r\n        '\"Segoe UI Symbol\"',\r\n      ].join(\",\"),\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#80bdff\",\r\n        boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n      },\r\n    },\r\n  })\r\n)(InputBase);\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    NominalVatableReceipt: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    NVtitle: {\r\n      fontSize: \"20px\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    NVFieldWrapper: {\r\n      padding: \"10px 0\",\r\n    },\r\n    NVlabel: {\r\n      lineHeight: \"30px\",\r\n      paddingRight: theme.spacing(2),\r\n    },\r\n    NVformWrapper: {\r\n      paddingTop: theme.spacing(2),\r\n    },\r\n    NVtable: {\r\n      width: \"100%\",\r\n    },\r\n    buttonWrapper: {\r\n      margin: theme.spacing(3),\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 400,\r\n    },\r\n  })\r\n);\r\n\r\n// table info\r\nfunction createData(\r\n  code: number,\r\n  cc: string,\r\n  department: string,\r\n  name: string,\r\n  reference: string,\r\n  narrative: string,\r\n  transition: number,\r\n  transda: string,\r\n  grossvalue: number,\r\n  vatco: number,\r\n  rate: number,\r\n  goodval: string,\r\n  vatvalue: number\r\n) {\r\n  return {\r\n    code,\r\n    cc,\r\n    department,\r\n    name,\r\n    reference,\r\n    narrative,\r\n    transition,\r\n    transda,\r\n    grossvalue,\r\n    vatco,\r\n    rate,\r\n    goodval,\r\n    vatvalue,\r\n  };\r\n}\r\n\r\nconst rows = [\r\n  createData(\r\n    1011,\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    1234,\r\n    \"dummy\",\r\n    123,\r\n    123,\r\n    123,\r\n    \"dummy\",\r\n    123\r\n  ),\r\n];\r\nconst AccountDetailsReport: React.FC<{}> = () => {\r\n  const [selectedDate, setSelectedDate] = React.useState<Date | null>(\r\n    new Date()\r\n  );\r\n\r\n  const handleDateChange = (date: Date | null) => {\r\n    setSelectedDate(date);\r\n  };\r\n  const classes = useStyles();\r\n  const [bankaccount, setBankaccount] = React.useState(\"\");\r\n  const handleChange = (\r\n    event: React.ChangeEvent<{\r\n      value: unknown;\r\n    }>\r\n  ) => {\r\n    setBankaccount(event.target.value as string);\r\n  };\r\n  return (\r\n    <div className={classes.NominalVatableReceipt}>\r\n      <Grid container spacing={3}>\r\n        <Grid item lg={12}>\r\n          <Typography className={classes.NVtitle}>Critarial values</Typography>\r\n          <div className={classes.NVformWrapper}>\r\n            <form>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>A/C ref</label>\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    onChange={handleChange}\r\n                    label=\"Age\"\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={10}>Ten</MenuItem>\r\n                    <MenuItem value={20}>Twenty</MenuItem>\r\n                    <MenuItem value={30}>Thirty</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Curency</label>\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    onChange={handleChange}\r\n                    label=\"Age\"\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={10}>Ten</MenuItem>\r\n                    <MenuItem value={20}>Twenty</MenuItem>\r\n                    <MenuItem value={30}>Thirty</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>A/C description</label>\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    onChange={handleChange}\r\n                    label=\"Age\"\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={10}>Ten</MenuItem>\r\n                    <MenuItem value={20}>Twenty</MenuItem>\r\n                    <MenuItem value={30}>Thirty</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Active Status</label>\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    onChange={handleChange}\r\n                    label=\"Age\"\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={10}>Ten</MenuItem>\r\n                    <MenuItem value={20}>Twenty</MenuItem>\r\n                    <MenuItem value={30}>Thirty</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item lg={12}>\r\n          <div className={classes.NVformWrapper}>\r\n            <form>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Preview a simple report for a specified no of record or transection (0 for all) :</label>\r\n                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  type=\"number\"\r\n                />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Button variant=\"contained\" className={classes.buttonWrapper}>\r\n          Help\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.buttonWrapper}\r\n        >\r\n          Save\r\n        </Button>\r\n        <Button variant=\"contained\" className={classes.buttonWrapper}>\r\n          Load\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.buttonWrapper}\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountDetailsReport;\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\bank-standing-orders-and-direct-debits\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\create-and-amend-accounts\\create-new-nominal-account\\Attachment.tsx",["1271","1272"],"import React from \"react\"\r\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport {DataGrid, ColDef} from '@material-ui/data-grid';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\n\r\nconst useStyles = makeStyles((theme : Theme) => createStyles({\r\n    root: {\r\n\r\n        margin: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3)\r\n    },\r\n    accountsWrapper: {},\r\n    title: {\r\n        textAlign: 'left',\r\n        fontSize: '17px',\r\n        fontWeight: 'bold'\r\n    },\r\n    label: {\r\n        width: '15%',\r\n        fontSize: '15px',\r\n        paddingRight: theme.spacing(2),\r\n        paddingTop: theme.spacing(2)\r\n    },\r\n    inputFieldWrapper: {},\r\n    selectTab: {\r\n        borderBottom: 'none',\r\n        border: '.5px solid rgb(211,211,211,0.7)'\r\n    },\r\n    selectTabActive: {\r\n        borderBottom: 'none',\r\n        border: '.5px solid rgb(211,211,211,0.7)',\r\n        width: '100px'\r\n    },\r\n    buttonWrapper: {\r\n        margin: theme.spacing(3)\r\n    },\r\n    inputwraper: {\r\n        marginLeft: theme.spacing(2)\r\n    },\r\n    table: {\r\n        minWidth: 650\r\n    }\r\n}),);\r\n\r\nconst columns : ColDef[] = [\r\n    {\r\n        field: 'filename',\r\n        headerName: 'Filename',\r\n        width: 110\r\n    }, {\r\n        field: 'description',\r\n        headerName: 'Description',\r\n        width: 130\r\n    }, {\r\n        field: 'status',\r\n        headerName: 'Status',\r\n        width: 80\r\n    }, {\r\n        field: 'filetype',\r\n        headerName: 'Filetype',\r\n        width: 85\r\n    }, {\r\n        field: 'filesize',\r\n        headerName: 'Filesize',\r\n        width: 85\r\n    }, {\r\n        field: 'date',\r\n        headerName: 'Date Modified',\r\n        width: 120\r\n    }, {\r\n        field: 'time',\r\n        headerName: 'Time Modified',\r\n        width: 120\r\n    }, {\r\n        field: 'link',\r\n        headerName: 'Link',\r\n        width: 70\r\n    }\r\n];\r\n\r\nconst rows = [\r\n    {\r\n        id: 1,\r\n        Created: 1,\r\n        Last_Updated: 1,\r\n        User: 'Snow',\r\n        Text: 'Jon',\r\n        Active: true\r\n    }\r\n];\r\n\r\nconst Attachment : React.FC < {} > = () => {\r\n    const classes = useStyles();\r\n    const [open,\r\n        setOpen] = React.useState(false);\r\n    const [row,setRow]=React.useState('')\r\n    console.log(row);\r\n\r\n    var deleteIcon = (\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.buttonWrapper}>\r\n            Add Memo\r\n        </Button>\r\n    );\r\n\r\n    const rowhandler = (ro : any) => {\r\n        setRow(ro);\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    return (\r\n        <React.Fragment>\r\n            <div className={classes.root}>\r\n                <Typography className={classes.title}>Attachment :\r\n                </Typography>\r\n                \r\n                <div\r\n                    style={{\r\n                    height: 400,\r\n                    width: '100%'\r\n                }}>\r\n                    <DataGrid\r\n                        rows={rows}\r\n                        columns={columns}\r\n                        pageSize={5}\r\n                        onRowSelected={(row) => {\r\n                        rowhandler(row)\r\n                    }}/>\r\n                </div>\r\n\r\n                <Button   component=\"label\" variant=\"contained\" className={classes.buttonWrapper}>\r\n  Upload File\r\n  <input\r\n    type=\"file\"\r\n    hidden\r\n  />\r\n               </Button>\r\n                <Button   component=\"label\" variant=\"contained\" color=\"primary\" className={classes.buttonWrapper}>\r\n  Upload Link\r\n  <input\r\n    type=\"file\"\r\n    hidden\r\n  />\r\n               </Button>\r\n               <Button   component=\"label\" variant=\"contained\" color=\"secondary\" className={classes.buttonWrapper}>\r\n  Upload Folder\r\n  <input\r\n    type=\"file\"\r\n    hidden\r\n  />\r\n               </Button>\r\n            </div>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={open}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                timeout: 500\r\n            }}>\r\n                <Fade in={open}>\r\n                    <div className={classes.paper}>\r\n                        <h4>Modal</h4>\r\n            \r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n\r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default Attachment","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\create-amend-accounts\\create-bank-account\\Attachments.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\bank-account-enquiry\\EBanking.tsx",["1273","1274","1275","1276"],"import React from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Button from \"@material-ui/core/Button\";\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      \"& > *\": {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        margin: theme.spacing(1),\r\n        width: \"100%\",\r\n      },\r\n    },\r\n    formControl: {},\r\n    accountsWrapper: {},\r\n    title: {\r\n      textAlign: \"left\",\r\n      fontSize: \"17px\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    label: {\r\n      width: \"30%\",\r\n      fontSize: \"15px\",\r\n      paddingRight: theme.spacing(2),\r\n      paddingTop: theme.spacing(2),\r\n    },\r\n    inputFieldWrapper: {},\r\n    selectTab: {\r\n      borderBottom: \"none\",\r\n      border: \".5px solid rgb(211,211,211,0.7)\",\r\n    },\r\n    selectTabActive: {\r\n      borderBottom: \"none\",\r\n      border: \".5px solid rgb(211,211,211,0.7)\",\r\n      width: \"100px\",\r\n    },\r\n    buttonWrapper: {\r\n      margin: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nconst EBanking: React.FC<{}> = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.accountsWrapper}>\r\n        <Typography className={classes.title}>E - Banking Details</Typography>\r\n        <form className={classes.root} noValidate autoComplete='off'>\r\n          <div className={classes.inputFieldWrapper}>\r\n            <label className={classes.label}>E-Banking Service:</label>\r\n            <TextField id='website' variant='outlined' size='small' />\r\n          </div>\r\n          <div className={classes.inputFieldWrapper}>\r\n            <label className={classes.label}>E-Banking Functions:</label>\r\n            <TextField id='website' variant='outlined' size='small' />\r\n          </div>\r\n        </form>\r\n        <div>\r\n          <Button variant='contained' className={classes.buttonWrapper}>\r\n            Transaction Enquiry\r\n          </Button>\r\n          <Button variant='contained' color='primary' className={classes.buttonWrapper}>\r\n            SO/DD Enquiry\r\n          </Button>\r\n          <Button variant='contained' className={classes.buttonWrapper}>\r\n            Bank Feed Rule\r\n          </Button>\r\n          <Button variant='contained' color='primary' className={classes.buttonWrapper}>\r\n            Close\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default EBanking;\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\create-amend-accounts\\amend-bank-account-details\\AttachmentsTable.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\purchase-requisition\\EnterPurchaseRequisition.tsx",["1277","1278"],"import React from 'react'\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {createStyles, makeStyles, Theme, withStyles} from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Box from '@material-ui/core/Box';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\n\r\n\r\n\r\n\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: any;\r\n  value: any;\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme : Theme) => createStyles({\r\n    NominalVatableReceipt: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    NVtitle: {\r\n        fontSize: \"20px\",\r\n        fontWeight: \"bold\"\r\n    },\r\n    NVFieldWrapper: {\r\n        padding: \"10px 0\"\r\n    },\r\n    NVlabel: {\r\n        lineHeight: \"30px\",\r\n        paddingRight: theme.spacing(2)\r\n    },\r\n    NVformWrapper: {\r\n        paddingTop: theme.spacing(2)\r\n    },\r\n    NVtable: {\r\n        width: \"100%\"\r\n    },\r\n    buttonWrapper: {\r\n        margin: theme.spacing(3)\r\n    }\r\n}));\r\n\r\nfunction createData(Item: string, Supplier: string, Nominal_AC: string, Warehouse: string, Deliver_By: string,quantity:number,Net_Unit_price:number,Sub_total:number,Remove:string) {\r\n  return { Item, Supplier, Nominal_AC, Warehouse, Deliver_By ,quantity,Net_Unit_price,Sub_total,Remove};\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen', 'yoghurt','acc','ware','deliver', 159, 6.0, 24, 'remove'),\r\n];\r\n\r\nfunction a11yProps(index: any) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction EnterPurchaseRequisition() {\r\n\r\n\r\n    const [selectedDate,\r\n        setSelectedDate] = React.useState < Date | null > (new Date());\r\n\r\n          const [value, setValue] = React.useState(0);\r\n\r\n\r\n    const handleDateChange = (date : Date | null) => {\r\n        setSelectedDate(date);\r\n    };\r\n\r\nconst handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n    setValue(newValue);\r\n  };\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Typography className={classes.NVtitle} style={{margin:'10px'}}>Enter Purchase Requisition\r\n            </Typography>\r\n            <div className=\"row\" style={{\r\n                display: 'flex'\r\n            }}>\r\n                \r\n                <div\r\n                    className=\"col\"\r\n                    style={{\r\n                    maxWidth: '35%',\r\n                    border: '2px solid #c2c2c2',\r\n                    padding: '20px',\r\n                    margin:'20px'\r\n                }}>\r\n                    <Typography className={classes.NVtitle}>Add Line</Typography>\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label className={classes.NVlabel}>Item : * &nbsp;&nbsp; &nbsp;&nbsp;\r\n                        </label>\r\n                        <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                    </div>\r\n\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label className={classes.NVlabel}>Quantity : *</label>\r\n                        <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                    </div>\r\n\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <label\r\n                                style={{\r\n                                lineHeight: \"55px\"\r\n                            }}>\r\n                                Date Acquired : &nbsp;\r\n                            </label>\r\n                            <KeyboardDatePicker\r\n                                style={{\r\n                                maxWidth: '150px'\r\n                            }}\r\n                                margin=\"normal\"\r\n                                id=\"date-picker-dialog\"\r\n                                format=\"MM/dd/yyyy\"\r\n                                value={selectedDate}\r\n                                onChange={handleDateChange}\r\n                                KeyboardButtonProps={{\r\n                                \"aria-label\": \"change date\"\r\n                            }}/>\r\n                        </MuiPickersUtilsProvider>\r\n                        <br/>\r\n                        <label className={classes.NVlabel}>Supplier : &nbsp;&nbsp;</label>\r\n                        <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                    </div>\r\n\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label className={classes.NVlabel}>Nominal Account :\r\n                        </label>\r\n                        <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                    </div>\r\n\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label className={classes.NVlabel}>Net Unit Price (£) :\r\n                        </label>\r\n                        <br/>\r\n                        <TextField id=\"outlined-size-small\" variant=\"outlined\" size=\"small\"/>\r\n                        <Button variant=\"contained\">\r\n                            Calculate Net\r\n                        </Button>\r\n                    </div>\r\n\r\n                    <div className=\"classes.NVFieldWrapper\">\r\n                        <label className={classes.NVlabel}>Warehouse (£) :\r\n                        </label>\r\n                        <Select labelId=\"demo-simple-select-label\" id=\"demo-simple-select\">\r\n                            <MenuItem value={10}>Home</MenuItem>\r\n                            <MenuItem value={20}>Supplied Direct</MenuItem>\r\n                            <MenuItem value={30}>Warehouse</MenuItem>\r\n                            <MenuItem value={40}>Workshop</MenuItem>\r\n                        </Select>\r\n                    </div>\r\n                    <Button variant=\"contained\" className={classes.buttonWrapper}>\r\n                        Clear\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"primary\" className={classes.buttonWrapper}>\r\n                        Save\r\n                    </Button>\r\n                </div>\r\n                <div\r\n                    className=\"col\"\r\n                    style={{\r\n                    marginTop: '21px',\r\n                    maxWidth: '65%'\r\n                }}>\r\n                    <AppBar position=\"static\">\r\n        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n          <Tab label=\"Item Lines\" {...a11yProps(0)} />\r\n          <Tab label=\"Comments\" {...a11yProps(1)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <div className=\"\">\r\n            <TableContainer component={Paper}>\r\n      <Table aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Item</TableCell>\r\n            <TableCell align=\"right\">Supplier</TableCell>\r\n            <TableCell align=\"right\">Nominal A/C</TableCell>\r\n            <TableCell align=\"right\">Warehouse</TableCell>\r\n            <TableCell align=\"right\">Deliver By</TableCell>\r\n            <TableCell align=\"right\">Quantity</TableCell>\r\n            <TableCell align=\"right\">Net Unit Price</TableCell>\r\n            <TableCell align=\"right\">Sub Total</TableCell>\r\n            <TableCell align=\"right\">Remove</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.Item}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.Item}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.Supplier}</TableCell>\r\n              <TableCell align=\"right\">{row.Nominal_AC}</TableCell>\r\n              <TableCell align=\"right\">{row.Warehouse}</TableCell>\r\n              <TableCell align=\"right\">{row.Deliver_By}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n        </div>\r\n        <Button variant=\"contained\" className={classes.buttonWrapper}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" className={classes.buttonWrapper}>\r\n                        Save Draft\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"primary\" className={classes.buttonWrapper}>\r\n                        Submit\r\n                    </Button>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n          <label style={{fontSize:'20px'}}>Enter A Comment Below</label>\r\n          <div className=\"\">\r\n        <TextareaAutosize style={{minWidth:'550px'}} aria-label=\"minimum height\" rowsMin={20} />\r\n        <div className=\"\">\r\n            <Button variant=\"contained\" className={classes.buttonWrapper}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" className={classes.buttonWrapper}>\r\n                        Save Draft\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"primary\" className={classes.buttonWrapper}>\r\n                        Submit\r\n                    </Button>\r\n        </div>\r\n        </div>\r\n        \r\n      </TabPanel>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EnterPurchaseRequisition\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\purchase-requisition\\Purchase_Requisition_Authorization.tsx",["1279","1280","1281","1282","1283","1284","1285","1286","1287"],"import React from \"react\";\r\nimport {createStyles, makeStyles, Theme, withStyles} from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme : Theme) => createStyles({\r\n  table: {\r\n    minWidth: 650\r\n  },NVtitle: {\r\n        fontSize: \"30px\",\r\n        fontWeight: \"bold\"\r\n    },NVlabel: {\r\n        lineHeight: \"20px\",\r\n        paddingRight: theme.spacing(1),\r\n        fontSize:'12px',\r\n        fontStyle:'none',\r\n        color:'#008000'\r\n    }\r\n})\r\n);\r\n\r\nfunction createData(\r\n  Document_No: number,\r\n  Document_Date: string,\r\n  Requester: string,\r\n  Combines_Budget: number,\r\n  Item_Code: string,\r\n  Item_Name: string,\r\n  quantity: number,\r\n  Buying_Unit: number,\r\n  Currency: number,\r\n  Unit_Buying_Price: number,\r\n  Unit_Buying_Price_Base: number,\r\n  Total_Net_value: number,\r\n  Total_Net_value_Base: number,\r\n  Tax_Rate: number,\r\n  Supplier_Code: string,\r\n  Supplier_Name: string,\r\n  Requested_By_Date: string,\r\n  Nominal_Code: string,\r\n  Nominal_Account_Name: string,\r\n  Require_Super_Authority: string\r\n) {\r\n  return {\r\n    Document_No,\r\n  Document_Date,\r\n  Requester,\r\n  Combines_Budget,\r\n  Item_Code,\r\n  Item_Name,\r\n  quantity,\r\n  Buying_Unit,\r\n  Currency,\r\n  Unit_Buying_Price,\r\n  Unit_Buying_Price_Base,\r\n  Total_Net_value,\r\n  Total_Net_value_Base,\r\n  Tax_Rate,\r\n  Supplier_Code,\r\n  Supplier_Name,\r\n  Requested_By_Date,\r\n  Nominal_Code,\r\n  Nominal_Account_Name,\r\n  Require_Super_Authority\r\n  };\r\n}\r\n\r\nconst rows = [\r\n  createData(\r\n    112,\r\n    \"03/10/2000\",\r\n    \"Req data\",\r\n    123,\r\n    \"Ic_Data\",\r\n    \"IN_Data\",\r\n    234,\r\n    567,\r\n    890,\r\n    980,\r\n    999,\r\n    111,\r\n    222,\r\n    202,\r\n    \"SC_Data\",\r\n    \"SN_data\",\r\n    \"RBD_data\",\r\n    \"NC_Data\",\r\n    \"NAN_Data\",\r\n    \"RSA_Data\"\r\n  )\r\n];\r\n\r\nexport default function Purchase_Requisition_Authorization() {\r\n  const classes = useStyles();\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n    const [page, setPage] = React.useState(0);\r\n\r\n    const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n      <div className=\"\">\r\n          <Typography style={{marginLeft:'11px'}} className={classes.NVtitle} >Purchase Requisitions to Authorise\r\n            </Typography>\r\n      <div style={{marginLeft:'13px'}}>\r\n          <a href=\"\" className={classes.NVlabel}>Authorise and Generate Orders |</a> \r\n          <a href=\"\" className={classes.NVlabel}>Authorise |</a>\r\n          <a href=\"\" className={classes.NVlabel}>Comment |</a>\r\n          <a href=\"\" className={classes.NVlabel}>Reject |</a>\r\n          <a href=\"\" className={classes.NVlabel}>Actions |</a>\r\n          <a href=\"\" className={classes.NVlabel}>Export |</a>\r\n          <a href=\"\" className={classes.NVlabel}>Print |</a>\r\n          <a href=\"\" className={classes.NVlabel}>Refresh</a>\r\n          </div>\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Document_No</TableCell>\r\n            <TableCell align=\"right\">Document_Date</TableCell>\r\n            <TableCell align=\"right\">Requester</TableCell>\r\n            <TableCell align=\"right\">Combines_Budget</TableCell>\r\n            <TableCell align=\"right\">Item Code</TableCell>\r\n            <TableCell align=\"right\">Item Name</TableCell>\r\n            <TableCell align=\"right\">Quantity</TableCell>\r\n            <TableCell align=\"right\">Buying Unit</TableCell>\r\n            <TableCell align=\"right\">Currency</TableCell>\r\n            <TableCell align=\"right\">Unit_Buying_Price</TableCell>\r\n            <TableCell align=\"right\">Unit_Buying_Price_Base</TableCell>\r\n            <TableCell align=\"right\">Total_Net_value</TableCell>\r\n            <TableCell align=\"right\">Total_Net_value_Base</TableCell>\r\n            <TableCell align=\"right\">Tax Rate</TableCell>\r\n            <TableCell align=\"right\">Supplier_Code</TableCell>\r\n            <TableCell align=\"right\">Supplier_Name</TableCell>\r\n            <TableCell align=\"right\">Requested_By_Date</TableCell>\r\n            <TableCell align=\"right\">Nominal_Code</TableCell>\r\n            <TableCell align=\"right\">Nominal_Account_Name</TableCell>\r\n            <TableCell align=\"right\">Require_Super_Authority</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.Document_No}>\r\n                <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n          />\r\n        </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.Document_No}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.Document_Date}</TableCell>\r\n              <TableCell align=\"right\">{row.Requester}</TableCell>\r\n              <TableCell align=\"right\">{row.Combines_Budget}</TableCell>\r\n              <TableCell align=\"right\">{row.Item_Code}</TableCell>\r\n              <TableCell align=\"right\">{row.Item_Name}</TableCell>\r\n              <TableCell align=\"right\">{row.quantity}</TableCell>\r\n              <TableCell align=\"right\">{row.Buying_Unit}</TableCell>\r\n              <TableCell align=\"right\">{row.Currency}</TableCell>\r\n              <TableCell align=\"right\">{row.Unit_Buying_Price}</TableCell>\r\n              <TableCell align=\"right\">{row.Unit_Buying_Price_Base}</TableCell>\r\n              <TableCell align=\"right\">{row.Total_Net_value}</TableCell>\r\n              <TableCell align=\"right\">{row.Total_Net_value_Base}</TableCell>\r\n              <TableCell align=\"right\">{row.Tax_Rate}</TableCell>\r\n              <TableCell align=\"right\">{row.Supplier_Code}</TableCell>\r\n              <TableCell align=\"right\">{row.Supplier_Name}</TableCell>\r\n              <TableCell align=\"right\">{row.Requested_By_Date}</TableCell>\r\n              <TableCell align=\"right\">{row.Nominal_Code}</TableCell>\r\n              <TableCell align=\"right\">{row.Nominal_Account_Name}</TableCell>\r\n              <TableCell align=\"right\">{row.Require_Super_Authority}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n<TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />    </TableContainer>\r\n    </div>\r\n  );\r\n}\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\bank-standing-orders-and-direct-debits\\standings-order-table.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\account-analysis\\day-book\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\enter-transactions\\nominal-vatable-receipt\\index.tsx",["1288","1289","1290","1291","1292","1293"],"import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  createStyles,\r\n  makeStyles,\r\n  Theme,\r\n  withStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"date-fns\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\n\r\nconst BootstrapInput = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    input: {\r\n      borderRadius: 4,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"7px 26px 7px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"-apple-system\",\r\n        \"BlinkMacSystemFont\",\r\n        '\"Segoe UI\"',\r\n        \"Roboto\",\r\n        '\"Helvetica Neue\"',\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n        '\"Apple Color Emoji\"',\r\n        '\"Segoe UI Emoji\"',\r\n        '\"Segoe UI Symbol\"',\r\n      ].join(\",\"),\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#80bdff\",\r\n        boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n      },\r\n    },\r\n  })\r\n)(InputBase);\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    NominalVatableReceipt: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    NVtitle: {\r\n      fontSize: \"20px\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    NVFieldWrapper: {\r\n      padding: \"10px 0\",\r\n    },\r\n    NVlabel: {\r\n      lineHeight: \"30px\",\r\n      paddingRight: theme.spacing(2),\r\n    },\r\n    NVformWrapper: {\r\n      paddingTop: theme.spacing(2),\r\n    },\r\n    NVtable: {\r\n      width: \"100%\",\r\n    },\r\n    buttonWrapper: {\r\n      margin: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\n// table info\r\nfunction createData(\r\n  code: number,\r\n  cc: string,\r\n  department: string,\r\n  name: string,\r\n  reference: string,\r\n  narrative: string,\r\n  transition: number,\r\n  transda: string,\r\n  grossvalue: number,\r\n  vatco: number,\r\n  rate: number,\r\n  goodval: string,\r\n  vatvalue: number\r\n) {\r\n  return {\r\n    code,\r\n    cc,\r\n    department,\r\n    name,\r\n    reference,\r\n    narrative,\r\n    transition,\r\n    transda,\r\n    grossvalue,\r\n    vatco,\r\n    rate,\r\n    goodval,\r\n    vatvalue,\r\n  };\r\n}\r\n\r\nconst rows = [\r\n  createData(\r\n    1011,\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    1234,\r\n    \"dummy\",\r\n    123,\r\n    123,\r\n    123,\r\n    \"dummy\",\r\n    123\r\n  ),\r\n];\r\nconst NominalVatableReceipt: React.FC<{}> = () => {\r\n  const [selectedDate, setSelectedDate] = React.useState<Date | null>(\r\n    new Date()\r\n  );\r\n\r\n  const handleDateChange = (date: Date | null) => {\r\n    setSelectedDate(date);\r\n  };\r\n  const classes = useStyles();\r\n  const [bankaccount, setBankaccount] = React.useState(\"\");\r\n  const handleChange = (\r\n    event: React.ChangeEvent<{\r\n      value: unknown;\r\n    }>\r\n  ) => {\r\n    setBankaccount(event.target.value as string);\r\n  };\r\n  return (\r\n    <div className={classes.NominalVatableReceipt}>\r\n      <Grid container spacing={3}>\r\n        <Grid item lg={12}>\r\n          <Typography className={classes.NVtitle}>Bank</Typography>\r\n          <div className={classes.NVformWrapper}>\r\n            <form>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Bank account</label>\r\n                <NativeSelect\r\n                  id=\"demo-customized-select-native\"\r\n                  value={bankaccount}\r\n                  onChange={handleChange}\r\n                  input={<BootstrapInput />}\r\n                >\r\n                  <option aria-label=\"None\" value=\"\" />\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </NativeSelect>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Account Type :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                <label className={classes.NVlabel}>Currency :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                <label className={classes.NVlabel}>\r\n                  Exchange rate to base :\r\n                </label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item lg={12}>\r\n          <Typography className={classes.NVtitle}>\r\n            Transaction Details\r\n          </Typography>\r\n          <div className={classes.NVformWrapper}>\r\n            <form>\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Chaque Number :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                <label className={classes.NVlabel}>2nd Ref :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n\r\n              <div className={classes.NVFieldWrapper}>\r\n                <label className={classes.NVlabel}>Transaction Date :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                <label className={classes.NVlabel}>Narrative :</label>\r\n                <TextField\r\n                  id=\"outlined-size-small\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Button variant=\"contained\" className={classes.buttonWrapper}>\r\n          Clear\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.buttonWrapper}\r\n        >\r\n          Save\r\n        </Button>\r\n        <Button variant=\"contained\" className={classes.buttonWrapper}>\r\n          Save & Allocate\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.buttonWrapper}\r\n        >\r\n          Close\r\n        </Button>\r\n      </Grid>\r\n      <Grid lg={12}>\r\n        <Typography className={classes.NVtitle}>Nomina Transaction</Typography>\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.NVtable} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>User Name</TableCell>\r\n                <TableCell align=\"right\">Work Station</TableCell>\r\n                <TableCell align=\"right\">Module</TableCell>\r\n                <TableCell align=\"right\">Feture</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row) => (\r\n                <TableRow key={row.name}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.name}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">{row.code}</TableCell>\r\n                  <TableCell align=\"right\">{row.cc}</TableCell>\r\n                  <TableCell align=\"right\">{row.department}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NominalVatableReceipt;\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\purchase-requisition\\Generate_POFR\\PR_List.tsx",["1294","1295","1296","1297","1298","1299","1300","1301"],"import * as React from 'react';\r\nimport { DataGrid, ColDef, ValueGetterParams } from '@material-ui/data-grid';\r\nimport {createStyles, makeStyles, Theme, withStyles} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n\r\nconst useStyles = makeStyles((theme : Theme) => createStyles({\r\n  NVtitle: {\r\n        fontSize: \"30px\",\r\n        fontWeight: \"bold\"\r\n    },NVlabel: {\r\n        lineHeight: \"20px\",\r\n        paddingRight: theme.spacing(1),\r\n        fontSize:'12px',\r\n        fontStyle:'none',\r\n        color:'#008000'\r\n    }\r\n})\r\n);\r\n\r\nconst columns: ColDef[] = [\r\n  { field: 'id', headerName: 'Document Number', width: 150 },\r\n  { field: 'Document_Date', headerName: 'Document Date', width: 130 },\r\n  { field: 'Total_Net', headerName: 'Total Net', width: 130 },\r\n  {\r\n    field: 'Status',\r\n    headerName: 'Status',\r\n    width: 90,\r\n  },\r\n  {\r\n    field: 'Authorization_Status',\r\n    headerName: 'Authorization Status',\r\n    width: 160\r\n  }\r\n];\r\n\r\nconst rows = [\r\n  { id: '1', Document_Date: '03/10/2000', Total_Net: '1000', Status: '35' ,Authorization_Status:'AS_Data'},\r\n];\r\n\r\nexport default function PR_List() {\r\n      const classes = useStyles();\r\n\r\n  return (\r\n      <div className=\"\">\r\n          <Typography style={{marginLeft:'11px'}} className={classes.NVtitle} >My Purchase Requisition List\r\n            </Typography>\r\n      <div style={{marginLeft:'13px'}}>\r\n          <a href=\"\" className={classes.NVlabel}>New |</a> \r\n          <a href=\"\" className={classes.NVlabel}>Delete |</a>\r\n          <a href=\"\" className={classes.NVlabel}>Action |</a>\r\n          <a href=\"\" className={classes.NVlabel}>Export |</a>\r\n          <a href=\"\" className={classes.NVlabel}>Print |</a>\r\n          <a href=\"\" className={classes.NVlabel}>Refresh </a>\r\n          </div>\r\n          <br />\r\n      \r\n    <div style={{ minHeight: 200,maxHeight:400, width: '100%' }}>\r\n      <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection />\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport {}","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\purchase-requisition\\Generate_POFR\\PR_Lines.tsx",["1302","1303","1304","1305","1306","1307"],"import * as React from 'react';\r\nimport { DataGrid, ColDef, ValueGetterParams } from '@material-ui/data-grid';\r\nimport {createStyles, makeStyles, Theme, withStyles} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n\r\nconst useStyles = makeStyles((theme : Theme) => createStyles({\r\n  NVtitle: {\r\n        fontSize: \"30px\",\r\n        fontWeight: \"bold\"\r\n    },NVlabel: {\r\n        lineHeight: \"20px\",\r\n        paddingRight: theme.spacing(1),\r\n        fontSize:'12px',\r\n        fontStyle:'none',\r\n        color:'#008000'\r\n    }\r\n})\r\n);\r\n\r\n\r\nconst columns: ColDef[] = [\r\n  { field: 'id', headerName: 'Combined Budget', width: 140 },\r\n  { field: 'Supplier_Code', headerName: 'Supplier Code', width: 130 },\r\n  { field: 'Supplier_Name', headerName: 'Supplier_Name', width: 130 },\r\n  {\r\n    field: 'Requested_By_Date',\r\n    headerName: 'Requested By Date',\r\n    width: 140,\r\n  },\r\n  {\r\n    field: 'Item_Code',\r\n    headerName: 'Item Code',\r\n    width: 160\r\n  },\r\n  {\r\n    field: 'Item_Name',\r\n    headerName: 'Item Name',\r\n    width: 160\r\n  },\r\n  {\r\n    field: 'Warehouse',\r\n    headerName: 'Warehouse',\r\n    width: 160\r\n  },\r\n  {\r\n    field: 'Quantity',\r\n    headerName: 'Quantity',\r\n    width: 160\r\n  },\r\n  {\r\n    field: 'Unit_Buying_price',\r\n    headerName: 'Unit_Buying_price',\r\n    width: 160\r\n  },\r\n  {\r\n    field: 'Total_Net_Value',\r\n    headerName: 'Total_Net_Value',\r\n    width: 160\r\n  },\r\n{\r\n    field: 'Tax_Rate',\r\n    headerName: 'Tax_Rate',\r\n    width: 160\r\n  },\r\n  {\r\n    field: 'Nominal_Code',\r\n    headerName: 'Nominal_Code',\r\n    width: 160\r\n  },\r\n{\r\n    field: 'Nominal_Account_name',\r\n    headerName: 'Nominal_Account_name',\r\n    width: 180\r\n  },\r\n  {\r\n    field: 'Status',\r\n    headerName: 'Status',\r\n    width: 160\r\n  }\r\n];\r\n\r\nconst rows = [\r\n  { id: '1', Supplier_Code: 'SC_Data', Supplier_Name: 'SN_Data', Requested_By_Date: '03/10/2000' ,Item_Code:'AS_Data',Item_Name:'IN_Data',Warehouse:'warehouse',Quantity:'111',Unit_Buying_price:'123',Total_Net_Value:'1234',Tax_Rate:'12',Nominal_Code:'NC_DATA',Nominal_Account_name:'NAN_Data',Status:'sts'},\r\n];\r\n\r\nexport default function PR_Lines() {\r\n          const classes = useStyles();\r\n\r\n  return (\r\n      <div className=\"\">\r\n          <Typography style={{marginLeft:'11px'}} className={classes.NVtitle} >My Purchase Requisition List\r\n            </Typography>\r\n      <div style={{marginLeft:'13px'}}>\r\n          <a href=\"\" className={classes.NVlabel}>Action |</a>\r\n          <a href=\"\" className={classes.NVlabel}>Export |</a>\r\n          <a href=\"\" className={classes.NVlabel}>Print |</a>\r\n          <a href=\"\" className={classes.NVlabel}>Refresh </a>\r\n          </div>\r\n          <br />\r\n      \r\n    <div style={{ height: 400, width: '100%' }}>\r\n      <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection />\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport {}","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\purchase-requisition\\MAP_Requisition\\AR_Lines.tsx",["1308","1309","1310","1311","1312"],"import React from \"react\";\r\nimport {createStyles, makeStyles, Theme, withStyles} from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme : Theme) => createStyles({\r\n  table: {\r\n    minWidth: 650\r\n  },NVtitle: {\r\n        fontSize: \"30px\",\r\n        fontWeight: \"bold\"\r\n    },NVlabel: {\r\n        lineHeight: \"20px\",\r\n        paddingRight: theme.spacing(1),\r\n        fontSize:'12px',\r\n        fontStyle:'none',\r\n        color:'#008000'\r\n    }\r\n})\r\n);\r\n\r\nfunction createData(\r\n  Document_No: number,\r\n  Document_Date: string,\r\n  Requester: string,\r\n  Combines_Budget: number,\r\n  Item_Code: string,\r\n  Item_Name: string,\r\n  quantity: number,\r\n  Buying_Unit: number,\r\n  Currency: number,\r\n  Unit_Buying_Price: number,\r\n  Unit_Buying_Price_Base: number,\r\n  Total_Net_value: number,\r\n  Total_Net_value_Base: number,\r\n  Tax_Rate: number,\r\n  Supplier_Code: string,\r\n  Supplier_Name: string,\r\n  Requested_By_Date: string,\r\n  Nominal_Code: string,\r\n  Nominal_Account_Name: string\r\n  ) {\r\n  return {\r\n    Document_No,\r\n  Document_Date,\r\n  Requester,\r\n  Combines_Budget,\r\n  Item_Code,\r\n  Item_Name,\r\n  quantity,\r\n  Buying_Unit,\r\n  Currency,\r\n  Unit_Buying_Price,\r\n  Unit_Buying_Price_Base,\r\n  Total_Net_value,\r\n  Total_Net_value_Base,\r\n  Tax_Rate,\r\n  Supplier_Code,\r\n  Supplier_Name,\r\n  Requested_By_Date,\r\n  Nominal_Code,\r\n  Nominal_Account_Name\r\n    };\r\n}\r\n\r\nconst rows = [\r\n  createData(\r\n    112,\r\n    \"03/10/2000\",\r\n    \"Req data\",\r\n    123,\r\n    \"Ic_Data\",\r\n    \"IN_Data\",\r\n    234,\r\n    567,\r\n    890,\r\n    980,\r\n    999,\r\n    111,\r\n    222,\r\n    202,\r\n    \"SC_Data\",\r\n    \"SN_data\",\r\n    \"RBD_data\",\r\n    \"NC_Data\",\r\n    \"NAN_Data\",\r\n  )\r\n];\r\n\r\nexport default function AR_Lines() {\r\n  const classes = useStyles();\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n    const [page, setPage] = React.useState(0);\r\n\r\n    const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n      <div className=\"\">\r\n          <Typography style={{marginLeft:'11px'}} className={classes.NVtitle} >Authorised Requisition Lines\r\n            </Typography>\r\n      <div style={{marginLeft:'13px'}}>\r\n          <a href=\"\" className={classes.NVlabel}>Actions |</a>\r\n          <a href=\"\" className={classes.NVlabel}>Export |</a>\r\n          <a href=\"\" className={classes.NVlabel}>Print |</a>\r\n          <a href=\"\" className={classes.NVlabel}>Refresh</a>\r\n          </div>\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Document_No</TableCell>\r\n            <TableCell align=\"right\">Document_Date</TableCell>\r\n            <TableCell align=\"right\">Requester</TableCell>\r\n            <TableCell align=\"right\">Combines_Budget</TableCell>\r\n            <TableCell align=\"right\">Item Code</TableCell>\r\n            <TableCell align=\"right\">Item Name</TableCell>\r\n            <TableCell align=\"right\">Quantity</TableCell>\r\n            <TableCell align=\"right\">Buying Unit</TableCell>\r\n            <TableCell align=\"right\">Currency</TableCell>\r\n            <TableCell align=\"right\">Unit_Buying_Price</TableCell>\r\n            <TableCell align=\"right\">Unit_Buying_Price_Base</TableCell>\r\n            <TableCell align=\"right\">Total_Net_value</TableCell>\r\n            <TableCell align=\"right\">Total_Net_value_Base</TableCell>\r\n            <TableCell align=\"right\">Tax Rate</TableCell>\r\n            <TableCell align=\"right\">Supplier_Code</TableCell>\r\n            <TableCell align=\"right\">Supplier_Name</TableCell>\r\n            <TableCell align=\"right\">Requested_By_Date</TableCell>\r\n            <TableCell align=\"right\">Nominal_Code</TableCell>\r\n            <TableCell align=\"right\">Nominal_Account_Name</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.Document_No}>\r\n                <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n          />\r\n        </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.Document_No}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.Document_Date}</TableCell>\r\n              <TableCell align=\"right\">{row.Requester}</TableCell>\r\n              <TableCell align=\"right\">{row.Combines_Budget}</TableCell>\r\n              <TableCell align=\"right\">{row.Item_Code}</TableCell>\r\n              <TableCell align=\"right\">{row.Item_Name}</TableCell>\r\n              <TableCell align=\"right\">{row.quantity}</TableCell>\r\n              <TableCell align=\"right\">{row.Buying_Unit}</TableCell>\r\n              <TableCell align=\"right\">{row.Currency}</TableCell>\r\n              <TableCell align=\"right\">{row.Unit_Buying_Price}</TableCell>\r\n              <TableCell align=\"right\">{row.Unit_Buying_Price_Base}</TableCell>\r\n              <TableCell align=\"right\">{row.Total_Net_value}</TableCell>\r\n              <TableCell align=\"right\">{row.Total_Net_value_Base}</TableCell>\r\n              <TableCell align=\"right\">{row.Tax_Rate}</TableCell>\r\n              <TableCell align=\"right\">{row.Supplier_Code}</TableCell>\r\n              <TableCell align=\"right\">{row.Supplier_Name}</TableCell>\r\n              <TableCell align=\"right\">{row.Requested_By_Date}</TableCell>\r\n              <TableCell align=\"right\">{row.Nominal_Code}</TableCell>\r\n              <TableCell align=\"right\">{row.Nominal_Account_Name}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n<TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />    </TableContainer>\r\n    </div>\r\n  );\r\n}\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\purchase-requisition\\MP_Requisition\\MPR_List.tsx",["1313","1314","1315","1316","1317","1318","1319","1320"],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\FixedAssets\\depreciate-asset\\index.tsx",["1321","1322","1323","1324","1325","1326","1327","1328","1329","1330","1331"],"import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  createStyles,\r\n  makeStyles,\r\n  Theme,\r\n  withStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\n\r\nconst BootstrapInput = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    input: {\r\n      borderRadius: 4,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"7px 26px 7px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"-apple-system\",\r\n        \"BlinkMacSystemFont\",\r\n        '\"Segoe UI\"',\r\n        \"Roboto\",\r\n        '\"Helvetica Neue\"',\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n        '\"Apple Color Emoji\"',\r\n        '\"Segoe UI Emoji\"',\r\n        '\"Segoe UI Symbol\"',\r\n      ].join(\",\"),\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#80bdff\",\r\n        boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n      },\r\n    },\r\n  })\r\n)(InputBase);\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    NominalVatableReceipt: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    NVtitle: {\r\n      fontSize: \"20px\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    NVFieldWrapper: {\r\n      padding: \"10px 0\",\r\n    },\r\n    NVlabel: {\r\n      lineHeight: \"30px\",\r\n      paddingRight: theme.spacing(2),\r\n    },\r\n    NVformWrapper: {\r\n      paddingTop: theme.spacing(2),\r\n    },\r\n    NVtable: {\r\n      width: \"100%\",\r\n    },\r\n  })\r\n);\r\n\r\n// table info\r\nfunction createData(\r\n  code: number,\r\n  cc: string,\r\n  department: string,\r\n  name: string,\r\n  reference: string,\r\n  narrative: string,\r\n  transition: number,\r\n  transda: string,\r\n  grossvalue: number,\r\n  vatco: number,\r\n  rate: number,\r\n  goodval: string,\r\n  vatvalue: number\r\n) {\r\n  return {\r\n    code,\r\n    cc,\r\n    department,\r\n    name,\r\n    reference,\r\n    narrative,\r\n    transition,\r\n    transda,\r\n    grossvalue,\r\n    vatco,\r\n    rate,\r\n    goodval,\r\n    vatvalue,\r\n  };\r\n}\r\n\r\nconst rows = [\r\n  createData(\r\n    1011,\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    \"dummy\",\r\n    1234,\r\n    \"dummy\",\r\n    123,\r\n    123,\r\n    123,\r\n    \"dummy\",\r\n    123\r\n  ),\r\n];\r\nconst DepreciateAsset: React.FC<{}> = () => {\r\n  const [selectedDate, setSelectedDate] = React.useState<Date | null>(\r\n    new Date()\r\n  );\r\n\r\n  const handleDateChange = (date: Date | null) => {\r\n    setSelectedDate(date);\r\n  };\r\n  const classes = useStyles();\r\n  const [bankaccount, setBankaccount] = React.useState(\"\");\r\n  const handleChange = (\r\n    event: React.ChangeEvent<{\r\n      value: unknown;\r\n    }>\r\n  ) => {\r\n    setBankaccount(event.target.value as string);\r\n  };\r\n  return (\r\n    <div className={classes.NominalVatableReceipt}>\r\n      <Grid container spacing={3}>\r\n        <Grid item lg={12}>\r\n          <Typography className={classes.NVtitle}>\r\n            Available Asset List\r\n          </Typography>\r\n          <TableContainer component={Paper}>\r\n            <Table className={classes.NVtable} aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"right\">Code</TableCell>\r\n                  <TableCell align=\"right\">Description</TableCell>\r\n                  <TableCell align=\"right\">Last Depriciated</TableCell>\r\n                  <TableCell align=\"right\">Depriciated Method</TableCell>\r\n                  <TableCell align=\"right\">\r\n                    Disposal AmendNominalAccount\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {rows.map((row) => (\r\n                  <TableRow key={row.name}>\r\n                    <TableCell align=\"right\">{row.code}</TableCell>\r\n                    <TableCell align=\"right\">{row.cc}</TableCell>\r\n                    <TableCell align=\"right\">{row.department}</TableCell>\r\n                    <TableCell align=\"right\">{row.name}</TableCell>\r\n                    <TableCell align=\"right\">{row.reference}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DepreciateAsset;\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-current-transaction\\nominal-current-option.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\bank-txn-enquiry\\bank-account-table.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-enquiries\\standing-orders-and-direct-debits-enquiry\\NominalTable.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\purchase-order-tab\\EnterNewPurchaseOrder.tsx",["1332","1333","1334","1335"],"import React from 'react'\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport {DataGrid, ColDef, ValueGetterParams} from '@material-ui/data-grid';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst columns : ColDef[] = [\r\n    {\r\n        field: 'id',\r\n        headerName: 'Item',\r\n        width: 130\r\n    }, {\r\n        field: 'Description',\r\n        headerName: 'Description',\r\n        width: 130\r\n    }, {\r\n        field: 'Quantity',\r\n        headerName: 'Quantity',\r\n        width: 130\r\n    }, {\r\n        field: 'Unit_Price',\r\n        headerName: 'Unit_Price',\r\n        width: 130\r\n    }, {\r\n        field: 'Disc_per',\r\n        headerName: 'Disc. %',\r\n        width: 130\r\n    }, {\r\n        field: 'Vat_Rate',\r\n        headerName: 'Vat Rate',\r\n        width: 130\r\n    }, {\r\n        field: 'Net_Value',\r\n        headerName: 'Net Value',\r\n        width: 130\r\n    }\r\n];\r\n\r\nconst rows = [\r\n    {\r\n        id: 'I_Data',\r\n        Description: \"D_Data\",\r\n        Quantity: \"Q_Data\",\r\n        Unit_Price: 'UP_Data',\r\n        Disc_per: 'DP_Data',\r\n        Vat_Rate: \"VR_Data\",\r\n        Net_Value: \"NV_Data\"\r\n    }\r\n];\r\n\r\nconst useStyles = makeStyles((theme : Theme) => createStyles({\r\n    NominalVatableReceipt: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    NVtitle: {\r\n        fontSize: \"20px\",\r\n        fontWeight: \"bold\"\r\n    },\r\n    NVFieldWrapper: {\r\n        padding: \"10px 0\"\r\n    },\r\n    NVlabel: {\r\n        lineHeight: \"30px\",\r\n        paddingRight: theme.spacing(2)\r\n    },\r\n    NVformWrapper: {\r\n        paddingTop: theme.spacing(2)\r\n    },\r\n    NVtable: {\r\n        width: \"100%\"\r\n    },\r\n    buttonWrapper: {\r\n        margin: theme.spacing(0.5)\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n    wdtset: {\r\n        width: \"150px\"\r\n    }\r\n}));\r\n\r\nfunction EnterNewPurchaseOrder() {\r\n    const classes = useStyles();\r\n\r\n    const [selectedDate,\r\n        setSelectedDate] = React.useState < Date | null > (new Date());\r\n\r\n    const [value,\r\n        setValue] = React.useState(0);\r\n\r\n    const handleDateChange = (date : Date | null) => {\r\n        setSelectedDate(date);\r\n    };\r\n    return (\r\n        <div>\r\n\r\n            <div className=\"row\" style={{\r\n                display: 'flex'\r\n            }}>\r\n                <div\r\n                    className=\"col\"\r\n                    style={{\r\n                    padding: \"20px\",\r\n                    width: \"50%\"\r\n                }}>\r\n                    <Typography\r\n                        className={classes.NVtitle}\r\n                        style={{\r\n                        margin: '10px'\r\n                    }}>Account Selection\r\n                    </Typography>\r\n                    <FormControl className={classes.formControl}>\r\n                        <div className={classes.NVFieldWrapper}>\r\n                            <label\r\n                                style={{\r\n                                paddingRight: \"54px\"\r\n                            }}\r\n                                className={classes.NVlabel}>Code : * &nbsp;&nbsp; &nbsp;&nbsp;\r\n                            </label>\r\n                            <Select\r\n                                className={classes.wdtset}\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\">\r\n                                <MenuItem value={1}>\r\n                                    one\r\n                                </MenuItem>\r\n\r\n                                <MenuItem value={1}>\r\n                                    two\r\n                                </MenuItem>\r\n\r\n                            </Select>\r\n                        </div>\r\n\r\n                        <div className={classes.NVFieldWrapper}>\r\n                            <label\r\n                                style={{\r\n                                paddingRight: \"22px\"\r\n                            }}\r\n                                className={classes.NVlabel}>Short Name :&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;\r\n                            </label>\r\n                            <Select\r\n                                className={classes.wdtset}\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\">\r\n                                <MenuItem value={1}>\r\n                                    one\r\n                                </MenuItem>\r\n\r\n                                <MenuItem value={1}>\r\n                                    two\r\n                                </MenuItem>\r\n\r\n                            </Select>\r\n                        </div>\r\n\r\n                        <div className={classes.NVFieldWrapper}>\r\n                            <label\r\n                                style={{\r\n                                paddingRight: \"41px\"\r\n                            }}\r\n                                className={classes.NVlabel}>Post Code : &nbsp;&nbsp; &nbsp;&nbsp;\r\n                            </label>\r\n                            <Select\r\n                                className={classes.wdtset}\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\">\r\n                                <MenuItem value={1}>\r\n                                    one\r\n                                </MenuItem>\r\n\r\n                                <MenuItem value={1}>\r\n                                    two\r\n                                </MenuItem>\r\n\r\n                            </Select>\r\n                        </div>\r\n\r\n                        <div className={classes.NVFieldWrapper}>\r\n                            <label\r\n                                className={classes.NVlabel}\r\n                                style={{\r\n                                paddingRight: \"85px\"\r\n                            }}>Name :\r\n                            </label>\r\n                            <TextField\r\n                                style={{\r\n                                width: \"150px\"\r\n                            }}\r\n                                id=\"outlined-size-small\"\r\n                                variant=\"outlined\"\r\n                                size=\"small\"/>\r\n                        </div>\r\n\r\n                        <div className={classes.NVFieldWrapper}>\r\n                            <label className={classes.NVlabel}>By Default Supply To :\r\n                            </label>\r\n                            <Select\r\n                                className={classes.wdtset}\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\">\r\n                                <MenuItem value={1}>\r\n                                    one\r\n                                </MenuItem>\r\n\r\n                                <MenuItem value={1}>\r\n                                    two\r\n                                </MenuItem>\r\n\r\n                            </Select>\r\n                        </div>\r\n\r\n                    </FormControl>\r\n                </div>\r\n                <div\r\n                    className=\"col\"\r\n                    style={{\r\n                    padding: \"20px\",\r\n                    width: \"50%\"\r\n                }}>\r\n                    <Typography\r\n                        className={classes.NVtitle}\r\n                        style={{\r\n                        margin: '10px'\r\n                    }}>Order Details\r\n                    </Typography>\r\n\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label\r\n                            className={classes.NVlabel}\r\n                            style={{\r\n                            paddingRight: \"75px\"\r\n                        }}>Order No :\r\n                        </label>\r\n                        <TextField\r\n                            style={{\r\n                            width: \"150px\"\r\n                        }}\r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                    </div>\r\n\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label\r\n                            className={classes.NVlabel}\r\n                            style={{\r\n                            paddingRight: \"60px\"\r\n                        }}>Order Status :\r\n                        </label>\r\n                        <TextField\r\n                            style={{\r\n                            width: \"150px\"\r\n                        }}\r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                    </div>\r\n\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <label\r\n                                style={{\r\n                                lineHeight: \"55px\",\r\n                                paddingRight: \"41px\"\r\n                            }}>\r\n                                Document Date : &nbsp;\r\n                            </label>\r\n                            <KeyboardDatePicker\r\n                                style={{\r\n                                maxWidth: '150px'\r\n                            }}\r\n                                margin=\"normal\"\r\n                                id=\"date-picker-dialog\"\r\n                                format=\"MM/dd/yyyy\"\r\n                                value={selectedDate}\r\n                                onChange={handleDateChange}\r\n                                KeyboardButtonProps={{\r\n                                \"aria-label\": \"change date\"\r\n                            }}/>\r\n                        </MuiPickersUtilsProvider>\r\n\r\n                    </div>\r\n\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <label\r\n                                style={{\r\n                                lineHeight: \"55px\",\r\n                                paddingRight: \"26px\"\r\n                            }}>\r\n                                Delivery Requested : &nbsp;\r\n                            </label>\r\n                            <KeyboardDatePicker\r\n                                style={{\r\n                                maxWidth: '150px'\r\n                            }}\r\n                                margin=\"normal\"\r\n                                id=\"date-picker-dialog\"\r\n                                format=\"MM/dd/yyyy\"\r\n                                value={selectedDate}\r\n                                onChange={handleDateChange}\r\n                                KeyboardButtonProps={{\r\n                                \"aria-label\": \"change date\"\r\n                            }}/>\r\n                        </MuiPickersUtilsProvider>\r\n\r\n                    </div>\r\n\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label\r\n                            className={classes.NVlabel}\r\n                            style={{\r\n                            paddingRight: \"\"\r\n                        }}>Supplier Reference No :\r\n                        </label>\r\n                        <TextField\r\n                            style={{\r\n                            width: \"150px\"\r\n                        }}\r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                    </div>\r\n\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label\r\n                            className={classes.NVlabel}\r\n                            style={{\r\n                            paddingRight: \"28px\"\r\n                        }}>Authorisation Status :\r\n                        </label>\r\n                        <TextField\r\n                            style={{\r\n                            width: \"150px\"\r\n                        }}\r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div\r\n                style={{\r\n                maxHeight: 400,\r\n                minHeight: 200,\r\n                width: '100%'\r\n            }}>\r\n                <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection/>\r\n            </div>\r\n\r\n            <div\r\n                className=\"row\"\r\n                style={{\r\n                display: 'flex',\r\n                padding: \"25px\"\r\n            }}>\r\n                <div\r\n                    className=\"col\"\r\n                    style={{\r\n                    width: \"40%\"\r\n                }}>\r\n                    <Button size=\"small\" variant=\"contained\" className={classes.buttonWrapper}>\r\n                        Add Items\r\n                    </Button>\r\n                    <Button\r\n                        size=\"small\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.buttonWrapper}>\r\n                        Edit Items\r\n                    </Button>\r\n                    <Button size=\"small\" variant=\"contained\" className={classes.buttonWrapper}>\r\n                        Delete Items\r\n                    </Button>\r\n                    <Button\r\n                        size=\"small\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.buttonWrapper}>\r\n                        Move Up\r\n                    </Button>\r\n                    <Button\r\n                        size=\"small\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.buttonWrapper}>\r\n                        Move Down\r\n                    </Button>\r\n\r\n                    <Typography\r\n                        className={classes.NVtitle}\r\n                        style={{\r\n                        margin: '10px'\r\n                    }}>Exchange Rate\r\n                    </Typography>\r\n\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label\r\n                            className={classes.NVlabel}\r\n                            style={{\r\n                            paddingRight: \"38px\"\r\n                        }}>\r\n                            Rate :\r\n                        </label>\r\n                        <TextField\r\n                            style={{\r\n                            width: \"150px\"\r\n                        }}\r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                    </div>\r\n\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label className={classes.NVlabel}>\r\n                            Currency :\r\n                        </label>\r\n                        <TextField\r\n                            style={{\r\n                            width: \"150px\"\r\n                        }}\r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                    </div>\r\n                </div>\r\n                <div\r\n                    className=\"col\"\r\n                    style={{\r\n                    width: \"30%\"\r\n                }}>\r\n                    <Typography\r\n                        className={classes.NVtitle}\r\n                        style={{\r\n                        margin: '10px'\r\n                    }}>Sub Totals\r\n                    </Typography>\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label\r\n                            className={classes.NVlabel}\r\n                            style={{\r\n                            paddingRight: \"37px\"\r\n                        }}>\r\n                            Goods :\r\n                        </label>\r\n                        <TextField\r\n                            style={{\r\n                            width: \"150px\"\r\n                        }}\r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                    </div>\r\n\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label\r\n                            style={{\r\n                            paddingRight: \"30px\"\r\n                        }}\r\n                            className={classes.NVlabel}>\r\n                            Charges :\r\n                        </label>\r\n                        <TextField\r\n                            style={{\r\n                            width: \"150px\"\r\n                        }}\r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                    </div>\r\n\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label className={classes.NVlabel}>\r\n                            Order Disc. :\r\n                        </label>\r\n                        <TextField\r\n                            style={{\r\n                            width: \"150px\"\r\n                        }}\r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                    </div>\r\n\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label\r\n                            style={{\r\n                            paddingRight: \"32px\"\r\n                        }}\r\n                            className={classes.NVlabel}>\r\n                            Lnd Csts :\r\n                        </label>\r\n                        <TextField\r\n                            style={{\r\n                            width: \"150px\"\r\n                        }}\r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                    </div>\r\n                </div>\r\n                <div\r\n                    className=\"col\"\r\n                    style={{\r\n                    width: \"30%\"\r\n                }}>\r\n                    <Typography\r\n                        className={classes.NVtitle}\r\n                        style={{\r\n                        margin: '10px'\r\n                    }}>Totals\r\n                    </Typography>\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label\r\n                            className={classes.NVlabel}\r\n                            style={{\r\n                            paddingRight: \"\"\r\n                        }}>\r\n                            Net :\r\n                        </label>\r\n                        <TextField\r\n                            style={{\r\n                            width: \"150px\"\r\n                        }}\r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                    </div>\r\n\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label className={classes.NVlabel}>\r\n                            VAT :\r\n                        </label>\r\n                        <TextField\r\n                            style={{\r\n                            width: \"150px\"\r\n                        }}\r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                    </div>\r\n\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label\r\n                            className={classes.NVlabel}\r\n                            style={{\r\n                            paddingRight: \"8px\"\r\n                        }}>\r\n                            Gross :\r\n                        </label>\r\n                        <TextField\r\n                            style={{\r\n                            width: \"150px\"\r\n                        }}\r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"\">\r\n                <div\r\n                    className=\"col\"\r\n                    style={{\r\n                    width: \"40%\",\r\n                    paddingBottom: \"30px\",\r\n                    paddingLeft: \"25px\"\r\n                }}>\r\n                    <Button variant=\"contained\" className={classes.buttonWrapper}>\r\n                        Save\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"primary\" className={classes.buttonWrapper}>\r\n                        Copy\r\n                    </Button>\r\n                    <Button variant=\"contained\" className={classes.buttonWrapper}>\r\n                        Copy Order\r\n                    </Button>\r\n                </div>\r\n\r\n            </div>\r\n            <div\r\n                className=\"\"\r\n                style={{\r\n                paddingBottom: \"50px\",\r\n                paddingRight: \"30px\"\r\n            }}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={{\r\n                    float: \"right\"\r\n                }}\r\n                    className={classes.buttonWrapper}>\r\n                    Close\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EnterNewPurchaseOrder\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\purchase-order-tab\\AmmendOrder.tsx",["1336","1337","1338","1339","1340"],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\purchase-order-tab\\AmendOrderStatus.tsx",["1341","1342","1343","1344","1345"],"import React from 'react'\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {createStyles, makeStyles, Theme, withStyles} from \"@material-ui/core/styles\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport {DataGrid, ColDef, ValueGetterParams} from '@material-ui/data-grid';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst columns : ColDef[] = [\r\n    {\r\n        field: 'id',\r\n        headerName: 'Order No',\r\n        width: 130\r\n    }, {\r\n        field: 'Order_Data',\r\n        headerName: 'Order Data',\r\n        width: 130\r\n    }, {\r\n        field: 'Order_Status',\r\n        headerName: 'Order Status',\r\n        width: 130\r\n    }, {\r\n        field: 'Auth',\r\n        headerName: 'Auth',\r\n        width: 130\r\n    }, {\r\n        field: 'Code',\r\n        headerName: 'Code',\r\n        width: 130\r\n    }, {\r\n        field: 'Supplier_Name',\r\n        headerName: 'Supplier_Name',\r\n        width: 130\r\n    },\r\n    {\r\n        field: 'Supplier_Ref_No',\r\n        headerName: 'Supplier_Ref_No',\r\n        width: 130\r\n    },\r\n    {\r\n        field: 'Value',\r\n        headerName: 'Value',\r\n        width: 130\r\n    }\r\n];\r\n\r\nconst rows = [\r\n    {\r\n        id: 'ON_Data',\r\n        Order_Data: \"O_Data\",\r\n        Order_Status: \"OS_Data\",\r\n        Auth: 'A_Data',\r\n        Code: 'DP_Data',\r\n        Supplier_Name: \"VR_Data\",\r\n        Supplier_Ref_No: \"NV_Data\",\r\n        Value:\"V_Data\"\r\n    }\r\n];\r\n\r\nconst useStyles = makeStyles((theme : Theme) => createStyles({\r\n    NominalVatableReceipt: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    NVtitle: {\r\n        fontSize: \"20px\",\r\n        fontWeight: \"bold\"\r\n    },\r\n    NVFieldWrapper: {\r\n        padding: \"10px 0\"\r\n    },\r\n    NVlabel: {\r\n        lineHeight: \"30px\",\r\n        paddingRight: theme.spacing(2)\r\n    },\r\n    NVformWrapper: {\r\n        paddingTop: theme.spacing(2)\r\n    },\r\n    NVtable: {\r\n        width: \"100%\"\r\n    },\r\n    buttonWrapper: {\r\n        margin: theme.spacing(0.5)\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n    wdtset: {\r\n        width: \"150px\"\r\n    }\r\n}));\r\n\r\nfunction AmmendOrderStatus() {\r\n    const classes = useStyles();\r\n\r\n    const [selectedDate,\r\n        setSelectedDate] = React.useState < Date | null > (new Date());\r\n\r\n    const [value,\r\n        setValue] = React.useState(0);\r\n\r\n    const handleDateChange = (date : Date | null) => {\r\n        setSelectedDate(date);\r\n    };\r\n    return (\r\n        <div>\r\n\r\n            <Typography\r\n                        className={classes.NVtitle}\r\n                        style={{\r\n                        margin: '10px'\r\n                    }}>Selection Criteria\r\n                    </Typography>\r\n\r\n\r\n            <div\r\n                className=\"row\"\r\n                style={{\r\n                display: 'flex'\r\n            }}>\r\n                <div\r\n                    className=\"col\"\r\n                    style={{\r\n                    width: \"40%\"\r\n                }}>\r\n                    \r\n                    <FormControl className={classes.formControl}>\r\n                        <div className={classes.NVFieldWrapper}>\r\n                            <label\r\n                                style={{\r\n                                paddingRight: \"47px\"\r\n                            }}\r\n                                className={classes.NVlabel}>Order No :  &nbsp;&nbsp; &nbsp;&nbsp;\r\n                            </label>\r\n                            <Select\r\n                                className={classes.wdtset}\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\">\r\n                                <MenuItem value={1}>\r\n                                    one\r\n                                </MenuItem>\r\n\r\n                                <MenuItem value={1}>\r\n                                    two\r\n                                </MenuItem>\r\n\r\n                            </Select>\r\n                        </div>\r\n</FormControl>\r\n\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label className={classes.NVlabel}>\r\n                            Supplier Refrence No :\r\n                        </label>\r\n                        <TextField\r\n                            style={{\r\n                            width: \"150px\"\r\n                        }}\r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                    </div>\r\n\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <label\r\n                                style={{\r\n                                lineHeight: \"55px\"\r\n                            }}>\r\n                                Order Document Date : &nbsp;\r\n                            </label>\r\n                            <KeyboardDatePicker\r\n                                style={{\r\n                                maxWidth: '150px'\r\n                            }}\r\n                                margin=\"normal\"\r\n                                id=\"date-picker-dialog\"\r\n                                format=\"MM/dd/yyyy\"\r\n                                value={selectedDate}\r\n                                onChange={handleDateChange}\r\n                                KeyboardButtonProps={{\r\n                                \"aria-label\": \"change date\"\r\n                            }}/>\r\n                        </MuiPickersUtilsProvider>\r\n\r\n                    </div>\r\n                </div>\r\n                <div\r\n                    className=\"col\"\r\n                    style={{\r\n                    width: \"30%\",\r\n                    paddingTop:\"33px\"\r\n                }}>\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label\r\n                            className={classes.NVlabel}\r\n                            style={{\r\n                            paddingRight: \"2px\"\r\n                        }}>\r\n                            Invoice No :\r\n                        </label>\r\n                        <TextField\r\n                            style={{\r\n                            width: \"150px\"\r\n                        }}\r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                    </div>\r\n\r\n                    <FormControl >\r\n                        <div className={classes.NVFieldWrapper}>\r\n                            <label\r\n                                style={{\r\n                                paddingRight: \"0px\"\r\n                            }}\r\n                                className={classes.NVlabel}>GRN No : &nbsp;&nbsp; &nbsp;&nbsp;\r\n                            </label>\r\n                            <Select\r\n                                className={classes.wdtset}\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\">\r\n                                <MenuItem value={1}>\r\n                                    one\r\n                                </MenuItem>\r\n\r\n                                <MenuItem value={1}>\r\n                                    two\r\n                                </MenuItem>\r\n\r\n                            </Select>\r\n                        </div>\r\n                        </FormControl>\r\n\r\n\r\n                    <Button style={{marginLeft:\"90px\"}} variant=\"contained\" className={classes.buttonWrapper}>\r\n                        Show All Orders \r\n                    </Button>\r\n\r\n                    \r\n                </div>\r\n                <div\r\n                    className=\"col\"\r\n                    style={{\r\n                    width: \"30%\",\r\n                    \r\n                }}>\r\n                    <FormControl >\r\n                        <div className={classes.NVFieldWrapper}>\r\n                            <label\r\n                                style={{\r\n                                paddingRight: \"34px\"\r\n                            }}\r\n                                className={classes.NVlabel}>Code : &nbsp;&nbsp; &nbsp;&nbsp;\r\n                            </label>\r\n                            <Select\r\n                                className={classes.wdtset}\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\">\r\n                                <MenuItem value={1}>\r\n                                    one\r\n                                </MenuItem>\r\n\r\n                                <MenuItem value={1}>\r\n                                    two\r\n                                </MenuItem>\r\n\r\n                            </Select>\r\n                        </div>\r\n                        </FormControl>\r\n\r\n                    <FormControl >\r\n                        <div className={classes.NVFieldWrapper}>\r\n                            <label\r\n                                style={{\r\n                                paddingRight: \"0px\"\r\n                            }}\r\n                                className={classes.NVlabel}>Short Name : &nbsp;&nbsp; &nbsp;&nbsp;\r\n                            </label>\r\n                            <Select\r\n                                className={classes.wdtset}\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\">\r\n                                <MenuItem value={1}>\r\n                                    one\r\n                                </MenuItem>\r\n\r\n                                <MenuItem value={1}>\r\n                                    two\r\n                                </MenuItem>\r\n\r\n                            </Select>\r\n                        </div>\r\n                        </FormControl>\r\n                        \r\n                        <FormControl >\r\n                        <div className={classes.NVFieldWrapper}>\r\n                            <label\r\n                                style={{\r\n                                paddingRight: \"16px\"\r\n                            }}\r\n                                className={classes.NVlabel}>Post Code : &nbsp;&nbsp; &nbsp;&nbsp;\r\n                            </label>\r\n                            <Select\r\n                                className={classes.wdtset}\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\">\r\n                                <MenuItem value={1}>\r\n                                    one\r\n                                </MenuItem>\r\n\r\n                                <MenuItem value={1}>\r\n                                    two\r\n                                </MenuItem>\r\n\r\n                            </Select>\r\n                        </div>\r\n                        </FormControl>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div\r\n                style={{\r\n                maxHeight: 400,\r\n                minHeight: 200,\r\n                width: '100%'\r\n            }}>\r\n\r\n                <Typography\r\n                        className={classes.NVtitle}\r\n                        style={{\r\n                        margin: '10px'\r\n                    }}>Current Orders (Live & On Hold)\r\n                    </Typography>\r\n\r\n                <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection/>\r\n            </div>\r\n\r\n            <div\r\n                className=\"\"\r\n                style={{\r\n                paddingBottom: \"50px\",\r\n                paddingRight: \"30px\",\r\n                paddingTop:\"50px\"\r\n            }}>\r\n                \r\n                <Button variant=\"contained\" className={classes.buttonWrapper}>\r\n                        Ammend Order\r\n                    </Button>\r\n\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={{\r\n                    float: \"right\"\r\n                }}\r\n                    className={classes.buttonWrapper}>\r\n                    Close\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AmmendOrderStatus\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\purchase-order-tab\\GenerateOrders.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\purchase-order-tab\\SupplierStockItems.tsx",["1346","1347","1348","1349","1350","1351"],"import React from 'react'\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport {DataGrid, ColDef} from '@material-ui/data-grid';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {MuiPickersUtilsProvider, KeyboardDatePicker} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst columns : ColDef[] = [\r\n    {\r\n        field: 'id',\r\n        headerName: 'Code',\r\n        width: 80\r\n    }, {\r\n        field: 'Supplier_Stock_Qty',\r\n        headerName: 'Supplier Stock Quantity',\r\n        width: 160\r\n    }, {\r\n        field: 'Last_Order_price',\r\n        headerName: 'Last Order price',\r\n        width: 130\r\n    }, {\r\n        field: 'Last_Order_Data',\r\n        headerName: 'Last_Order_Data',\r\n        width: 130\r\n    }, {\r\n        field: 'Supplier_List_Price',\r\n        headerName: 'Supplier List Price',\r\n        width: 140\r\n    }, {\r\n        field: 'List_Price_Updted',\r\n        headerName: 'List Price Updted',\r\n        width: 130\r\n    },\r\n    {\r\n        field: 'List_Price_Exin',\r\n        headerName: 'List Price Exin',\r\n        width: 130\r\n    },\r\n    {\r\n        field: 'Price_Source',\r\n        headerName: 'Price Source',\r\n        width: 130\r\n    }\r\n];\r\n\r\nconst rows = [\r\n    {\r\n        id: 'C_Data',\r\n        Supplier_Stock_Qty: \"SOQ_Data\",\r\n        Last_Order_price: \"LOP_Data\",\r\n        Last_Order_Data: 'LOD_Data',\r\n        Supplier_List_Price: 'SLP_Data',\r\n        List_Price_Updted: \"LPU_Data\",\r\n        List_Price_Exin: \"LPE_Data\",\r\n        Price_Source:\"PS_Data\"\r\n    }\r\n];\r\n\r\nconst useStyles = makeStyles((theme : Theme) => createStyles({\r\n    NominalVatableReceipt: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    NVtitle: {\r\n        fontSize: \"20px\",\r\n        fontWeight: \"bold\"\r\n    },\r\n    NVFieldWrapper: {\r\n        padding: \"10px 0\"\r\n    },\r\n    NVlabel: {\r\n        lineHeight: \"30px\",\r\n        paddingRight: theme.spacing(2)\r\n    },\r\n    NVformWrapper: {\r\n        paddingTop: theme.spacing(2)\r\n    },\r\n    NVtable: {\r\n        width: \"100%\"\r\n    },\r\n    buttonWrapper: {\r\n        margin: theme.spacing(0.5)\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n    wdtset: {\r\n        width: \"150px\"\r\n    }\r\n}));\r\n\r\nfunction SupplierStockItems() {\r\n    const classes = useStyles();\r\n\r\n    const [selectedDate,\r\n        setSelectedDate] = React.useState < Date | null > (new Date());\r\n\r\n\r\n    const handleDateChange = (date : Date | null) => {\r\n        setSelectedDate(date);\r\n    };\r\n    return (\r\n        <div>\r\n\r\n            <Typography\r\n                        className={classes.NVtitle}\r\n                        style={{\r\n                        margin: '10px'\r\n                    }}>Supplier Account\r\n                    </Typography>\r\n\r\n\r\n                <div\r\n                    className=\"col\"\r\n                    style={{\r\n                    width: \"40%\"\r\n                }}>\r\n                    \r\n                    <FormControl className={classes.formControl}>\r\n                        <div className={classes.NVFieldWrapper}>\r\n                            <label\r\n                                style={{\r\n                                paddingRight: \"47px\"\r\n                            }}\r\n                                className={classes.NVlabel}>Code :  &nbsp;&nbsp; &nbsp;&nbsp;\r\n                            </label>\r\n                            <Select\r\n                                className={classes.wdtset}\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\">\r\n                                <MenuItem value={1}>\r\n                                    one\r\n                                </MenuItem>\r\n\r\n                                <MenuItem value={1}>\r\n                                    two\r\n                                </MenuItem>\r\n\r\n                            </Select>\r\n                        </div>\r\n</FormControl>\r\n\r\n                    <FormControl className={classes.formControl}>\r\n                        <div className={classes.NVFieldWrapper}>\r\n                            <label\r\n                                style={{\r\n                                paddingRight: \"47px\"\r\n                            }}\r\n                                className={classes.NVlabel}>Short Name :  &nbsp;&nbsp; &nbsp;&nbsp;\r\n                            </label>\r\n                            <Select\r\n                                className={classes.wdtset}\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\">\r\n                                <MenuItem value={1}>\r\n                                    one\r\n                                </MenuItem>\r\n\r\n                                <MenuItem value={1}>\r\n                                    two\r\n                                </MenuItem>\r\n\r\n                            </Select>\r\n                        </div>\r\n</FormControl>\r\n\r\n                    <FormControl className={classes.formControl}>\r\n                        <div className={classes.NVFieldWrapper}>\r\n                            <label\r\n                                style={{\r\n                                paddingRight: \"47px\"\r\n                            }}\r\n                                className={classes.NVlabel}>Postcode : &nbsp;&nbsp;\r\n                            </label>\r\n                            <Select\r\n                                className={classes.wdtset}\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\">\r\n                                <MenuItem value={1}>\r\n                                    one\r\n                                </MenuItem>\r\n\r\n                                <MenuItem value={1}>\r\n                                    two\r\n                                </MenuItem>\r\n\r\n                            </Select>\r\n                        </div>\r\n</FormControl>\r\n                </div>\r\n                        \r\n\r\n\r\n            <div\r\n                style={{\r\n                maxHeight: 400,\r\n                minHeight: 200,\r\n                width: '100%'\r\n            }}>\r\n\r\n                <Typography\r\n                        className={classes.NVtitle}\r\n                        style={{\r\n                        margin: '10px'\r\n                    }}>Stock Items\r\n                    </Typography>\r\n\r\n                <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection/>\r\n            </div>\r\n\r\n            <div\r\n                className=\"\"\r\n                style={{\r\n                paddingBottom: \"50px\",\r\n                paddingRight: \"30px\",\r\n                paddingTop:\"50px\"\r\n            }}>\r\n                \r\n                <div\r\n                className=\"\" style={{paddingTop:\"10px\"}}\r\n                >\r\n                <Button size=\"small\"\r\n                    variant=\"contained\"\r\n                           className={classes.buttonWrapper}>\r\n                    Add\r\n                </Button>\r\n\r\n                 <Button size=\"small\"\r\n                    variant=\"contained\"\r\n                           className={classes.buttonWrapper}>\r\n                    Edit\r\n                </Button>\r\n\r\n                 <Button size=\"small\"\r\n                    variant=\"contained\"\r\n                           className={classes.buttonWrapper}>\r\n                    Remove\r\n                </Button>\r\n            </div>\r\n\r\n            <div\r\n                className=\"\"\r\n                style={{\r\n                paddingBottom: \"50px\",\r\n                paddingRight: \"30px\"\r\n            }}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={{\r\n                    float: \"right\"\r\n                }}\r\n                    className={classes.buttonWrapper}>\r\n                    Close\r\n                </Button>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SupplierStockItems\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Purchase-Return\\EnterNewPurchaseReturn.tsx",["1352","1353","1354","1355"],"import React from 'react'\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport {DataGrid, ColDef, ValueGetterParams} from '@material-ui/data-grid';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst columns : ColDef[] = [\r\n    {\r\n        field: 'id',\r\n        headerName: 'Item',\r\n        width: 130\r\n    }, {\r\n        field: 'Description',\r\n        headerName: 'Description',\r\n        width: 130\r\n    }, {\r\n        field: 'Quantity',\r\n        headerName: 'Quantity',\r\n        width: 130\r\n    }, {\r\n        field: 'Unit_Price',\r\n        headerName: 'Unit_Price',\r\n        width: 130\r\n    }, {\r\n        field: 'Disc_per',\r\n        headerName: 'Disc. %',\r\n        width: 130\r\n    }, {\r\n        field: 'Vat_Rate',\r\n        headerName: 'Vat Rate',\r\n        width: 130\r\n    }, {\r\n        field: 'Net_Value',\r\n        headerName: 'Net Value',\r\n        width: 130\r\n    }\r\n];\r\n\r\nconst rows = [\r\n    {\r\n        id: 'I_Data',\r\n        Description: \"D_Data\",\r\n        Quantity: \"Q_Data\",\r\n        Unit_Price: 'UP_Data',\r\n        Disc_per: 'DP_Data',\r\n        Vat_Rate: \"VR_Data\",\r\n        Net_Value: \"NV_Data\"\r\n    }\r\n];\r\n\r\nconst useStyles = makeStyles((theme : Theme) => createStyles({\r\n    NominalVatableReceipt: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    NVtitle: {\r\n        fontSize: \"20px\",\r\n        fontWeight: \"bold\"\r\n    },\r\n    NVFieldWrapper: {\r\n        padding: \"10px 0\"\r\n    },\r\n    NVlabel: {\r\n        lineHeight: \"30px\",\r\n        paddingRight: theme.spacing(2)\r\n    },\r\n    NVformWrapper: {\r\n        paddingTop: theme.spacing(2)\r\n    },\r\n    NVtable: {\r\n        width: \"100%\"\r\n    },\r\n    buttonWrapper: {\r\n        margin: theme.spacing(0.5)\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n    wdtset: {\r\n        width: \"150px\"\r\n    }\r\n}));\r\n\r\nfunction EnterNewPurchaseReturn() {\r\n    const classes = useStyles();\r\n\r\n    const [selectedDate,\r\n        setSelectedDate] = React.useState < Date | null > (new Date());\r\n\r\n    const [value,\r\n        setValue] = React.useState(0);\r\n\r\n    const handleDateChange = (date : Date | null) => {\r\n        setSelectedDate(date);\r\n    };\r\n    return (\r\n        <div>\r\n\r\n            <div className=\"row\" style={{\r\n                display: 'flex'\r\n            }}>\r\n                <div\r\n                    className=\"col\"\r\n                    style={{\r\n                    padding: \"20px\",\r\n                    width: \"50%\"\r\n                }}>\r\n                    <Typography\r\n                        className={classes.NVtitle}\r\n                        style={{\r\n                        margin: '10px'\r\n                    }}>Account Selection\r\n                    </Typography>\r\n                    <FormControl className={classes.formControl}>\r\n                        <div className={classes.NVFieldWrapper}>\r\n                            <label\r\n                                style={{\r\n                                paddingRight: \"54px\"\r\n                            }}\r\n                                className={classes.NVlabel}>Code : * &nbsp;&nbsp; &nbsp;&nbsp;\r\n                            </label>\r\n                            <Select\r\n                                className={classes.wdtset}\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\">\r\n                                <MenuItem value={1}>\r\n                                    one\r\n                                </MenuItem>\r\n\r\n                                <MenuItem value={1}>\r\n                                    two\r\n                                </MenuItem>\r\n\r\n                            </Select>\r\n                        </div>\r\n\r\n                        <div className={classes.NVFieldWrapper}>\r\n                            <label\r\n                                style={{\r\n                                paddingRight: \"22px\"\r\n                            }}\r\n                                className={classes.NVlabel}>Short Name :&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;\r\n                            </label>\r\n                            <Select\r\n                                className={classes.wdtset}\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\">\r\n                                <MenuItem value={1}>\r\n                                    one\r\n                                </MenuItem>\r\n\r\n                                <MenuItem value={1}>\r\n                                    two\r\n                                </MenuItem>\r\n\r\n                            </Select>\r\n                        </div>\r\n\r\n                        <div className={classes.NVFieldWrapper}>\r\n                            <label\r\n                                style={{\r\n                                paddingRight: \"41px\"\r\n                            }}\r\n                                className={classes.NVlabel}>Post Code : &nbsp;&nbsp; &nbsp;&nbsp;\r\n                            </label>\r\n                            <Select\r\n                                className={classes.wdtset}\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\">\r\n                                <MenuItem value={1}>\r\n                                    one\r\n                                </MenuItem>\r\n\r\n                                <MenuItem value={1}>\r\n                                    two\r\n                                </MenuItem>\r\n\r\n                            </Select>\r\n                        </div>\r\n\r\n                        <div className={classes.NVFieldWrapper}>\r\n                            <label\r\n                                className={classes.NVlabel}\r\n                                style={{\r\n                                paddingRight: \"85px\"\r\n                            }}>Name :\r\n                            </label>\r\n                            <TextField\r\n                                style={{\r\n                                width: \"150px\"\r\n                            }}\r\n                                id=\"outlined-size-small\"\r\n                                variant=\"outlined\"\r\n                                size=\"small\"/>\r\n                        </div>\r\n\r\n                        <div className={classes.NVFieldWrapper}>\r\n                            <label style={{scrollPaddingRight:\"0px\"}} className={classes.NVlabel}>By Default Supply From :\r\n                            </label>\r\n                            <Select\r\n                                className={classes.wdtset}\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\">\r\n                                <MenuItem value={1}>\r\n                                    one\r\n                                </MenuItem>\r\n\r\n                                <MenuItem value={1}>\r\n                                    two\r\n                                </MenuItem>\r\n\r\n                            </Select>\r\n                        </div>\r\n\r\n                    </FormControl>\r\n                </div>\r\n                <div\r\n                    className=\"col\"\r\n                    style={{\r\n                    padding: \"20px\",\r\n                    width: \"50%\"\r\n                }}>\r\n                    <Typography\r\n                        className={classes.NVtitle}\r\n                        style={{\r\n                        margin: '10px'\r\n                    }}>Return Details\r\n                    </Typography>\r\n\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label\r\n                            className={classes.NVlabel}\r\n                            style={{\r\n                            paddingRight: \"75px\"\r\n                        }}>Return No :\r\n                        </label>\r\n                        <TextField\r\n                            style={{\r\n                            width: \"150px\"\r\n                        }}\r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                    </div>\r\n\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label\r\n                            className={classes.NVlabel}\r\n                            style={{\r\n                            paddingRight: \"60px\"\r\n                        }}>Return Status :\r\n                        </label>\r\n                        <TextField\r\n                            style={{\r\n                            width: \"150px\"\r\n                        }}\r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                    </div>\r\n\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <label\r\n                                style={{\r\n                                lineHeight: \"55px\",\r\n                                paddingRight: \"41px\"\r\n                            }}>\r\n                                Document Date : &nbsp;\r\n                            </label>\r\n                            <KeyboardDatePicker\r\n                                style={{\r\n                                maxWidth: '150px'\r\n                            }}\r\n                                margin=\"normal\"\r\n                                id=\"date-picker-dialog\"\r\n                                format=\"MM/dd/yyyy\"\r\n                                value={selectedDate}\r\n                                onChange={handleDateChange}\r\n                                KeyboardButtonProps={{\r\n                                \"aria-label\": \"change date\"\r\n                            }}/>\r\n                        </MuiPickersUtilsProvider>\r\n\r\n                    </div>\r\n\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <label\r\n                                style={{\r\n                                lineHeight: \"55px\",\r\n                                paddingRight: \"26px\"\r\n                            }}>\r\n                                Despatch Date : &nbsp;\r\n                            </label>\r\n                            <KeyboardDatePicker\r\n                                style={{\r\n                                maxWidth: '150px'\r\n                            }}\r\n                                margin=\"normal\"\r\n                                id=\"date-picker-dialog\"\r\n                                format=\"MM/dd/yyyy\"\r\n                                value={selectedDate}\r\n                                onChange={handleDateChange}\r\n                                KeyboardButtonProps={{\r\n                                \"aria-label\": \"change date\"\r\n                            }}/>\r\n                        </MuiPickersUtilsProvider>\r\n\r\n                    </div>\r\n\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label\r\n                            className={classes.NVlabel}\r\n                            style={{\r\n                            paddingRight: \"\"\r\n                        }}>Supplier Reference No :\r\n                        </label>\r\n                        <TextField\r\n                            style={{\r\n                            width: \"150px\"\r\n                        }}\r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div\r\n                style={{\r\n                maxHeight: 400,\r\n                minHeight: 200,\r\n                width: '100%'\r\n            }}>\r\n                <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection/>\r\n            </div>\r\n\r\n            <div\r\n                className=\"row\"\r\n                style={{\r\n                display: 'flex',\r\n                padding: \"25px\"\r\n            }}>\r\n                <div\r\n                    className=\"col\"\r\n                    style={{\r\n                    width: \"40%\"\r\n                }}>\r\n                    <Button size=\"small\" variant=\"contained\" className={classes.buttonWrapper}>\r\n                        Add Items\r\n                    </Button>\r\n                    <Button\r\n                        size=\"small\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.buttonWrapper}>\r\n                        Edit Items\r\n                    </Button>\r\n                    <Button size=\"small\" variant=\"contained\" className={classes.buttonWrapper}>\r\n                        Delete Items\r\n                    </Button>\r\n                    <Button\r\n                        size=\"small\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.buttonWrapper}>\r\n                        Move Up\r\n                    </Button>\r\n                    <Button\r\n                        size=\"small\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.buttonWrapper}>\r\n                        Move Down\r\n                    </Button>\r\n\r\n                    <Typography\r\n                        className={classes.NVtitle}\r\n                        style={{\r\n                        margin: '10px'\r\n                    }}>Exchange Rate\r\n                    </Typography>\r\n\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label\r\n                            className={classes.NVlabel}\r\n                            style={{\r\n                            paddingRight: \"38px\"\r\n                        }}>\r\n                            Rate :\r\n                        </label>\r\n                        <TextField\r\n                            style={{\r\n                            width: \"150px\"\r\n                        }}\r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                    </div>\r\n\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label className={classes.NVlabel}>\r\n                            Currency :\r\n                        </label>\r\n                        <TextField\r\n                            style={{\r\n                            width: \"150px\"\r\n                        }}\r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                    </div>\r\n                </div>\r\n                <div\r\n                    className=\"col\"\r\n                    style={{\r\n                    width: \"30%\"\r\n                }}>\r\n                    <Typography\r\n                        className={classes.NVtitle}\r\n                        style={{\r\n                        margin: '10px'\r\n                    }}>Subtotals\r\n                    </Typography>\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label\r\n                            className={classes.NVlabel}\r\n                            style={{\r\n                            paddingRight: \"37px\"\r\n                        }}>\r\n                            Goods :\r\n                        </label>\r\n                        <TextField\r\n                            style={{\r\n                            width: \"150px\"\r\n                        }}\r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                    </div>\r\n\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label\r\n                            style={{\r\n                            paddingRight: \"30px\"\r\n                        }}\r\n                            className={classes.NVlabel}>\r\n                            Charges :\r\n                        </label>\r\n                        <TextField\r\n                            style={{\r\n                            width: \"150px\"\r\n                        }}\r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                    </div>\r\n\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label className={classes.NVlabel}>\r\n                            Order Disc. :\r\n                        </label>\r\n                        <TextField\r\n                            style={{\r\n                            width: \"150px\"\r\n                        }}\r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                    </div>\r\n\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label\r\n                            style={{\r\n                            paddingRight: \"32px\"\r\n                        }}\r\n                            className={classes.NVlabel}>\r\n                            Lnd Csts :\r\n                        </label>\r\n                        <TextField\r\n                            style={{\r\n                            width: \"150px\"\r\n                        }}\r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                    </div>\r\n                </div>\r\n                <div\r\n                    className=\"col\"\r\n                    style={{\r\n                    width: \"30%\"\r\n                }}>\r\n                    <Typography\r\n                        className={classes.NVtitle}\r\n                        style={{\r\n                        margin: '10px'\r\n                    }}>Totals\r\n                    </Typography>\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label\r\n                            className={classes.NVlabel}\r\n                            style={{\r\n                            paddingRight: \"\"\r\n                        }}>\r\n                            Net :\r\n                        </label>\r\n                        <TextField\r\n                            style={{\r\n                            width: \"150px\"\r\n                        }}\r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                    </div>\r\n\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label className={classes.NVlabel}>\r\n                            VAT :\r\n                        </label>\r\n                        <TextField\r\n                            style={{\r\n                            width: \"150px\"\r\n                        }}\r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                    </div>\r\n\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label\r\n                            className={classes.NVlabel}\r\n                            style={{\r\n                            paddingRight: \"8px\"\r\n                        }}>\r\n                            Gross :\r\n                        </label>\r\n                        <TextField\r\n                            style={{\r\n                            width: \"150px\"\r\n                        }}\r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"\">\r\n                <div\r\n                    className=\"col\"\r\n                    style={{\r\n                    width: \"40%\",\r\n                    paddingBottom: \"30px\",\r\n                    paddingLeft: \"25px\"\r\n                }}>\r\n                    <Button variant=\"contained\" className={classes.buttonWrapper}>\r\n                        Save\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"primary\" className={classes.buttonWrapper}>\r\n                        Copy\r\n                    </Button>\r\n                    <Button variant=\"contained\" className={classes.buttonWrapper}>\r\n                        Copy Order\r\n                    </Button>\r\n                </div>\r\n\r\n            </div>\r\n            <div\r\n                className=\"\"\r\n                style={{\r\n                paddingBottom: \"50px\",\r\n                paddingRight: \"30px\"\r\n            }}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={{\r\n                    float: \"right\"\r\n                }}\r\n                    className={classes.buttonWrapper}>\r\n                    Close\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EnterNewPurchaseReturn\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Purchase-Return\\AmendReurn.tsx",["1356","1357","1358","1359","1360"],"import React from 'react'\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {createStyles, makeStyles, Theme, withStyles} from \"@material-ui/core/styles\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport {DataGrid, ColDef, ValueGetterParams} from '@material-ui/data-grid';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst columns : ColDef[] = [\r\n    {\r\n        field: 'id',\r\n        headerName: 'Return No',\r\n        width: 130\r\n    }, {\r\n        field: 'Return_Data',\r\n        headerName: 'Return Data',\r\n        width: 130\r\n    }, {\r\n        field: 'Return_Status',\r\n        headerName: 'Return Status',\r\n        width: 130\r\n    }, {\r\n        field: 'Code',\r\n        headerName: 'Code',\r\n        width: 130\r\n    }, {\r\n        field: 'Supplier_Name',\r\n        headerName: 'Supplier_Name',\r\n        width: 130\r\n    },\r\n    {\r\n        field: 'Supplier_Ref_No',\r\n        headerName: 'Supplier_Ref_No',\r\n        width: 130\r\n    },\r\n    {\r\n        field: 'Value',\r\n        headerName: 'Value',\r\n        width: 130\r\n    }\r\n];\r\n\r\nconst rows = [\r\n    {\r\n        id: 'ON_Data',\r\n        Return_Data: \"O_Data\",\r\n        Return_Status: \"OS_Data\",\r\n        Code: 'DP_Data',\r\n        Supplier_Name: \"VR_Data\",\r\n        Supplier_Ref_No: \"NV_Data\",\r\n        Value:\"V_Data\"\r\n    }\r\n];\r\n\r\nconst useStyles = makeStyles((theme : Theme) => createStyles({\r\n    NominalVatableReceipt: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    NVtitle: {\r\n        fontSize: \"20px\",\r\n        fontWeight: \"bold\"\r\n    },\r\n    NVFieldWrapper: {\r\n        padding: \"10px 0\"\r\n    },\r\n    NVlabel: {\r\n        lineHeight: \"30px\",\r\n        paddingRight: theme.spacing(2)\r\n    },\r\n    NVformWrapper: {\r\n        paddingTop: theme.spacing(2)\r\n    },\r\n    NVtable: {\r\n        width: \"100%\"\r\n    },\r\n    buttonWrapper: {\r\n        margin: theme.spacing(0.5)\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n    wdtset: {\r\n        width: \"150px\"\r\n    }\r\n}));\r\n\r\nfunction AmmendReturn() {\r\n    const classes = useStyles();\r\n\r\n    const [selectedDate,\r\n        setSelectedDate] = React.useState < Date | null > (new Date());\r\n\r\n    const [value,\r\n        setValue] = React.useState(0);\r\n\r\n    const handleDateChange = (date : Date | null) => {\r\n        setSelectedDate(date);\r\n    };\r\n    return (\r\n        <div>\r\n\r\n            <Typography\r\n                        className={classes.NVtitle}\r\n                        style={{\r\n                        margin: '10px'\r\n                    }}>Selection Criteria\r\n                    </Typography>\r\n\r\n\r\n            <div\r\n                className=\"row\"\r\n                style={{\r\n                display: 'flex'\r\n            }}>\r\n                <div\r\n                    className=\"col\"\r\n                    style={{\r\n                    width: \"40%\",\r\n                    paddingLeft:\"15px\"\r\n                }}>\r\n                    \r\n                    <FormControl className={classes.formControl}>\r\n                        <div className={classes.NVFieldWrapper}>\r\n                            <label\r\n                                style={{\r\n                                paddingRight: \"47px\"\r\n                            }}\r\n                                className={classes.NVlabel}>Return No :  &nbsp;&nbsp; &nbsp;&nbsp;\r\n                            </label>\r\n                            <Select\r\n                                className={classes.wdtset}\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\">\r\n                                <MenuItem value={1}>\r\n                                    one\r\n                                </MenuItem>\r\n\r\n                                <MenuItem value={1}>\r\n                                    two\r\n                                </MenuItem>\r\n\r\n                            </Select>\r\n                        </div>\r\n</FormControl>\r\n\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label className={classes.NVlabel}>\r\n                            Supplier Refrence No :\r\n                        </label>\r\n                        <TextField\r\n                            style={{\r\n                            width: \"150px\"\r\n                        }}\r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                    </div>\r\n\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <label\r\n                                style={{\r\n                                lineHeight: \"55px\"\r\n                            }}>\r\n                                Return Document Date : &nbsp;\r\n                            </label>\r\n                            <KeyboardDatePicker\r\n                                style={{\r\n                                maxWidth: '150px'\r\n                            }}\r\n                                margin=\"normal\"\r\n                                id=\"date-picker-dialog\"\r\n                                format=\"MM/dd/yyyy\"\r\n                                value={selectedDate}\r\n                                onChange={handleDateChange}\r\n                                KeyboardButtonProps={{\r\n                                \"aria-label\": \"change date\"\r\n                            }}/>\r\n                        </MuiPickersUtilsProvider>\r\n\r\n                    </div>\r\n                </div>\r\n                <div\r\n                    className=\"col\"\r\n                    style={{\r\n                    width: \"30%\",\r\n                    paddingTop:\"33px\"\r\n                }}>\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label\r\n                            className={classes.NVlabel}\r\n                            style={{\r\n                            paddingRight: \"2px\"\r\n                        }}>\r\n                            Credit No :\r\n                        </label>\r\n                        <TextField\r\n                            style={{\r\n                            width: \"150px\"\r\n                        }}\r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                    </div>\r\n\r\n                    <FormControl >\r\n                        <div className={classes.NVFieldWrapper}>\r\n                            <label\r\n                                style={{\r\n                                paddingRight: \"0px\"\r\n                            }}\r\n                                className={classes.NVlabel}>GRN No : &nbsp;&nbsp; &nbsp;&nbsp;\r\n                            </label>\r\n                            <Select\r\n                                className={classes.wdtset}\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\">\r\n                                <MenuItem value={1}>\r\n                                    one\r\n                                </MenuItem>\r\n\r\n                                <MenuItem value={1}>\r\n                                    two\r\n                                </MenuItem>\r\n\r\n                            </Select>\r\n                        </div>\r\n                        </FormControl>\r\n\r\n\r\n                    <Button style={{marginLeft:\"90px\"}} variant=\"contained\" className={classes.buttonWrapper}>\r\n                        Show All Returns \r\n                    </Button>\r\n\r\n                    \r\n                </div>\r\n                <div\r\n                    className=\"col\"\r\n                    style={{\r\n                    width: \"30%\",\r\n                    \r\n                }}>\r\n                    <FormControl >\r\n                        <div className={classes.NVFieldWrapper}>\r\n                            <label\r\n                                style={{\r\n                                paddingRight: \"34px\"\r\n                            }}\r\n                                className={classes.NVlabel}>Code : &nbsp;&nbsp; &nbsp;&nbsp;\r\n                            </label>\r\n                            <Select\r\n                                className={classes.wdtset}\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\">\r\n                                <MenuItem value={1}>\r\n                                    one\r\n                                </MenuItem>\r\n\r\n                                <MenuItem value={1}>\r\n                                    two\r\n                                </MenuItem>\r\n\r\n                            </Select>\r\n                        </div>\r\n                        </FormControl>\r\n\r\n                    <FormControl >\r\n                        <div className={classes.NVFieldWrapper}>\r\n                            <label\r\n                                style={{\r\n                                paddingRight: \"0px\"\r\n                            }}\r\n                                className={classes.NVlabel}>Short Name : &nbsp;&nbsp; &nbsp;&nbsp;\r\n                            </label>\r\n                            <Select\r\n                                className={classes.wdtset}\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\">\r\n                                <MenuItem value={1}>\r\n                                    one\r\n                                </MenuItem>\r\n\r\n                                <MenuItem value={1}>\r\n                                    two\r\n                                </MenuItem>\r\n\r\n                            </Select>\r\n                        </div>\r\n                        </FormControl>\r\n                        \r\n                        <FormControl >\r\n                        <div className={classes.NVFieldWrapper}>\r\n                            <label\r\n                                style={{\r\n                                paddingRight: \"16px\"\r\n                            }}\r\n                                className={classes.NVlabel}>Post Code : &nbsp;&nbsp; &nbsp;&nbsp;\r\n                            </label>\r\n                            <Select\r\n                                className={classes.wdtset}\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\">\r\n                                <MenuItem value={1}>\r\n                                    one\r\n                                </MenuItem>\r\n\r\n                                <MenuItem value={1}>\r\n                                    two\r\n                                </MenuItem>\r\n\r\n                            </Select>\r\n                        </div>\r\n                        </FormControl>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div\r\n                style={{\r\n                maxHeight: 400,\r\n                minHeight: 200,\r\n                width: '100%'\r\n            }}>\r\n\r\n                <Typography\r\n                        className={classes.NVtitle}\r\n                        style={{\r\n                        margin: '10px'\r\n                    }}>All Returns\r\n                    </Typography>\r\n\r\n                <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection/>\r\n            </div>\r\n\r\n            <div\r\n                className=\"\"\r\n                style={{\r\n                paddingBottom: \"50px\",\r\n                paddingRight: \"30px\",\r\n                paddingTop:\"50px\"\r\n            }}>\r\n                \r\n                <Button variant=\"contained\" className={classes.buttonWrapper}>\r\n                        Ammend Return\r\n                    </Button>\r\n\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={{\r\n                    float: \"right\"\r\n                }}\r\n                    className={classes.buttonWrapper}>\r\n                    Close\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AmmendReturn\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Purchase-Return\\AmendReturnStatus.tsx",["1361","1362","1363","1364","1365"],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Processing\\AuthoriseOrders.tsx",["1366","1367","1368","1369","1370","1371","1372","1373","1374","1375","1376","1377","1378","1379"],"import React from 'react'\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {createStyles, makeStyles, Theme, withStyles} from \"@material-ui/core/styles\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport {DataGrid, ColDef, ValueGetterParams} from '@material-ui/data-grid';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox, { CheckboxProps } from '@material-ui/core/Checkbox';\r\n\r\nconst columns : ColDef[] = [\r\n    {\r\n        field: 'id',\r\n        headerName: 'Order_No',\r\n        width: 130\r\n    }, {\r\n        field: 'Order_Date',\r\n        headerName: 'Order_Data',\r\n        width: 130\r\n    }, {\r\n        field: 'Code',\r\n        headerName: 'Code',\r\n        width: 130\r\n    }, {\r\n        field: 'Name',\r\n        headerName: 'Name',\r\n        width: 130\r\n    }, {\r\n        field: 'Supplier_Ref_No',\r\n        headerName: 'Supplier_Ref_No',\r\n        width: 130\r\n    },\r\n    {\r\n        field: 'Order_Placed',\r\n        headerName: 'Order Placed',\r\n        width: 130\r\n    },\r\n    {\r\n        field: 'Order_Origination',\r\n        headerName: 'Order_Origination',\r\n        width: 140\r\n    },\r\n    {\r\n        field: 'Value',\r\n        headerName: 'Value',\r\n        width: 130\r\n    }\r\n];\r\n\r\nconst rows = [\r\n    {\r\n        id: 'ON_Data',\r\n        Order_Date: \"OD_Data\",\r\n        Code: \"C_Data\",\r\n        Name: 'N_Data',\r\n        Supplier_Ref_No: \"SRN_Data\",\r\n        Order_Placed: \"OP_Data\",\r\n        Order_Origination:\"OO_Data\",\r\n        Value:\"V_Data\"\r\n    }\r\n];\r\n\r\nconst useStyles = makeStyles((theme : Theme) => createStyles({\r\n    NominalVatableReceipt: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    NVtitle: {\r\n        fontSize: \"20px\",\r\n        fontWeight: \"bold\"\r\n    },\r\n    NVFieldWrapper: {\r\n        padding: \"10px 0\"\r\n    },\r\n    NVlabel: {\r\n        lineHeight: \"30px\",\r\n        paddingRight: theme.spacing(2)\r\n    },\r\n    NVformWrapper: {\r\n        paddingTop: theme.spacing(2)\r\n    },\r\n    NVtable: {\r\n        width: \"100%\"\r\n    },\r\n    buttonWrapper: {\r\n        margin: theme.spacing(0.5)\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n    wdtset: {\r\n        width: \"150px\"\r\n    }\r\n}));\r\n\r\nfunction AuthoriseOrders() {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true,\r\n    checkedF: true,\r\n    checkedG: true,\r\n  });\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n    const [selectedDate,\r\n        setSelectedDate] = React.useState < Date | null > (new Date());\r\n\r\n    const [value,\r\n        setValue] = React.useState(0);\r\n\r\n    const handleDateChange = (date : Date | null) => {\r\n        setSelectedDate(date);\r\n    };\r\n    return (\r\n        <div>\r\n\r\n            <Typography\r\n                        className={classes.NVtitle}\r\n                        style={{\r\n                        margin: '10px'\r\n                    }}>Select Orders To Authorise\r\n                    </Typography>\r\n\r\n\r\n            <div\r\n                style={{\r\n                maxHeight: 400,\r\n                minHeight: 200,\r\n                width: '100%'\r\n            }}>\r\n\r\n                <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection/>\r\n            </div>\r\n\r\n            <div\r\n                className=\"\"\r\n                style={{\r\n                paddingBottom: \"50px\",\r\n                paddingLeft: \"20px\",\r\n                paddingTop:\"10px\",\r\n                paddingRight:\"30px\"\r\n            }}>\r\n\r\n                <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={state.checkedB}\r\n            onChange={handleChange}\r\n            name=\"checkedB\"\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"Include Super Authoriser orders\"\r\n      />\r\n\r\n      <div style={{display:\"flex\",float:\"right\"}}>\r\n                        <label style={{paddingRight:\"10px\",lineHeight:\"2.5\"}}>\r\n                            Total To Authorise :\r\n                        </label>\r\n                        <TextField\r\n                            style={{\r\n                            width: \"150px\"\r\n                        }}\r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                    </div>\r\n                <div\r\n                className=\"\" style={{paddingTop:\"10px\"}}\r\n                >\r\n                <Button size=\"small\"\r\n                    variant=\"contained\"\r\n                           className={classes.buttonWrapper}>\r\n                    Authorise\r\n                </Button>\r\n\r\n                 <Button size=\"small\"\r\n                    variant=\"contained\"\r\n                           className={classes.buttonWrapper}>\r\n                    View Order\r\n                </Button>\r\n\r\n                 <Button size=\"small\"\r\n                    variant=\"contained\"\r\n                           className={classes.buttonWrapper}>\r\n                    Find\r\n                </Button>\r\n\r\n                <Button size=\"small\"\r\n                    variant=\"contained\"\r\n                           className={classes.buttonWrapper}>\r\n                    Query\r\n                </Button>\r\n            </div>\r\n\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={{\r\n                    float: \"right\"\r\n                }}\r\n                    className={classes.buttonWrapper}>\r\n                    Close\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthoriseOrders\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Processing\\AmendPurchaseOrderNotification.tsx",["1380","1381","1382","1383","1384","1385"],"import React from 'react'\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {createStyles, makeStyles, Theme, withStyles} from \"@material-ui/core/styles\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport {DataGrid, ColDef, ValueGetterParams} from '@material-ui/data-grid';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst columns : ColDef[] = [\r\n    {\r\n        field: 'id',\r\n        headerName: 'From',\r\n        width: 300\r\n    }, {\r\n        field: 'Subject',\r\n        headerName: 'Subject',\r\n        width: 300\r\n    }, {\r\n        field: 'Date',\r\n        headerName: 'Date',\r\n        width: 300\r\n    },\r\n];\r\n\r\nconst rows = [\r\n    {\r\n        id: 'F_Data',\r\n        Subject: \"S_Data\",\r\n        Date: \"D_Data\",\r\n    }\r\n];\r\n\r\nconst useStyles = makeStyles((theme : Theme) => createStyles({\r\n    NominalVatableReceipt: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    NVtitle: {\r\n        fontSize: \"20px\",\r\n        fontWeight: \"bold\"\r\n    },\r\n    NVFieldWrapper: {\r\n        padding: \"10px 0\"\r\n    },\r\n    NVlabel: {\r\n        lineHeight: \"30px\",\r\n        paddingRight: theme.spacing(2)\r\n    },\r\n    NVformWrapper: {\r\n        paddingTop: theme.spacing(2)\r\n    },\r\n    NVtable: {\r\n        width: \"100%\"\r\n    },\r\n    buttonWrapper: {\r\n        margin: theme.spacing(0.5)\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n    wdtset: {\r\n        width: \"150px\"\r\n    }\r\n}));\r\n\r\nfunction AmendPurchaseOrderNotification() {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useState({\r\n    checkedB: true,\r\n  });\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n    const [selectedDate,\r\n        setSelectedDate] = React.useState < Date | null > (new Date());\r\n\r\n    const [value,\r\n        setValue] = React.useState(0);\r\n\r\n    const handleDateChange = (date : Date | null) => {\r\n        setSelectedDate(date);\r\n    };\r\n    return (\r\n        <div>\r\n\r\n            <Typography\r\n                        className={classes.NVtitle}\r\n                        style={{\r\n                        margin: '10px'\r\n                    }}>POP Order Details\r\n                    </Typography>\r\n\r\n                    <div style={{display:\"flex\",marginBottom:\"15px\",justifyContent:\"space-around\"}}>\r\n                        <span>\r\n                            <label style={{paddingRight:\"10px\",lineHeight:\"2.5\"}}>\r\n                            Order No :\r\n                        </label>\r\n                        <TextField\r\n                            style={{\r\n                            width: \"150px\"\r\n                        }}\r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                        </span>\r\n\r\n                        <span>\r\n                            <label style={{paddingRight:\"10px\",lineHeight:\"2.5\"}}>\r\n                            Value :\r\n                        </label>\r\n                        <TextField\r\n                            style={{\r\n                            width: \"150px\"\r\n                        }}\r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                        </span>\r\n\r\n                        <span>\r\n                            <label style={{paddingRight:\"10px\",lineHeight:\"2.5\"}}>\r\n                            Authorisation Status :\r\n                        </label>\r\n                        <TextField\r\n                            style={{\r\n                            width: \"150px\"\r\n                        }}\r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                        </span>\r\n                        \r\n                    </div>\r\n\r\n            <div\r\n                style={{\r\n                    \r\n                maxHeight: 400,\r\n                minHeight: 200,\r\n                width: '100%',\r\n                margin:\"5px\"\r\n            }}>\r\n\r\n                <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection/>\r\n            </div>\r\n\r\n            <Typography\r\n                        className={classes.NVtitle}\r\n                        style={{\r\n                        margin: '10px'\r\n                    }}>Details\r\n                    </Typography>\r\n\r\n                    <div style={{display:\"flex\",marginBottom:\"15px\",justifyContent:\"space-around\"}}>\r\n                        <span>\r\n                            <label style={{paddingRight:\"10px\",lineHeight:\"2.5\"}}>\r\n                            From :\r\n                        </label>\r\n                        <Select\r\n                                className={classes.wdtset}\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\">\r\n                                <MenuItem value={1}>\r\n                                    one\r\n                                </MenuItem>\r\n\r\n                                <MenuItem value={1}>\r\n                                    two\r\n                                </MenuItem>\r\n\r\n                            </Select>\r\n                        </span>\r\n\r\n                        <span>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <label\r\n                                style={{\r\n                                lineHeight: \"55px\"\r\n                            }}>\r\n                                Due Date : &nbsp;\r\n                            </label>\r\n                            <KeyboardDatePicker\r\n                                style={{\r\n                                maxWidth: '150px'\r\n                            }}\r\n                                margin=\"normal\"\r\n                                id=\"date-picker-dialog\"\r\n                                format=\"MM/dd/yyyy\"\r\n                                value={selectedDate}\r\n                                onChange={handleDateChange}\r\n                                KeyboardButtonProps={{\r\n                                \"aria-label\": \"change date\"\r\n                            }}/>\r\n                        </MuiPickersUtilsProvider>\r\n                        </span>\r\n                        \r\n                    </div>\r\n\r\n                    <div style={{display:\"flex\",marginBottom:\"15px\",paddingLeft:\"151px\"}}>\r\n                        <span>\r\n                            <label style={{paddingRight:\"10px\",lineHeight:\"2.5\"}}>\r\n                            Order No :\r\n                        </label>\r\n                        <TextField\r\n                            style={{\r\n                            width: \"150px\"\r\n                        }}\r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                        </span>\r\n                        \r\n                    </div>\r\n\r\n                    <div style={{display:\"flex\",marginBottom:\"15px\",justifyContent:\"space-around\"}}>\r\n                        <span>\r\n                            <label style={{paddingRight:\"10px\",lineHeight:\"2.5\"}}>\r\n                            Order No :\r\n                        </label>\r\n                        <TextField\r\n                            style={{\r\n                            width: \"150px\"\r\n                        }}\r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                        </span>\r\n\r\n                        <span>\r\n                            <label style={{paddingRight:\"10px\",lineHeight:\"2.5\"}}>\r\n                            Value :\r\n                        </label>\r\n                        <TextField\r\n                            style={{\r\n                            width: \"150px\"\r\n                        }}\r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                        </span>\r\n                        \r\n                    </div>\r\n\r\n                    <Button\r\n                    variant=\"contained\"\r\n                    style={{\r\n                    float: \"left\",\r\n                    marginLeft:\"20px\"\r\n                }}\r\n                    className={classes.buttonWrapper}>\r\n                    New Notification\r\n                </Button>\r\n                    \r\n                    <Button\r\n                    variant=\"contained\"\r\n                    style={{\r\n                    float: \"right\",\r\n                    marginRight:\"20px\"\r\n                }}\r\n                    className={classes.buttonWrapper}>\r\n                    Close\r\n                </Button>\r\n                    </div>\r\n    )\r\n}\r\n\r\nexport default AmendPurchaseOrderNotification\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Processing\\POA\\PurchaseOrderAuthorisation.tsx",["1386","1387","1388","1389","1390","1391","1392"],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Processing\\POA\\MPOA_List.tsx",["1393","1394","1395","1396","1397","1398"],"import React from \"react\";\r\nimport {createStyles, makeStyles, Theme, withStyles} from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme : Theme) => createStyles({\r\n  table: {\r\n    minWidth: 650\r\n  },NVtitle: {\r\n        fontSize: \"20px\",\r\n        fontWeight: \"bold\"\r\n    },NVlabel: {\r\n        lineHeight: \"20px\",\r\n        paddingRight: theme.spacing(1),\r\n        fontSize:'12px',\r\n        fontStyle:'none',\r\n        color:'#008000'\r\n    }\r\n})\r\n);\r\n\r\nfunction createData(\r\n  Document_Date: string,\r\n  Authorised_Date:string,\r\n  Document_No: number,\r\n  Document_Status: string,\r\n  Document_Print_Status:string,\r\n  Supplier_Code: string,\r\n  Supplier_Name: string,\r\n  Order_Originator: number,\r\n  Order_Created_By: number,\r\n  Authorisation_Status: number,\r\n  Total_Gross_Value: number,\r\n) {\r\n  return {\r\n  Document_Date,\r\n  Authorised_Date,\r\n    Document_No,\r\n  Document_Status,\r\n  Document_Print_Status,\r\n  Supplier_Code,\r\n  Supplier_Name,\r\n  Order_Originator,\r\n  Order_Created_By,\r\n  Authorisation_Status,\r\n  Total_Gross_Value\r\n  };\r\n}\r\n\r\nconst rows = [\r\n  createData(\r\n    \"03/10/2000\",\r\n    \"AD_Data\",\r\n    112,\r\n    \"Req data\",\r\n    \"DPS\",\r\n    \"123\",\r\n    \"IN_Data\",\r\n    234,\r\n    567,\r\n    890,\r\n    980,\r\n  )\r\n];\r\n\r\nexport default function PurchaseOrderAuthorisation() {\r\n  const classes = useStyles();\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n    const [page, setPage] = React.useState(0);\r\n\r\n    const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n      <div className=\"\">\r\n          <Typography style={{marginLeft:'11px'}} className={classes.NVtitle} >My Purchase Order Authorised List\r\n            </Typography>\r\n      <div style={{marginLeft:'13px'}}>\r\n          <a href=\"\" className={classes.NVlabel}>Purchase Document Enquiry |</a> \r\n        <a href=\"\" className={classes.NVlabel}>Actions |</a>\r\n          <a href=\"\" className={classes.NVlabel}>Export |</a>\r\n          <a href=\"\" className={classes.NVlabel}>Print |</a>\r\n          <a href=\"\" className={classes.NVlabel}>Refresh</a>\r\n          </div>\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n              <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n          />\r\n        </TableCell>\r\n            <TableCell>Document_Date</TableCell>\r\n            <TableCell  align=\"right\">Authorise_Date</TableCell>\r\n            <TableCell  align=\"right\">Document_No</TableCell>\r\n            <TableCell align=\"right\">Document_Status</TableCell>\r\n            <TableCell  align=\"right\">Document_Print_Status</TableCell>\r\n            <TableCell align=\"right\">Supplier_Code</TableCell>\r\n            <TableCell align=\"right\">Supplier_Name</TableCell>\r\n            <TableCell align=\"right\">Order_Originator</TableCell>\r\n            <TableCell align=\"right\">Order_Created_By</TableCell>\r\n            <TableCell align=\"right\">Authorisation_Status</TableCell>\r\n            <TableCell align=\"right\">Total_Gross_Value</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.Document_No}>\r\n                <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n          />\r\n        </TableCell>\r\n              <TableCell align=\"right\">{row.Document_Date}</TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">{row.Authorised_Date} </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">{row.Document_No} </TableCell>\r\n              <TableCell align=\"right\">{row.Document_Status}</TableCell>\r\n              <TableCell align=\"right\">{row.Document_Print_Status}</TableCell>\r\n              <TableCell align=\"right\">{row.Supplier_Code}</TableCell>\r\n              <TableCell align=\"right\">{row.Supplier_Name}</TableCell>\r\n              <TableCell align=\"right\">{row.Order_Originator}</TableCell>\r\n              <TableCell align=\"right\">{row.Order_Created_By}</TableCell>\r\n              <TableCell align=\"right\">{row.Authorisation_Status}</TableCell>\r\n              <TableCell align=\"right\">{row.Total_Gross_Value}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n<TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />    </TableContainer>\r\n    </div>\r\n  );\r\n}\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Processing\\PurchaseOrderNotification.tsx",["1399","1400","1401","1402","1403","1404","1405","1406"],"import React from \"react\";\r\nimport {createStyles, makeStyles, Theme, withStyles} from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme : Theme) => createStyles({\r\n  table: {\r\n    minWidth: 650\r\n  },NVtitle: {\r\n        fontSize: \"20px\",\r\n        fontWeight: \"bold\"\r\n    },NVlabel: {\r\n        lineHeight: \"20px\",\r\n        paddingRight: theme.spacing(1),\r\n        fontSize:'12px',\r\n        fontStyle:'none',\r\n        color:'#008000'\r\n    }\r\n})\r\n);\r\n\r\nfunction createData(\r\n  Order_No: string,\r\n  Message:string,\r\n  Sent_By: string,\r\n  Date: string,\r\n  Due_Date:string,\r\n  Order_Tracker: string,\r\n  Order_Originator: string,\r\n  Sent: string,\r\n  Type: string,\r\n) {\r\n  return {\r\n  Order_No,\r\n  Message,\r\n    Sent_By,\r\n  Date,\r\n  Due_Date,\r\n  Order_Tracker,\r\n  Order_Originator,\r\n  Sent,\r\n  Type,\r\n  };\r\n}\r\n\r\nconst rows = [\r\n  createData(\r\n    \"03/10/2000\",\r\n    \"AD_Data\",\r\n    \"112\",\r\n    \"Req data\",\r\n    \"DPS\",\r\n    \"123\",\r\n    \"IN_Data\",\r\n    \"234\",\r\n    \"567\",\r\n  )\r\n];\r\n\r\nexport default function PurchaseOrderNotification() {\r\n  const classes = useStyles();\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n    const [page, setPage] = React.useState(0);\r\n\r\n    const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n      <div className=\"\">\r\n          <Typography style={{marginLeft:'11px'}} className={classes.NVtitle} >Purchase Order Notification List\r\n            </Typography>\r\n      <div style={{marginLeft:'13px'}}>\r\n          <a href=\"\" className={classes.NVlabel}>View Details |</a>\r\n          <a href=\"\" className={classes.NVlabel}>Authorise Orders |</a> \r\n          <a href=\"\" className={classes.NVlabel}>Query Order |</a>\r\n        <a href=\"\" className={classes.NVlabel}>Actions |</a>\r\n          <a href=\"\" className={classes.NVlabel}>Export |</a>\r\n          <a href=\"\" className={classes.NVlabel}>Print |</a>\r\n          <a href=\"\" className={classes.NVlabel}>Refresh</a>\r\n          </div>\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n              <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n          />\r\n        </TableCell>\r\n            <TableCell>Order_No</TableCell>\r\n            <TableCell  align=\"right\">Authorise_Date</TableCell>\r\n            <TableCell  align=\"right\">Sent_By</TableCell>\r\n            <TableCell align=\"right\">Date</TableCell>\r\n            <TableCell  align=\"right\">Due_Date</TableCell>\r\n            <TableCell align=\"right\">Order_Tracker</TableCell>\r\n            <TableCell align=\"right\">Order_Originator</TableCell>\r\n            <TableCell align=\"right\">Sent</TableCell>\r\n            <TableCell align=\"right\">Type</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.Sent_By}>\r\n                <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n          />\r\n        </TableCell>\r\n              <TableCell align=\"right\">{row.Order_No}</TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">{row.Message} </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">{row.Sent_By} </TableCell>\r\n              <TableCell align=\"right\">{row.Date}</TableCell>\r\n              <TableCell align=\"right\">{row.Due_Date}</TableCell>\r\n              <TableCell align=\"right\">{row.Order_Tracker}</TableCell>\r\n              <TableCell align=\"right\">{row.Order_Originator}</TableCell>\r\n              <TableCell align=\"right\">{row.Sent}</TableCell>\r\n              <TableCell align=\"right\">{row.Type}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n<TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />    </TableContainer>\r\n    </div>\r\n  );\r\n}\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Processing\\POA\\index.tsx",["1407"],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\enter-transactions\\currently-held-journals\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\Budgets\\combined-nominal-budgets\\index.tsx",["1408","1409","1410","1411","1412","1413","1414","1415","1416","1417","1418"],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\customer-enquiries\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\create-and-amend-accounts\\create-new-nominal-account\\Accounts.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\purchase-requisition\\MP_Requisition\\PR_Lines.tsx",["1419","1420","1421","1422","1423","1424"],"import * as React from 'react';\r\nimport { DataGrid, ColDef, ValueGetterParams } from '@material-ui/data-grid';\r\nimport {createStyles, makeStyles, Theme, withStyles} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n\r\nconst useStyles = makeStyles((theme : Theme) => createStyles({\r\n  NVtitle: {\r\n        fontSize: \"30px\",\r\n        fontWeight: \"bold\"\r\n    },NVlabel: {\r\n        lineHeight: \"20px\",\r\n        paddingRight: theme.spacing(1),\r\n        fontSize:'12px',\r\n        fontStyle:'none',\r\n        color:'#008000'\r\n    }\r\n})\r\n);\r\n\r\n\r\nconst columns: ColDef[] = [\r\n  { field: 'id', headerName: 'Combined Budget', width: 140 },\r\n  { field: 'Supplier_Code', headerName: 'Supplier Code', width: 130 },\r\n  { field: 'Supplier_Name', headerName: 'Supplier_Name', width: 130 },\r\n  {\r\n    field: 'Requested_By_Date',\r\n    headerName: 'Requested By Date',\r\n    width: 140,\r\n  },\r\n  {\r\n    field: 'Item_Code',\r\n    headerName: 'Item Code',\r\n    width: 160\r\n  },\r\n  {\r\n    field: 'Item_Name',\r\n    headerName: 'Item Name',\r\n    width: 160\r\n  },\r\n  {\r\n    field: 'Warehouse',\r\n    headerName: 'Warehouse',\r\n    width: 160\r\n  },\r\n  {\r\n    field: 'Quantity',\r\n    headerName: 'Quantity',\r\n    width: 160\r\n  },\r\n  {\r\n    field: 'Unit_Buying_price',\r\n    headerName: 'Unit_Buying_price',\r\n    width: 160\r\n  },\r\n  {\r\n    field: 'Total_Net_Value',\r\n    headerName: 'Total_Net_Value',\r\n    width: 160\r\n  },\r\n{\r\n    field: 'Tax_Rate',\r\n    headerName: 'Tax_Rate',\r\n    width: 160\r\n  },\r\n  {\r\n    field: 'Nominal_Code',\r\n    headerName: 'Nominal_Code',\r\n    width: 160\r\n  },\r\n{\r\n    field: 'Nominal_Account_name',\r\n    headerName: 'Nominal_Account_name',\r\n    width: 180\r\n  },\r\n  {\r\n    field: 'Status',\r\n    headerName: 'Status',\r\n    width: 160\r\n  }\r\n];\r\n\r\nconst rows = [\r\n  { id: '1', Supplier_Code: 'SC_Data', Supplier_Name: 'SN_Data', Requested_By_Date: '03/10/2000' ,Item_Code:'AS_Data',Item_Name:'IN_Data',Warehouse:'warehouse',Quantity:'111',Unit_Buying_price:'123',Total_Net_Value:'1234',Tax_Rate:'12',Nominal_Code:'NC_DATA',Nominal_Account_name:'NAN_Data',Status:'sts'},\r\n];\r\n\r\nexport default function PR_Lines() {\r\n          const classes = useStyles();\r\n\r\n  return (\r\n      <div className=\"\">\r\n          <Typography style={{marginLeft:'11px'}} className={classes.NVtitle} >Purchase Requisition Lines\r\n            </Typography>\r\n      <div style={{marginLeft:'13px'}}>\r\n          <a href=\"\" className={classes.NVlabel}>Action |</a>\r\n          <a href=\"\" className={classes.NVlabel}>Export |</a>\r\n          <a href=\"\" className={classes.NVlabel}>Print |</a>\r\n          <a href=\"\" className={classes.NVlabel}>Refresh </a>\r\n          </div>\r\n          <br />\r\n      \r\n    <div style={{ height: 400, width: '100%' }}>\r\n      <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection />\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport {}","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\create-amend-accounts\\create-bank-account\\AccountDeatils.tsx",["1425"],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Processing\\MyUnauthorisedPurchaseOrder.tsx",["1426","1427","1428","1429","1430","1431"],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Processing\\Print_Orders.tsx",["1432"],"import React from 'react'\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {DataGrid, ColDef, ValueGetterParams} from '@material-ui/data-grid';\r\n\r\n\r\nconst columns : ColDef[] = [\r\n    {\r\n        field: 'id',\r\n        headerName: 'Order NO',\r\n        width: 130\r\n    }, {\r\n        field: 'Order_Date',\r\n        headerName: 'Order_Date',\r\n        width: 130\r\n    }, {\r\n        field: 'Code',\r\n        headerName: 'Code',\r\n        width: 130\r\n    }, {\r\n        field: 'AC_Name',\r\n        headerName: 'A/C_Name',\r\n        width: 130\r\n    }, {\r\n        field: 'Value',\r\n        headerName: 'Value',\r\n        width: 130\r\n    }, \r\n];\r\n\r\nconst rows = [\r\n    {\r\n        id: 'ON_Data',\r\n        Order_Date: \"OD_Data\",\r\n        Code: \"C_Data\",\r\n        AC_Name: 'ACN_Data',\r\n        Value: 'V_Data',\r\n    }\r\n];\r\n\r\n\r\nconst useStyles = makeStyles((theme : Theme) => createStyles({\r\n    NominalVatableReceipt: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    NVtitle: {\r\n        fontSize: \"20px\",\r\n        fontWeight: \"bold\"\r\n    },\r\n    NVFieldWrapper: {\r\n        padding: \"10px 0\"\r\n    },\r\n    NVlabel: {\r\n        lineHeight: \"30px\",\r\n        paddingRight: theme.spacing(2)\r\n    },\r\n    NVformWrapper: {\r\n        paddingTop: theme.spacing(2)\r\n    },\r\n    NVtable: {\r\n        width: \"100%\"\r\n    },\r\n    buttonWrapper: {\r\n        margin: theme.spacing(0.5)\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n    wdtset: {\r\n        width: \"150px\"\r\n    }\r\n}));\r\n\r\nfunction Print_Orders() {\r\n    const classes = useStyles();\r\n\r\n    const [selectedValue,\r\n        setSelectedValue] = React.useState('');\r\n\r\n    const handleChange = (event : React.ChangeEvent < HTMLInputElement >) => {\r\n        setSelectedValue(event.target.value);\r\n    };\r\n\r\n    const [selected_Value,\r\n        setSelected_Value] = React.useState('');\r\n\r\n    const handle_Change = (event : React.ChangeEvent < HTMLInputElement >) => {\r\n        setSelected_Value(event.target.value);\r\n    };\r\n    \r\n    const extradta = () =>\r\n    {\r\n        if(selected_Value === 'All_Orders_for_a_supplier')\r\n        {\r\n            return(\r\n                <>\r\n                <FormControl className={classes.formControl}>\r\n\r\n                    <div className={classes.NVFieldWrapper}>\r\n                            <label style={{paddingRight:\"83px\"}} className={classes.NVlabel}>Code :\r\n                            </label>\r\n                            <Select\r\n                                className={classes.wdtset}\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\">\r\n                                <MenuItem value={1}>\r\n                                    one\r\n                                </MenuItem>\r\n\r\n                                <MenuItem value={1}>\r\n                                    two\r\n                                </MenuItem>\r\n\r\n                            </Select>\r\n                        </div>\r\n\r\n            \r\n                        <div className={classes.NVFieldWrapper}>\r\n                            <label\r\n                                style={{\r\n                                paddingRight: \"22px\"\r\n                            }}\r\n                                className={classes.NVlabel}>Short Name :&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;\r\n                            </label>\r\n                            <Select\r\n                                className={classes.wdtset}\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\">\r\n                                <MenuItem value={1}>\r\n                                    one\r\n                                </MenuItem>\r\n\r\n                                <MenuItem value={1}>\r\n                                    two\r\n                                </MenuItem>\r\n\r\n                            </Select>\r\n                        </div>\r\n\r\n                        <div className={classes.NVFieldWrapper}>\r\n                            <label\r\n                                style={{\r\n                                paddingRight: \"41px\"\r\n                            }}\r\n                                className={classes.NVlabel}>Post Code : &nbsp;&nbsp; &nbsp;&nbsp;\r\n                            </label>\r\n                            <Select\r\n                                className={classes.wdtset}\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\">\r\n                                <MenuItem value={1}>\r\n                                    one\r\n                                </MenuItem>\r\n\r\n                                <MenuItem value={1}>\r\n                                    two\r\n                                </MenuItem>\r\n\r\n                            </Select>\r\n                        </div>\r\n\r\n                    </FormControl>\r\n                </>\r\n            )\r\n        }\r\n\r\n        else if(selected_Value === 'Single_Order')\r\n        {\r\n            return(\r\n                <>\r\n                <FormControl className={classes.formControl}>\r\n\r\n                        <div className={classes.NVFieldWrapper}>\r\n                            <label\r\n                                style={{\r\n                                paddingRight: \"41px\"\r\n                            }}\r\n                                className={classes.NVlabel}>Order No : &nbsp;&nbsp; &nbsp;&nbsp;\r\n                            </label>\r\n                            <Select\r\n                                className={classes.wdtset}\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\">\r\n                                <MenuItem value={1}>\r\n                                    one\r\n                                </MenuItem>\r\n\r\n                                <MenuItem value={1}>\r\n                                    two\r\n                                </MenuItem>\r\n\r\n                            </Select>\r\n\r\n                        </div>\r\n\r\n                    </FormControl>\r\n                                        <Button style={{marginTop:\"37px\"}} size=\"small\" variant=\"contained\" className={classes.buttonWrapper}>\r\n                        Find\r\n                    </Button>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography\r\n                className={classes.NVtitle}\r\n                style={{\r\n                margin: '10px'\r\n            }}>Select Order Print Status\r\n            </Typography>\r\n            <div className=\"\" style={{\r\n                display: 'flex',\r\n                justifyContent:'space-around'\r\n            }}>\r\n                <span>\r\n                <label\r\n                    style={{\r\n                    paddingRight: \"0px\",\r\n                    lineHeight: 3\r\n                }}\r\n                    className={classes.NVlabel}>UnPrinted :\r\n                </label>\r\n                <Radio\r\n                    checked={selectedValue === 'Unprinted'}\r\n                    onChange={handleChange}\r\n                    value=\"Unprinted\"\r\n                    name=\"radio-button-demo\"\r\n                    inputProps={{\r\n                    'aria-label': 'Unprinted'\r\n                }}/>\r\n                </span>\r\n\r\n                <span>\r\n                <label\r\n                    style={{\r\n                    paddingRight: \"0px\",\r\n                    lineHeight: 3\r\n                }}\r\n                    className={classes.NVlabel}>Printed :\r\n                </label>\r\n                <Radio\r\n                    checked={selectedValue === 'Printed'}\r\n                    onChange={handleChange}\r\n                    value=\"Printed\"\r\n                    name=\"radio-button-demo\"\r\n                    inputProps={{\r\n                    'aria-label': 'Printed'\r\n                }}/>\r\n                </span>\r\n\r\n\r\n                <span>\r\n                <label\r\n                    style={{\r\n                    paddingRight: \"0px\",\r\n                    lineHeight: 3\r\n                }}\r\n                    className={classes.NVlabel}>Amended Since Printed :\r\n                </label>\r\n                <Radio\r\n                    checked={selectedValue === 'Amended_Since_Printed'}\r\n                    onChange={handleChange}\r\n                    value=\"Amended_Since_Printed\"\r\n                    name=\"radio-button-demo\"\r\n                    inputProps={{\r\n                    'aria-label': 'Amended_Since_Printed'\r\n                }}/>\r\n                </span>\r\n\r\n\r\n                <span>\r\n                <label\r\n                    style={{\r\n                    paddingRight: \"0px\",\r\n                    lineHeight: 3\r\n                }}\r\n                    className={classes.NVlabel}>Any :\r\n                </label>\r\n\r\n                <Radio\r\n                    checked={selectedValue === 'Any'}\r\n                    onChange={handleChange}\r\n                    value=\"Any\"\r\n                    name=\"radio-button-demo\"\r\n                    inputProps={{\r\n                    'aria-label': 'Any'\r\n                }}/>\r\n                </span>\r\n\r\n            </div>\r\n\r\n            <Typography\r\n                className={classes.NVtitle}\r\n                style={{\r\n                margin: '10px'\r\n            }}>Select Orders\r\n            </Typography>\r\n\r\n\r\n            <div className=\"\" style={{\r\n                display: 'flex',\r\n                justifyContent:'space-around'\r\n            }}>\r\n                <span>\r\n                <label\r\n                    style={{\r\n                    paddingRight: \"0px\",\r\n                    lineHeight: 3\r\n                }}\r\n                    className={classes.NVlabel}>All Orders :\r\n                </label>\r\n                <Radio\r\n                    checked={selected_Value === 'All_Orders'}\r\n                    onChange={handle_Change}\r\n                    value=\"All_Orders\"\r\n                    name=\"radio-button-demo\"\r\n                    inputProps={{\r\n                    'aria-label': 'All_Orders'\r\n                }}/>\r\n                </span>\r\n\r\n                <span>\r\n                <label\r\n                    style={{\r\n                    paddingRight: \"0px\",\r\n                    lineHeight: 3\r\n                }}\r\n                    className={classes.NVlabel}>All Orders for a supplier :\r\n                </label>\r\n                <Radio\r\n                    checked={selected_Value === 'All_Orders_for_a_supplier'}\r\n                    onChange={handle_Change}\r\n                    value=\"All_Orders_for_a_supplier\"\r\n                    name=\"radio-button-demo\"\r\n                    inputProps={{\r\n                    'aria-label': 'All_Orders_for_a_supplier'\r\n                }}/>\r\n                </span>\r\n\r\n\r\n                <span>\r\n                <label\r\n                    style={{\r\n                    paddingRight: \"0px\",\r\n                    lineHeight: 3\r\n                }}\r\n                    className={classes.NVlabel}>Single Order :\r\n                </label>\r\n                <Radio\r\n                    checked={selected_Value === 'Single_Order'}\r\n                    onChange={handle_Change}\r\n                    value=\"Single_Order\"\r\n                    name=\"radio-button-demo\"\r\n                    inputProps={{\r\n                    'aria-label': 'Single_Order'\r\n                }}/>\r\n                </span>\r\n\r\n                <Button\r\n                size=\"small\"\r\n                    variant=\"contained\"\r\n                    style={{\r\n                    float: \"right\"\r\n                }}\r\n                    className={classes.buttonWrapper}>\r\n                    Display\r\n                </Button>\r\n\r\n            </div>\r\n            {extradta()}\r\n\r\n            <div\r\n                style={{\r\n                maxHeight: 400,\r\n                minHeight: 200,\r\n                width: '100%'\r\n            }}>\r\n                <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection/>\r\n            </div>\r\n            <div\r\n                    className=\"col\"\r\n                    style={{\r\n                    width: \"40%\"\r\n                }}>\r\n                    <Button size=\"small\" variant=\"contained\" className={classes.buttonWrapper}>\r\n                        Print\r\n                    </Button>\r\n                    <Button\r\n                        size=\"small\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.buttonWrapper}>\r\n                        Print All\r\n                    </Button>\r\n                    <Button size=\"small\" variant=\"contained\" className={classes.buttonWrapper}>\r\n                        Select All\r\n                    </Button>\r\n                    <Button\r\n                        size=\"small\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.buttonWrapper}>\r\n                        Deselect All\r\n                    </Button>\r\n                    </div>\r\n                    <div\r\n                className=\"\"\r\n                style={{\r\n                paddingBottom: \"50px\",\r\n                paddingRight: \"30px\",\r\n                marginTop:\"0px\"\r\n            }}>\r\n                <Button\r\n                size=\"small\"\r\n                    variant=\"contained\"\r\n                    style={{\r\n                    float: \"right\"\r\n                }}\r\n                    className={classes.buttonWrapper}>\r\n                    Close\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Print_Orders\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Processing\\PrintReturns.tsx",["1433"],"import React from 'react'\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {DataGrid, ColDef, ValueGetterParams} from '@material-ui/data-grid';\r\n\r\n\r\nconst columns : ColDef[] = [\r\n    {\r\n        field: 'id',\r\n        headerName: 'Return No',\r\n        width: 195\r\n    }, {\r\n        field: 'Return_Date',\r\n        headerName: 'Return_Date',\r\n        width: 195\r\n    }, {\r\n        field: 'Code',\r\n        headerName: 'Code',\r\n        width: 195\r\n    }, {\r\n        field: 'AC_Name',\r\n        headerName: 'A/C_Name',\r\n        width: 195\r\n    }, {\r\n        field: 'Value',\r\n        headerName: 'Value',\r\n        width: 195\r\n    }, \r\n];\r\n\r\nconst rows = [\r\n    {\r\n        id: 'ON_Data',\r\n        Return_Date: \"OD_Data\",\r\n        Code: \"C_Data\",\r\n        AC_Name: 'ACN_Data',\r\n        Value: 'V_Data',\r\n    }\r\n];\r\n\r\n\r\nconst useStyles = makeStyles((theme : Theme) => createStyles({\r\n    NominalVatableReceipt: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    NVtitle: {\r\n        fontSize: \"20px\",\r\n        fontWeight: \"bold\"\r\n    },\r\n    NVFieldWrapper: {\r\n        padding: \"10px 0\"\r\n    },\r\n    NVlabel: {\r\n        lineHeight: \"30px\",\r\n        paddingRight: theme.spacing(2)\r\n    },\r\n    NVformWrapper: {\r\n        paddingTop: theme.spacing(2)\r\n    },\r\n    NVtable: {\r\n        width: \"100%\"\r\n    },\r\n    buttonWrapper: {\r\n        margin: theme.spacing(0.5)\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n    wdtset: {\r\n        width: \"150px\"\r\n    }\r\n}));\r\n\r\nfunction PrintReturns() {\r\n    const classes = useStyles();\r\n\r\n    const [selectedValue,\r\n        setSelectedValue] = React.useState('');\r\n\r\n    const handleChange = (event : React.ChangeEvent < HTMLInputElement >) => {\r\n        setSelectedValue(event.target.value);\r\n    };\r\n\r\n    const [selected_Value,\r\n        setSelected_Value] = React.useState('');\r\n\r\n    const handle_Change = (event : React.ChangeEvent < HTMLInputElement >) => {\r\n        setSelected_Value(event.target.value);\r\n    };\r\n    \r\n    const extradta = () =>\r\n    {\r\n        if(selected_Value === 'All_Orders_for_a_supplier')\r\n        {\r\n            return(\r\n                <>\r\n                <FormControl className={classes.formControl}>\r\n\r\n                    <div className={classes.NVFieldWrapper}>\r\n                            <label style={{paddingRight:\"83px\"}} className={classes.NVlabel}>Code :\r\n                            </label>\r\n                            <Select\r\n                                className={classes.wdtset}\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\">\r\n                                <MenuItem value={1}>\r\n                                    one\r\n                                </MenuItem>\r\n\r\n                                <MenuItem value={1}>\r\n                                    two\r\n                                </MenuItem>\r\n\r\n                            </Select>\r\n                        </div>\r\n\r\n            \r\n                        <div className={classes.NVFieldWrapper}>\r\n                            <label\r\n                                style={{\r\n                                paddingRight: \"22px\"\r\n                            }}\r\n                                className={classes.NVlabel}>Short Name :&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;\r\n                            </label>\r\n                            <Select\r\n                                className={classes.wdtset}\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\">\r\n                                <MenuItem value={1}>\r\n                                    one\r\n                                </MenuItem>\r\n\r\n                                <MenuItem value={1}>\r\n                                    two\r\n                                </MenuItem>\r\n\r\n                            </Select>\r\n                        </div>\r\n\r\n                        <div className={classes.NVFieldWrapper}>\r\n                            <label\r\n                                style={{\r\n                                paddingRight: \"41px\"\r\n                            }}\r\n                                className={classes.NVlabel}>Post Code :&nbsp;&nbsp; &nbsp;&nbsp;\r\n                            </label>\r\n                            <Select\r\n                                className={classes.wdtset}\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\">\r\n                                <MenuItem value={1}>\r\n                                    one\r\n                                </MenuItem>\r\n\r\n                                <MenuItem value={1}>\r\n                                    two\r\n                                </MenuItem>\r\n\r\n                            </Select>\r\n                        </div>\r\n\r\n                    </FormControl>\r\n                </>\r\n            )\r\n        }\r\n\r\n        else if(selected_Value === 'Single_Order')\r\n        {\r\n            return(\r\n                <>\r\n                <FormControl className={classes.formControl}>\r\n\r\n                        <div className={classes.NVFieldWrapper}>\r\n                            <label\r\n                                style={{\r\n                                paddingRight: \"41px\"\r\n                            }}\r\n                                className={classes.NVlabel}>Return No : &nbsp;&nbsp; &nbsp;&nbsp;\r\n                            </label>\r\n                            <Select\r\n                                className={classes.wdtset}\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\">\r\n                                <MenuItem value={1}>\r\n                                    one\r\n                                </MenuItem>\r\n\r\n                                <MenuItem value={1}>\r\n                                    two\r\n                                </MenuItem>\r\n\r\n                            </Select>\r\n\r\n                        </div>\r\n\r\n                    </FormControl>\r\n                                        <Button style={{marginTop:\"37px\"}} size=\"small\" variant=\"contained\" className={classes.buttonWrapper}>\r\n                        Find\r\n                    </Button>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography\r\n                className={classes.NVtitle}\r\n                style={{\r\n                margin: '10px'\r\n            }}>Select Return Print Status\r\n            </Typography>\r\n            <div className=\"\" style={{\r\n                display: 'flex',\r\n                justifyContent:'space-around'\r\n            }}>\r\n                <span>\r\n                <label\r\n                    style={{\r\n                    paddingRight: \"0px\",\r\n                    lineHeight: 3\r\n                }}\r\n                    className={classes.NVlabel}>UnPrinted :\r\n                </label>\r\n                <Radio\r\n                    checked={selectedValue === 'Unprinted'}\r\n                    onChange={handleChange}\r\n                    value=\"Unprinted\"\r\n                    name=\"radio-button-demo\"\r\n                    inputProps={{\r\n                    'aria-label': 'Unprinted'\r\n                }}/>\r\n                </span>\r\n\r\n                <span>\r\n                <label\r\n                    style={{\r\n                    paddingRight: \"0px\",\r\n                    lineHeight: 3\r\n                }}\r\n                    className={classes.NVlabel}>Printed :\r\n                </label>\r\n                <Radio\r\n                    checked={selectedValue === 'Printed'}\r\n                    onChange={handleChange}\r\n                    value=\"Printed\"\r\n                    name=\"radio-button-demo\"\r\n                    inputProps={{\r\n                    'aria-label': 'Printed'\r\n                }}/>\r\n                </span>\r\n\r\n\r\n                <span>\r\n                <label\r\n                    style={{\r\n                    paddingRight: \"0px\",\r\n                    lineHeight: 3\r\n                }}\r\n                    className={classes.NVlabel}>Amended Since Printed :\r\n                </label>\r\n                <Radio\r\n                    checked={selectedValue === 'Amended_Since_Printed'}\r\n                    onChange={handleChange}\r\n                    value=\"Amended_Since_Printed\"\r\n                    name=\"radio-button-demo\"\r\n                    inputProps={{\r\n                    'aria-label': 'Amended_Since_Printed'\r\n                }}/>\r\n                </span>\r\n\r\n\r\n                <span>\r\n                <label\r\n                    style={{\r\n                    paddingRight: \"0px\",\r\n                    lineHeight: 3\r\n                }}\r\n                    className={classes.NVlabel}>Any :\r\n                </label>\r\n\r\n                <Radio\r\n                    checked={selectedValue === 'Any'}\r\n                    onChange={handleChange}\r\n                    value=\"Any\"\r\n                    name=\"radio-button-demo\"\r\n                    inputProps={{\r\n                    'aria-label': 'Any'\r\n                }}/>\r\n                </span>\r\n\r\n            </div>\r\n\r\n            <Typography\r\n                className={classes.NVtitle}\r\n                style={{\r\n                margin: '10px'\r\n            }}>Select Returns\r\n            </Typography>\r\n\r\n\r\n            <div className=\"\" style={{\r\n                display: 'flex',\r\n                justifyContent:'space-around'\r\n            }}>\r\n                <span>\r\n                <label\r\n                    style={{\r\n                    paddingRight: \"0px\",\r\n                    lineHeight: 3\r\n                }}\r\n                    className={classes.NVlabel}>All Returns :\r\n                </label>\r\n                <Radio\r\n                    checked={selected_Value === 'All_Orders'}\r\n                    onChange={handle_Change}\r\n                    value=\"All_Orders\"\r\n                    name=\"radio-button-demo\"\r\n                    inputProps={{\r\n                    'aria-label': 'All_Orders'\r\n                }}/>\r\n                </span>\r\n\r\n                <span>\r\n                <label\r\n                    style={{\r\n                    paddingRight: \"0px\",\r\n                    lineHeight: 3\r\n                }}\r\n                    className={classes.NVlabel}>All Returns for a supplier :\r\n                </label>\r\n                <Radio\r\n                    checked={selected_Value === 'All_Orders_for_a_supplier'}\r\n                    onChange={handle_Change}\r\n                    value=\"All_Orders_for_a_supplier\"\r\n                    name=\"radio-button-demo\"\r\n                    inputProps={{\r\n                    'aria-label': 'All_Orders_for_a_supplier'\r\n                }}/>\r\n                </span>\r\n\r\n\r\n                <span>\r\n                <label\r\n                    style={{\r\n                    paddingRight: \"0px\",\r\n                    lineHeight: 3\r\n                }}\r\n                    className={classes.NVlabel}>Single Return :\r\n                </label>\r\n                <Radio\r\n                    checked={selected_Value === 'Single_Order'}\r\n                    onChange={handle_Change}\r\n                    value=\"Single_Order\"\r\n                    name=\"radio-button-demo\"\r\n                    inputProps={{\r\n                    'aria-label': 'Single_Order'\r\n                }}/>\r\n                </span>\r\n\r\n                <Button\r\n                size=\"small\"\r\n                    variant=\"contained\"\r\n                    style={{\r\n                    float: \"right\"\r\n                }}\r\n                    className={classes.buttonWrapper}>\r\n                    Display\r\n                </Button>\r\n\r\n            </div>\r\n            {extradta()}\r\n\r\n            <div\r\n                style={{\r\n                maxHeight: 400,\r\n                minHeight: 200,\r\n                width: '100%'\r\n            }}>\r\n                <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection/>\r\n            </div>\r\n            <div\r\n                    className=\"col\"\r\n                    style={{\r\n                    width: \"40%\"\r\n                }}>\r\n                    <Button size=\"small\" variant=\"contained\" className={classes.buttonWrapper}>\r\n                        Print\r\n                    </Button>\r\n                    <Button\r\n                        size=\"small\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.buttonWrapper}>\r\n                        Print All\r\n                    </Button>\r\n                    <Button size=\"small\" variant=\"contained\" className={classes.buttonWrapper}>\r\n                        Select All\r\n                    </Button>\r\n                    <Button\r\n                        size=\"small\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.buttonWrapper}>\r\n                        Deselect All\r\n                    </Button>\r\n                    </div>\r\n                    <div\r\n                className=\"\"\r\n                style={{\r\n                paddingBottom: \"50px\",\r\n                paddingRight: \"30px\",\r\n                marginTop:\"0px\"\r\n            }}>\r\n                <Button\r\n                size=\"small\"\r\n                    variant=\"contained\"\r\n                    style={{\r\n                    float: \"right\",\r\n                    marginTop:'0px'\r\n                }}\r\n                    className={classes.buttonWrapper}>\r\n                    Close\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PrintReturns\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Processing\\ConfirmReceipt.tsx",["1434","1435"],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-process-map\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\purchase-requisition\\Generate_POFR\\index.tsx",["1436","1437"],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\cashbook\\bank-account-reports\\transection-listing\\index.tsx",["1438","1439","1440","1441","1442","1443","1444"],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Processing\\AmendReceipt.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Processing\\ConfiemDispatch.tsx",["1445","1446","1447","1448"],"import React from 'react'\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport {DataGrid, ColDef, ValueGetterParams} from '@material-ui/data-grid';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Radio from '@material-ui/core/Radio';\r\n\r\n\r\nconst columns : ColDef[] = [\r\n    {\r\n        field: 'id',\r\n        headerName: 'Return No',\r\n        width: 130\r\n    }, {\r\n        field: 'Return_Date',\r\n        headerName: 'Return_Date',\r\n        width: 130\r\n    }, {\r\n        field: 'Status',\r\n        headerName: 'Status',\r\n        width: 130\r\n    },  {\r\n        field: 'Stock_Code',\r\n        headerName: 'Stock Code',\r\n        width: 130\r\n    }, {\r\n        field: 'Warehouse',\r\n        headerName: 'Warehouse',\r\n        width: 130\r\n    }, {\r\n        field: 'Bin',\r\n        headerName: 'Bin',\r\n        width: 130\r\n    }, {\r\n        field: 'Qty_Outstand',\r\n        headerName: 'Qty_Outstand',\r\n        width: 130\r\n    }, {\r\n        field: 'Qty_Received',\r\n        headerName: 'Qty_Received',\r\n        width: 130\r\n    }\r\n];\r\n\r\nconst rows = [\r\n    {\r\n        id: 'I_Data',\r\n        Return_Date: \"D_Data\",\r\n        Status: \"Q_Data\",\r\n        Stock_Code: 'DP_Data',\r\n        Warehouse: \"VR_Data\",\r\n        Bin: \"NV_Data\",\r\n        Qty_Outstand:\"QO_Data\",\r\n        Qty_Received:\"QR_Data\"\r\n    }\r\n];\r\n\r\nconst useStyles = makeStyles((theme : Theme) => createStyles({\r\n    NominalVatableReceipt: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    NVtitle: {\r\n        fontSize: \"20px\",\r\n        fontWeight: \"bold\"\r\n    },\r\n    NVFieldWrapper: {\r\n        padding: \"10px 0\"\r\n    },\r\n    NVlabel: {\r\n        lineHeight: \"30px\",\r\n        paddingRight: theme.spacing(2)\r\n    },\r\n    NVformWrapper: {\r\n        paddingTop: theme.spacing(2)\r\n    },\r\n    NVtable: {\r\n        width: \"100%\"\r\n    },\r\n    buttonWrapper: {\r\n        margin: theme.spacing(0.5)\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n    wdtset: {\r\n        width: \"150px\"\r\n    }\r\n}));\r\n\r\nfunction ConfirmDispatch() {\r\n    const classes = useStyles();\r\n\r\n    const [selectedDate,\r\n        setSelectedDate] = React.useState < Date | null > (new Date());\r\n\r\n    const [value,\r\n        setValue] = React.useState(0);\r\n\r\n    const handleDateChange = (date : Date | null) => {\r\n        setSelectedDate(date);\r\n    };\r\n\r\n\r\n    const [selectedValue,\r\n        setSelectedValue] = React.useState('');\r\n\r\n    const handleChange = (event : React.ChangeEvent < HTMLInputElement >) => {\r\n        setSelectedValue(event.target.value);\r\n    };\r\n    return (\r\n        <div>\r\n\r\n            <div className=\"row\" style={{\r\n                display: 'flex'\r\n            }}>\r\n                <div\r\n                    className=\"col\"\r\n                    style={{\r\n                    padding: \"20px\",\r\n                    width: \"50%\"\r\n                }}>\r\n                    <Typography\r\n                        className={classes.NVtitle}\r\n                        style={{\r\n                        margin: '10px'\r\n                    }}>Account Selection\r\n                    </Typography>\r\n                    <FormControl className={classes.formControl}>\r\n                        <div className={classes.NVFieldWrapper}>\r\n                            <label\r\n                                style={{\r\n                                paddingRight: \"54px\"\r\n                            }}\r\n                                className={classes.NVlabel}>Code : * &nbsp;&nbsp; &nbsp;&nbsp;\r\n                            </label>\r\n                            <Select\r\n                                className={classes.wdtset}\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\">\r\n                                <MenuItem value={1}>\r\n                                    one\r\n                                </MenuItem>\r\n\r\n                                <MenuItem value={1}>\r\n                                    two\r\n                                </MenuItem>\r\n\r\n                            </Select>\r\n                        </div>\r\n\r\n                        <div className={classes.NVFieldWrapper}>\r\n                            <label\r\n                                style={{\r\n                                paddingRight: \"22px\"\r\n                            }}\r\n                                className={classes.NVlabel}>Short Name :&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;\r\n                            </label>\r\n                            <Select\r\n                                className={classes.wdtset}\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\">\r\n                                <MenuItem value={1}>\r\n                                    one\r\n                                </MenuItem>\r\n\r\n                                <MenuItem value={1}>\r\n                                    two\r\n                                </MenuItem>\r\n\r\n                            </Select>\r\n                        </div>\r\n\r\n                        <div className={classes.NVFieldWrapper}>\r\n                            <label\r\n                                style={{\r\n                                paddingRight: \"41px\"\r\n                            }}\r\n                                className={classes.NVlabel}>Post Code : &nbsp;&nbsp; &nbsp;&nbsp;\r\n                            </label>\r\n                            <Select\r\n                                className={classes.wdtset}\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\">\r\n                                <MenuItem value={1}>\r\n                                    one\r\n                                </MenuItem>\r\n\r\n                                <MenuItem value={1}>\r\n                                    two\r\n                                </MenuItem>\r\n\r\n                            </Select>\r\n                        </div>\r\n\r\n                        <div className={classes.NVFieldWrapper}>\r\n                            <label\r\n                                className={classes.NVlabel}\r\n                                style={{\r\n                                paddingRight: \"85px\"\r\n                            }}>Name :\r\n                            </label>\r\n                            <TextField\r\n                                style={{\r\n                                width: \"150px\"\r\n                            }}\r\n                                id=\"outlined-size-small\"\r\n                                variant=\"outlined\"\r\n                                size=\"small\"/>\r\n                        </div>\r\n\r\n                    </FormControl>\r\n                </div>\r\n                <div\r\n                    className=\"col\"\r\n                    style={{\r\n                    padding: \"20px\",\r\n                    width: \"50%\"\r\n                }}>\r\n                    <Typography\r\n                        className={classes.NVtitle}\r\n                        style={{\r\n                        marginTop: '10px'\r\n                    }}>Goods Returns Note Details\r\n                    </Typography>\r\n\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label\r\n                            className={classes.NVlabel}\r\n                            style={{\r\n                            paddingRight: \"\"\r\n                        }}>Reference :\r\n                        </label>\r\n                        <TextField\r\n                            style={{\r\n                            width: \"150px\"\r\n                        }}\r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                    </div>\r\n\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <label\r\n                                style={{\r\n                                lineHeight: \"55px\",\r\n                                paddingRight: \"57px\"\r\n                            }}>\r\n                                Date : &nbsp;\r\n                            </label>\r\n                            <KeyboardDatePicker\r\n                                style={{\r\n                                maxWidth: '150px'\r\n                            }}\r\n                                margin=\"normal\"\r\n                                id=\"date-picker-dialog\"\r\n                                format=\"MM/dd/yyyy\"\r\n                                value={selectedDate}\r\n                                onChange={handleDateChange}\r\n                                KeyboardButtonProps={{\r\n                                \"aria-label\": \"change date\"\r\n                            }}/>\r\n                        </MuiPickersUtilsProvider>\r\n\r\n                    </div>\r\n\r\n                    \r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label\r\n                            className={classes.NVlabel}\r\n                            style={{\r\n                            paddingRight: \"42px\"\r\n                        }}>Narrative :\r\n                        </label>\r\n                        <TextField\r\n                            style={{\r\n                            width: \"150px\"\r\n                        }}\r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n<div className=\"row\" style={{\r\n                display: 'flex'\r\n            }}>\r\n                <div\r\n                    className=\"col\"\r\n                    style={{\r\n                    padding: \"20px\",\r\n                    width: \"50%\"\r\n                }}>\r\n                    <Typography\r\n                        className={classes.NVtitle}\r\n                        style={{\r\n                        margin: '10px'\r\n                    }}>Despatching Warehouse\r\n                    </Typography>\r\n                    <FormControl className={classes.formControl}>\r\n                        <div className={classes.NVFieldWrapper}>\r\n                            <label\r\n                                style={{\r\n                                paddingRight: \"54px\"\r\n                            }}\r\n                                className={classes.NVlabel}>Warehouse : &nbsp;&nbsp; &nbsp;&nbsp;\r\n                            </label>\r\n                            <Select\r\n                                className={classes.wdtset}\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\">\r\n                                <MenuItem value={1}>\r\n                                    one\r\n                                </MenuItem>\r\n\r\n                                <MenuItem value={1}>\r\n                                    two\r\n                                </MenuItem>\r\n\r\n                            </Select>\r\n                        </div>\r\n\r\n                    </FormControl>\r\n                </div>\r\n                <div\r\n                    className=\"col\"\r\n                    style={{\r\n                    padding: \"20px\",\r\n                    width: \"50%\"\r\n                }}>\r\n                    <Typography\r\n                        className={classes.NVtitle}\r\n                        style={{\r\n                        marginTop: '10px'\r\n                    }}>Stock Code\r\n                    </Typography>\r\n\r\n                    <div className=\"\" style={{\r\n                display: 'flex',\r\n                justifyContent:'space-around'\r\n            }}>\r\n                <span>\r\n                <label\r\n                    style={{\r\n                    paddingRight: \"0px\",\r\n                    lineHeight: 3\r\n                }}\r\n                    className={classes.NVlabel}>Show Stock Code :\r\n                </label>\r\n                <Radio\r\n                    checked={selectedValue === 'Unprinted'}\r\n                    onChange={handleChange}\r\n                    value=\"Unprinted\"\r\n                    name=\"radio-button-demo\"\r\n                    inputProps={{\r\n                    'aria-label': 'Unprinted'\r\n                }}/>\r\n                </span>\r\n\r\n                <span>\r\n                <label\r\n                    style={{\r\n                    paddingRight: \"0px\",\r\n                    lineHeight: 3\r\n                }}\r\n                    className={classes.NVlabel}>Show Supplier Stock Code :\r\n                </label>\r\n                <Radio\r\n                    checked={selectedValue === 'Printed'}\r\n                    onChange={handleChange}\r\n                    value=\"Printed\"\r\n                    name=\"radio-button-demo\"\r\n                    inputProps={{\r\n                    'aria-label': 'Printed'\r\n                }}/>\r\n                </span>\r\n\r\n\r\n                \r\n            </div>\r\n\r\n \r\n                </div>\r\n            </div>\r\n\r\n            <div\r\n                style={{\r\n                maxHeight: 400,\r\n                minHeight: 200,\r\n                width: '100%'\r\n            }}>\r\n                <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection/>\r\n            </div>\r\n\r\n            \r\n                                    <Typography\r\n                        className={classes.NVtitle}\r\n                        style={{\r\n                        margin: '10px'\r\n                    }}>Return Line Details\r\n                    </Typography>\r\n\r\n            <div\r\n                className=\"row\"\r\n                style={{\r\n                display: 'flex',\r\n                padding: \"25px\",\r\n                justifyContent:\"space-around\"\r\n            }}>\r\n\r\n\r\n                <div\r\n                    className=\"col\">\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label\r\n                            className={classes.NVlabel}\r\n                            >\r\n                            Description :\r\n                        </label>\r\n                        <TextField\r\n                            \r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                    </div>\r\n                </div>\r\n                <div\r\n                    className=\"col\">\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label\r\n                            className={classes.NVlabel}\r\n                            >\r\n                            Buying Unit :\r\n                        </label>\r\n                        <TextField\r\n                            \r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                    </div>\r\n\r\n\r\n\r\n                    \r\n                </div>\r\n\r\n                <div\r\n                    className=\"col\">\r\n                                                                <Button\r\n                        size=\"small\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.buttonWrapper}>\r\n                        View Return\r\n                    </Button>\r\n                    </div>\r\n                </div>\r\n\r\n                              \r\n                       <div\r\n                    className=\"\"\r\n                    style={{\r\n                        paddingBottom: \"50px\",\r\n                paddingRight: \"30px\"\r\n                    }}\r\n                    >\r\n                    \r\n                    <Button variant=\"contained\" className={classes.buttonWrapper}>\r\n                        Save\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.buttonWrapper}>\r\n                        Find\r\n                    </Button>\r\n\r\n                                    <Button\r\n                    variant=\"contained\"\r\n                    style={{\r\n                    float: \"right\"\r\n                }}\r\n                    className={classes.buttonWrapper}>\r\n                    Close\r\n                </Button>\r\n                    </div>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConfirmDispatch\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Processing\\AmendDespatch.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\nominal\\nominal-enquiries\\nominal-account-enquiry\\index.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\customers\\create-amend-accounts\\create-customer\\panels\\documents.tsx",[],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\purchase-requisition\\MAP_Requisition\\index.tsx",["1449","1450"],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Processing\\RecordPurchaseInvoice.tsx",["1451","1452"],"import React from 'react'\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {DataGrid, ColDef, ValueGetterParams} from '@material-ui/data-grid';\r\n\r\nconst useStyles = makeStyles((theme : Theme) => createStyles({\r\n    NominalVatableReceipt: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    NVtitle: {\r\n        fontSize: \"20px\",\r\n        fontWeight: \"bold\"\r\n    },\r\n    NVFieldWrapper: {\r\n        padding: \"10px 0\"\r\n    },\r\n    NVlabel: {\r\n        lineHeight: \"30px\",\r\n        paddingRight: theme.spacing(2)\r\n    },\r\n    NVformWrapper: {\r\n        paddingTop: theme.spacing(2)\r\n    },\r\n    NVtable: {\r\n        width: \"100%\"\r\n    },\r\n    buttonWrapper: {\r\n        margin: theme.spacing(0.5)\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n    wdtset: {\r\n        width: \"150px\"\r\n    }\r\n}));\r\n\r\nconst columns : ColDef[] = [\r\n    {\r\n        field: 'id',\r\n        headerName: 'Order NO',\r\n        width: 130\r\n    }, {\r\n        field: 'Authorisation_Status',\r\n        headerName: 'Authorisation_Status',\r\n        width: 150\r\n    }, {\r\n        field: 'Code',\r\n        headerName: 'Code',\r\n        width: 130\r\n    }, {\r\n        field: 'Name',\r\n        headerName: 'Name',\r\n        width: 130\r\n    }, {\r\n        field: 'Buying_Unit',\r\n        headerName: 'Buying_Unit',\r\n        width: 130\r\n    }, {\r\n        field: 'Qty_To_Be_Involved',\r\n        headerName: 'Qty_To_Be_Involved',\r\n        width: 150\r\n    }, {\r\n        field: 'Discounted_Units',\r\n        headerName: 'Discounted_Units',\r\n        width: 140\r\n    }, {\r\n        field: 'Goods_Value',\r\n        headerName: 'Goods_Value',\r\n        width: 130\r\n    }, {\r\n        field: 'VAT_Value',\r\n        headerName: 'VAT_Value',\r\n        width: 130\r\n    }\r\n];\r\n\r\nconst rows = [\r\n    {\r\n        id: 'ON_Data',\r\n        Authorisation_Status: \"OD_Data\",\r\n        Code: \"C_Data\",\r\n        Name: 'ACN_Data',\r\n        Buying_Unit: 'V_Data',\r\n        Qty_To_Be_Involved: \"QTBI_Data\",\r\n        Discounted_Units: \"DU_Data\",\r\n        Goods_Value: \"GV_Data\",\r\n        VAT_Value: \"VV_Data\"\r\n    }\r\n];\r\n\r\nconst columns2 : ColDef[] = [\r\n    {\r\n        field: 'id',\r\n        headerName: 'Supplier GRN',\r\n        width: 130\r\n    }, {\r\n        field: 'Goods_Received_No',\r\n        headerName: 'Goods_Received_No',\r\n        width: 150\r\n    }, {\r\n        field: 'Date',\r\n        headerName: 'Date',\r\n        width: 130\r\n    }, {\r\n        field: 'Qty_Delievered',\r\n        headerName: 'Qty_Delievered',\r\n        width: 130\r\n    }, {\r\n        field: 'Qty_Previously_Invoiced',\r\n        headerName: 'Qty_Previously_Invoiced',\r\n        width: 130\r\n    }, {\r\n        field: 'Qty_To_Be_Invoiced',\r\n        headerName: 'Qty_To_Be_Invoiced',\r\n        width: 150\r\n    }\r\n];\r\n\r\nconst rows2 = [\r\n    {\r\n        id: 'ON_Data',\r\n        Goods_Received_No: \"OD_Data\",\r\n        Date: \"C_Data\",\r\n        Qty_Delievered: 'QTBI_Data',\r\n        Qty_Previously_Invoiced: 'V_Data',\r\n        Qty_To_Be_Invoiced: \"QTBI_Data\"\r\n    }\r\n];\r\n\r\nconst RecordPurchaseInvoice = () => {\r\n    const classes = useStyles();\r\n\r\n    const [selectedDate,\r\n        setSelectedDate] = React.useState < Date | null > (new Date());\r\n\r\n    const handleDateChange = (date : Date | null) => {\r\n        setSelectedDate(date);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                className=\"row\"\r\n                style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-around\"\r\n            }}>\r\n                <div className=\"col\">\r\n                    <Typography\r\n                        className={classes.NVtitle}\r\n                        style={{\r\n                        margin: '10px'\r\n                    }}>Select Supplier Account\r\n                    </Typography>\r\n\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label\r\n                            style={{\r\n                            paddingRight: \"49px\"\r\n                        }}\r\n                            className={classes.NVlabel}>Code :\r\n                        </label>\r\n                        <Select\r\n                            className={classes.wdtset}\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\">\r\n                            <MenuItem value={1}>\r\n                                one\r\n                            </MenuItem>\r\n\r\n                            <MenuItem value={1}>\r\n                                two\r\n                            </MenuItem>\r\n\r\n                        </Select>\r\n                    </div>\r\n\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label\r\n                            style={{\r\n                            paddingRight: \"\"\r\n                        }}\r\n                            className={classes.NVlabel}>Short Name :\r\n                        </label>\r\n                        <Select\r\n                            className={classes.wdtset}\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\">\r\n                            <MenuItem value={1}>\r\n                                one\r\n                            </MenuItem>\r\n\r\n                            <MenuItem value={1}>\r\n                                two\r\n                            </MenuItem>\r\n\r\n                        </Select>\r\n                    </div>\r\n\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label\r\n                            style={{\r\n                            paddingRight: \"30px\"\r\n                        }}\r\n                            className={classes.NVlabel}>PostCode :\r\n                        </label>\r\n                        <Select\r\n                            className={classes.wdtset}\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\">\r\n                            <MenuItem value={1}>\r\n                                one\r\n                            </MenuItem>\r\n\r\n                            <MenuItem value={1}>\r\n                                two\r\n                            </MenuItem>\r\n\r\n                        </Select>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"col\">\r\n                    <Typography\r\n                        className={classes.NVtitle}\r\n                        style={{\r\n                        marginTop: '10px'\r\n                    }}>Invoice Details\r\n                    </Typography>\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <label\r\n                                style={{\r\n                                lineHeight: \"55px\",\r\n                                paddingRight: \"26px\"\r\n                            }}>\r\n                                Invoice Date :\r\n                            </label>\r\n                            <KeyboardDatePicker\r\n                                style={{\r\n                                maxWidth: '150px'\r\n                            }}\r\n                                margin=\"normal\"\r\n                                id=\"date-picker-dialog\"\r\n                                format=\"MM/dd/yyyy\"\r\n                                value={selectedDate}\r\n                                onChange={handleDateChange}\r\n                                KeyboardButtonProps={{\r\n                                \"aria-label\": \"change date\"\r\n                            }}/>\r\n                        </MuiPickersUtilsProvider>\r\n\r\n                        <div className={classes.NVFieldWrapper}>\r\n                            <label\r\n                                className={classes.NVlabel}\r\n                                style={{\r\n                                paddingRight: \"\"\r\n                            }}>Exchange Rate :\r\n                            </label>\r\n                            <TextField\r\n                                style={{\r\n                                width: \"150px\"\r\n                            }}\r\n                                id=\"outlined-size-small\"\r\n                                variant=\"outlined\"\r\n                                size=\"small\"/>\r\n                        </div>\r\n\r\n                        <div className={classes.NVFieldWrapper}>\r\n                            <label\r\n                                className={classes.NVlabel}\r\n                                style={{\r\n                                paddingRight: \"43px\"\r\n                            }}>Reference :\r\n                            </label>\r\n                            <TextField\r\n                                style={{\r\n                                width: \"150px\"\r\n                            }}\r\n                                id=\"outlined-size-small\"\r\n                                variant=\"outlined\"\r\n                                size=\"small\"/>\r\n                            <Button size=\"small\" variant=\"contained\" className={classes.buttonWrapper}>\r\n                                Check\r\n                            </Button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div\r\n                    className=\"col\"\r\n                    style={{\r\n                    paddingTop: \"44px\"\r\n                }}>\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label\r\n                            className={classes.NVlabel}\r\n                            style={{\r\n                            paddingRight: \"\"\r\n                        }}>Goods Value :\r\n                        </label>\r\n                        <TextField\r\n                            style={{\r\n                            width: \"150px\"\r\n                        }}\r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                    </div>\r\n\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label\r\n                            className={classes.NVlabel}\r\n                            style={{\r\n                            paddingRight: \"35px\"\r\n                        }}>Vat Value :\r\n                        </label>\r\n                        <TextField\r\n                            style={{\r\n                            width: \"150px\"\r\n                        }}\r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                    </div>\r\n\r\n                    <div className={classes.NVFieldWrapper}>\r\n                        <label\r\n                            className={classes.NVlabel}\r\n                            style={{\r\n                            paddingRight: \"19px\"\r\n                        }}>Invoice Total :\r\n                        </label>\r\n                        <TextField\r\n                            style={{\r\n                            width: \"150px\"\r\n                        }}\r\n                            id=\"outlined-size-small\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Typography\r\n                className={classes.NVtitle}\r\n                style={{\r\n                margin: '10px'\r\n            }}>Select Order Items To Match Invoice\r\n            </Typography>\r\n\r\n            <div\r\n                style={{\r\n                maxHeight: 400,\r\n                minHeight: 200,\r\n                width: '100%'\r\n            }}>\r\n                <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection/>\r\n            </div>\r\n\r\n            <div\r\n                className=\"\"\r\n                style={{\r\n                display: \"flex\",\r\n                float: \"left\"\r\n            }}>\r\n                <Button size=\"small\" variant=\"contained\" className={classes.buttonWrapper}>\r\n                    Find\r\n                </Button>\r\n\r\n                <Button size=\"small\" variant=\"contained\" className={classes.buttonWrapper}>\r\n                    View Order\r\n                </Button>\r\n            </div>\r\n\r\n            <Typography\r\n                style={{\r\n                padding: \"10px\",\r\n                paddingTop: \"40px\"\r\n            }}\r\n                className={classes.NVtitle}>GRNS For Order Items\r\n            </Typography>\r\n\r\n            <div\r\n                style={{\r\n                maxHeight: 400,\r\n                minHeight: 200,\r\n                width: '100%'\r\n            }}>\r\n                <DataGrid rows={rows2} columns={columns2} pageSize={5} checkboxSelection/>\r\n            </div>\r\n\r\n            <div className=\"\" style={{padding:\"25px\"}}>\r\n                <Button size=\"small\" variant=\"contained\" className={classes.buttonWrapper}>\r\n                    Post Invoice\r\n                </Button>\r\n\r\n                <Button size=\"small\" variant=\"contained\" className={classes.buttonWrapper}>\r\n                    Clear\r\n                </Button>\r\n\r\n                <Button\r\n                    size=\"small\"\r\n                    variant=\"contained\"\r\n                    style={{\r\n                    float: \"right\"\r\n                }}\r\n                    className={classes.buttonWrapper}>\r\n                    Close\r\n                </Button>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecordPurchaseInvoice\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Processing\\RecordPurchaseCreditNote.tsx",["1453","1454"],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Enquiry\\ViewPurchaseOrder.tsx",["1455","1456","1457","1458","1459"],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Enquiry\\ViewPurchaseOrderForStockItem.tsx",["1460","1461","1462","1463","1464","1465","1466","1467","1468","1469","1470"],"import React from 'react'\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {createStyles, makeStyles, Theme, withStyles} from \"@material-ui/core/styles\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport {DataGrid, ColDef, ValueGetterParams} from '@material-ui/data-grid';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst columns : ColDef[] = [\r\n    {\r\n        field: 'id',\r\n        headerName: 'Order/Return',\r\n        width: 130\r\n    },\r\n    {\r\n        field: 'Type',\r\n        headerName: 'Type',\r\n        width: 130\r\n    }, {\r\n        field: 'Order_Data',\r\n        headerName: 'Order Data',\r\n        width: 130\r\n    }, {\r\n        field: 'Order_Status',\r\n        headerName: 'Order Status',\r\n        width: 130\r\n    }, {\r\n        field: 'Auth',\r\n        headerName: 'Auth',\r\n        width: 130\r\n    }, {\r\n        field: 'Code',\r\n        headerName: 'Code',\r\n        width: 130\r\n    }, {\r\n        field: 'Supplier_Name',\r\n        headerName: 'Supplier_Name',\r\n        width: 130\r\n    },\r\n    {\r\n        field: 'Supplier_Ref_No',\r\n        headerName: 'Supplier_Ref_No',\r\n        width: 130\r\n    },\r\n    {\r\n        field: 'Value',\r\n        headerName: 'Value',\r\n        width: 130\r\n    }\r\n];\r\n\r\nconst rows = [\r\n    {\r\n        id: 'ON_Data',\r\n        Type: 'Type',\r\n        Order_Data: \"O_Data\",\r\n        Order_Status: \"OS_Data\",\r\n        Auth: 'A_Data',\r\n        Code: 'DP_Data',\r\n        Supplier_Name: \"VR_Data\",\r\n        Supplier_Ref_No: \"NV_Data\",\r\n        Value:\"V_Data\"\r\n    }\r\n];\r\n\r\nconst useStyles = makeStyles((theme : Theme) => createStyles({\r\n    NominalVatableReceipt: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    NVtitle: {\r\n        fontSize: \"20px\",\r\n        fontWeight: \"bold\"\r\n    },\r\n    NVFieldWrapper: {\r\n        padding: \"10px 0\"\r\n    },\r\n    NVlabel: {\r\n        lineHeight: \"30px\",\r\n        paddingRight: theme.spacing(2)\r\n    },\r\n    NVformWrapper: {\r\n        paddingTop: theme.spacing(2)\r\n    },\r\n    NVtable: {\r\n        width: \"100%\"\r\n    },\r\n    buttonWrapper: {\r\n        margin: theme.spacing(0.5)\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n    wdtset: {\r\n        width: \"150px\"\r\n    }\r\n}));\r\n\r\nfunction ViewPurchaseOrderForStockItem() {\r\n    const classes = useStyles();\r\n\r\n    const [selectedDate,\r\n        setSelectedDate] = React.useState < Date | null > (new Date());\r\n\r\n    const [value,\r\n        setValue] = React.useState(0);\r\n\r\n    const handleDateChange = (date : Date | null) => {\r\n        setSelectedDate(date);\r\n    };\r\n    return (\r\n        <div>\r\n\r\n            <Typography\r\n                        className={classes.NVtitle}\r\n                        style={{\r\n                        margin: '10px'\r\n                    }}>Selection Criteria\r\n                    </Typography>\r\n\r\n\r\n            <div\r\n                className=\"row\"\r\n                style={{\r\n                display: 'flex'\r\n            }}>\r\n                <div\r\n                    className=\"col\"\r\n                    style={{\r\n                    width: \"50%\"\r\n                }}>\r\n                    \r\n                    <FormControl className={classes.formControl}>\r\n                        <div className={classes.NVFieldWrapper}>\r\n                            <label\r\n                                style={{\r\n                                paddingRight: \"\"\r\n                            }}\r\n                                className={classes.NVlabel}>Code :\r\n                            </label>\r\n                            <Select\r\n                                className={classes.wdtset}\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\">\r\n                                <MenuItem value={1}>\r\n                                    one\r\n                                </MenuItem>\r\n\r\n                                <MenuItem value={1}>\r\n                                    two\r\n                                </MenuItem>\r\n\r\n                            </Select>\r\n                        </div>\r\n</FormControl>\r\n\r\n                    \r\n\r\n                    \r\n                </div>\r\n                <div\r\n                    className=\"col\"\r\n                    style={{\r\n                    width: \"50%\"}}>\r\n                    \r\n                    <FormControl >\r\n                        <div className={classes.NVFieldWrapper}>\r\n                            <label\r\n                                style={{\r\n                                paddingRight: \"\"\r\n                            }}\r\n                                className={classes.NVlabel}>Name : \r\n                            </label>\r\n                            <Select\r\n                                className={classes.wdtset}\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\">\r\n                                <MenuItem value={1}>\r\n                                    one\r\n                                </MenuItem>\r\n\r\n                                <MenuItem value={1}>\r\n                                    two\r\n                                </MenuItem>\r\n\r\n                            </Select>\r\n                        </div>\r\n                        </FormControl>\r\n                </div>\r\n\r\n                       </div>\r\n\r\n\r\n            <div\r\n                style={{\r\n                maxHeight: 400,\r\n                minHeight: 200,\r\n                width: '100%'\r\n            }}>\r\n\r\n                <Typography\r\n                        className={classes.NVtitle}\r\n                        style={{\r\n                        margin: '10px'\r\n                    }}>All Orders And Returns\r\n                    </Typography>\r\n\r\n                <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection/>\r\n            </div>\r\n\r\n            <div\r\n                className=\"\"\r\n                style={{\r\n                paddingBottom: \"50px\",\r\n                paddingRight: \"30px\",\r\n                paddingTop:\"50px\"\r\n            }}>\r\n                \r\n                <Button variant=\"contained\" className={classes.buttonWrapper}>\r\n                        View\r\n                    </Button>\r\n\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={{\r\n                    float: \"right\"\r\n                }}\r\n                    className={classes.buttonWrapper}>\r\n                    Close\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewPurchaseOrderForStockItem\r\n","E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Enquiry\\PurchaseDocuments.tsx",["1471","1472","1473","1474","1475","1476","1477","1478","1479","1480","1481","1482","1483","1484","1485","1486","1487","1488","1489","1490","1491","1492","1493"],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Enquiry\\PurchaseDocumentLineEnquiry.tsx",["1494","1495","1496","1497","1498","1499","1500","1501","1502","1503","1504","1505","1506","1507","1508","1509","1510","1511","1512","1513","1514","1515","1516","1517","1518","1519","1520","1521","1522","1523","1524"],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Enquiry\\PurchaseInvoiceAndCredit.tsx",["1525","1526","1527","1528","1529","1530","1531","1532","1533","1534","1535"],"E:\\sage_clone\\jan_warehouse\\src\\templates\\dashboard\\purchase-orders\\Enquiry\\ViewPurchaseReturn.tsx",["1536","1537","1538","1539","1540"],{"ruleId":"1541","replacedBy":"1542"},{"ruleId":"1543","replacedBy":"1544"},{"ruleId":"1545","severity":1,"message":"1546","line":8,"column":8,"nodeType":"1547","messageId":"1548","endLine":8,"endColumn":12},{"ruleId":"1545","severity":1,"message":"1549","line":9,"column":8,"nodeType":"1547","messageId":"1548","endLine":9,"endColumn":12},{"ruleId":"1541","replacedBy":"1550"},{"ruleId":"1543","replacedBy":"1551"},{"ruleId":"1541","replacedBy":"1552"},{"ruleId":"1543","replacedBy":"1553"},{"ruleId":"1541","replacedBy":"1554"},{"ruleId":"1543","replacedBy":"1555"},{"ruleId":"1541","replacedBy":"1556"},{"ruleId":"1543","replacedBy":"1557"},{"ruleId":"1545","severity":1,"message":"1558","line":17,"column":34,"nodeType":"1547","messageId":"1548","endLine":17,"endColumn":52},{"ruleId":"1545","severity":1,"message":"1558","line":17,"column":34,"nodeType":"1547","messageId":"1548","endLine":17,"endColumn":52},{"ruleId":"1541","replacedBy":"1559"},{"ruleId":"1543","replacedBy":"1560"},{"ruleId":"1545","severity":1,"message":"1561","line":6,"column":8,"nodeType":"1547","messageId":"1548","endLine":6,"endColumn":20},{"ruleId":"1545","severity":1,"message":"1562","line":16,"column":8,"nodeType":"1547","messageId":"1548","endLine":16,"endColumn":20},{"ruleId":"1545","severity":1,"message":"1563","line":17,"column":9,"nodeType":"1547","messageId":"1548","endLine":17,"endColumn":32},{"ruleId":"1545","severity":1,"message":"1558","line":17,"column":34,"nodeType":"1547","messageId":"1548","endLine":17,"endColumn":52},{"ruleId":"1545","severity":1,"message":"1564","line":17,"column":54,"nodeType":"1547","messageId":"1548","endLine":17,"endColumn":72},{"ruleId":"1545","severity":1,"message":"1565","line":19,"column":7,"nodeType":"1547","messageId":"1548","endLine":19,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1566","line":93,"column":12,"nodeType":"1547","messageId":"1548","endLine":93,"endColumn":24},{"ruleId":"1545","severity":1,"message":"1567","line":96,"column":11,"nodeType":"1547","messageId":"1548","endLine":96,"endColumn":27},{"ruleId":"1545","severity":1,"message":"1568","line":100,"column":12,"nodeType":"1547","messageId":"1548","endLine":100,"endColumn":23},{"ruleId":"1545","severity":1,"message":"1569","line":102,"column":11,"nodeType":"1547","messageId":"1548","endLine":102,"endColumn":23},{"ruleId":"1545","severity":1,"message":"1558","line":374,"column":3,"nodeType":"1547","messageId":"1548","endLine":374,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1570","line":469,"column":7,"nodeType":"1547","messageId":"1548","endLine":469,"endColumn":11},{"ruleId":"1545","severity":1,"message":"1571","line":10,"column":8,"nodeType":"1547","messageId":"1548","endLine":10,"endColumn":17},{"ruleId":"1545","severity":1,"message":"1561","line":11,"column":8,"nodeType":"1547","messageId":"1548","endLine":11,"endColumn":20},{"ruleId":"1545","severity":1,"message":"1562","line":21,"column":8,"nodeType":"1547","messageId":"1548","endLine":21,"endColumn":20},{"ruleId":"1545","severity":1,"message":"1563","line":23,"column":3,"nodeType":"1547","messageId":"1548","endLine":23,"endColumn":26},{"ruleId":"1545","severity":1,"message":"1558","line":24,"column":3,"nodeType":"1547","messageId":"1548","endLine":24,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1564","line":25,"column":3,"nodeType":"1547","messageId":"1548","endLine":25,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1565","line":28,"column":7,"nodeType":"1547","messageId":"1548","endLine":28,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1566","line":134,"column":10,"nodeType":"1547","messageId":"1548","endLine":134,"endColumn":22},{"ruleId":"1545","severity":1,"message":"1567","line":138,"column":9,"nodeType":"1547","messageId":"1548","endLine":138,"endColumn":25},{"ruleId":"1545","severity":1,"message":"1568","line":142,"column":10,"nodeType":"1547","messageId":"1548","endLine":142,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1569","line":143,"column":9,"nodeType":"1547","messageId":"1548","endLine":143,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1572","line":8,"column":8,"nodeType":"1547","messageId":"1548","endLine":8,"endColumn":19},{"ruleId":"1545","severity":1,"message":"1573","line":9,"column":8,"nodeType":"1547","messageId":"1548","endLine":9,"endColumn":18},{"ruleId":"1545","severity":1,"message":"1574","line":44,"column":9,"nodeType":"1547","messageId":"1548","endLine":44,"endColumn":14},{"ruleId":"1545","severity":1,"message":"1574","line":44,"column":9,"nodeType":"1547","messageId":"1548","endLine":44,"endColumn":14},{"ruleId":"1545","severity":1,"message":"1561","line":11,"column":8,"nodeType":"1547","messageId":"1548","endLine":11,"endColumn":20},{"ruleId":"1545","severity":1,"message":"1573","line":15,"column":23,"nodeType":"1547","messageId":"1548","endLine":15,"endColumn":33},{"ruleId":"1545","severity":1,"message":"1565","line":17,"column":7,"nodeType":"1547","messageId":"1548","endLine":17,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1570","line":112,"column":7,"nodeType":"1547","messageId":"1548","endLine":112,"endColumn":11},{"ruleId":"1545","severity":1,"message":"1566","line":130,"column":10,"nodeType":"1547","messageId":"1548","endLine":130,"endColumn":22},{"ruleId":"1545","severity":1,"message":"1567","line":134,"column":9,"nodeType":"1547","messageId":"1548","endLine":134,"endColumn":25},{"ruleId":"1545","severity":1,"message":"1568","line":138,"column":10,"nodeType":"1547","messageId":"1548","endLine":138,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1561","line":11,"column":8,"nodeType":"1547","messageId":"1548","endLine":11,"endColumn":20},{"ruleId":"1545","severity":1,"message":"1573","line":15,"column":23,"nodeType":"1547","messageId":"1548","endLine":15,"endColumn":33},{"ruleId":"1545","severity":1,"message":"1565","line":17,"column":7,"nodeType":"1547","messageId":"1548","endLine":17,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1570","line":112,"column":7,"nodeType":"1547","messageId":"1548","endLine":112,"endColumn":11},{"ruleId":"1545","severity":1,"message":"1566","line":130,"column":10,"nodeType":"1547","messageId":"1548","endLine":130,"endColumn":22},{"ruleId":"1545","severity":1,"message":"1567","line":134,"column":9,"nodeType":"1547","messageId":"1548","endLine":134,"endColumn":25},{"ruleId":"1545","severity":1,"message":"1568","line":138,"column":10,"nodeType":"1547","messageId":"1548","endLine":138,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1562","line":15,"column":8,"nodeType":"1547","messageId":"1548","endLine":15,"endColumn":20},{"ruleId":"1545","severity":1,"message":"1563","line":17,"column":3,"nodeType":"1547","messageId":"1548","endLine":17,"endColumn":26},{"ruleId":"1545","severity":1,"message":"1558","line":18,"column":3,"nodeType":"1547","messageId":"1548","endLine":18,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1564","line":19,"column":3,"nodeType":"1547","messageId":"1548","endLine":19,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1570","line":113,"column":7,"nodeType":"1547","messageId":"1548","endLine":113,"endColumn":11},{"ruleId":"1545","severity":1,"message":"1566","line":131,"column":10,"nodeType":"1547","messageId":"1548","endLine":131,"endColumn":22},{"ruleId":"1545","severity":1,"message":"1567","line":135,"column":9,"nodeType":"1547","messageId":"1548","endLine":135,"endColumn":25},{"ruleId":"1545","severity":1,"message":"1562","line":22,"column":8,"nodeType":"1547","messageId":"1548","endLine":22,"endColumn":20},{"ruleId":"1545","severity":1,"message":"1563","line":24,"column":3,"nodeType":"1547","messageId":"1548","endLine":24,"endColumn":26},{"ruleId":"1545","severity":1,"message":"1558","line":25,"column":3,"nodeType":"1547","messageId":"1548","endLine":25,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1564","line":26,"column":3,"nodeType":"1547","messageId":"1548","endLine":26,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1566","line":138,"column":10,"nodeType":"1547","messageId":"1548","endLine":138,"endColumn":22},{"ruleId":"1545","severity":1,"message":"1567","line":142,"column":9,"nodeType":"1547","messageId":"1548","endLine":142,"endColumn":25},{"ruleId":"1541","replacedBy":"1575"},{"ruleId":"1543","replacedBy":"1576"},{"ruleId":"1541","replacedBy":"1577"},{"ruleId":"1543","replacedBy":"1578"},{"ruleId":"1541","replacedBy":"1579"},{"ruleId":"1543","replacedBy":"1580"},{"ruleId":"1545","severity":1,"message":"1581","line":5,"column":8,"nodeType":"1547","messageId":"1548","endLine":5,"endColumn":16},{"ruleId":"1545","severity":1,"message":"1582","line":6,"column":8,"nodeType":"1547","messageId":"1548","endLine":6,"endColumn":14},{"ruleId":"1545","severity":1,"message":"1583","line":6,"column":27,"nodeType":"1547","messageId":"1548","endLine":6,"endColumn":44},{"ruleId":"1545","severity":1,"message":"1584","line":7,"column":8,"nodeType":"1547","messageId":"1548","endLine":7,"endColumn":18},{"ruleId":"1545","severity":1,"message":"1585","line":164,"column":9,"nodeType":"1547","messageId":"1548","endLine":164,"endColumn":19},{"ruleId":"1545","severity":1,"message":"1585","line":115,"column":9,"nodeType":"1547","messageId":"1548","endLine":115,"endColumn":19},{"ruleId":"1545","severity":1,"message":"1584","line":3,"column":187,"nodeType":"1547","messageId":"1548","endLine":3,"endColumn":197},{"ruleId":"1545","severity":1,"message":"1586","line":6,"column":8,"nodeType":"1547","messageId":"1548","endLine":6,"endColumn":15},{"ruleId":"1545","severity":1,"message":"1587","line":1,"column":17,"nodeType":"1547","messageId":"1548","endLine":1,"endColumn":25},{"ruleId":"1588","severity":1,"message":"1589","line":40,"column":6,"nodeType":"1547","messageId":"1590","endLine":40,"endColumn":22},{"ruleId":"1591","severity":1,"message":"1592","line":63,"column":18,"nodeType":"1593","messageId":"1594","endLine":63,"endColumn":20},{"ruleId":"1595","severity":1,"message":"1596","line":64,"column":20,"nodeType":"1597","endLine":64,"endColumn":34},{"ruleId":"1591","severity":1,"message":"1592","line":66,"column":23,"nodeType":"1593","messageId":"1594","endLine":66,"endColumn":25},{"ruleId":"1591","severity":1,"message":"1592","line":69,"column":23,"nodeType":"1593","messageId":"1594","endLine":69,"endColumn":25},{"ruleId":"1595","severity":1,"message":"1598","line":70,"column":20,"nodeType":"1597","endLine":70,"endColumn":44},{"ruleId":"1545","severity":1,"message":"1558","line":17,"column":34,"nodeType":"1547","messageId":"1548","endLine":17,"endColumn":52},{"ruleId":"1545","severity":1,"message":"1571","line":10,"column":8,"nodeType":"1547","messageId":"1548","endLine":10,"endColumn":17},{"ruleId":"1545","severity":1,"message":"1561","line":11,"column":8,"nodeType":"1547","messageId":"1548","endLine":11,"endColumn":20},{"ruleId":"1545","severity":1,"message":"1562","line":21,"column":8,"nodeType":"1547","messageId":"1548","endLine":21,"endColumn":20},{"ruleId":"1545","severity":1,"message":"1563","line":23,"column":3,"nodeType":"1547","messageId":"1548","endLine":23,"endColumn":26},{"ruleId":"1545","severity":1,"message":"1558","line":24,"column":3,"nodeType":"1547","messageId":"1548","endLine":24,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1564","line":25,"column":3,"nodeType":"1547","messageId":"1548","endLine":25,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1565","line":28,"column":7,"nodeType":"1547","messageId":"1548","endLine":28,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1566","line":134,"column":10,"nodeType":"1547","messageId":"1548","endLine":134,"endColumn":22},{"ruleId":"1545","severity":1,"message":"1567","line":138,"column":9,"nodeType":"1547","messageId":"1548","endLine":138,"endColumn":25},{"ruleId":"1545","severity":1,"message":"1568","line":142,"column":10,"nodeType":"1547","messageId":"1548","endLine":142,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1569","line":143,"column":9,"nodeType":"1547","messageId":"1548","endLine":143,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1571","line":10,"column":8,"nodeType":"1547","messageId":"1548","endLine":10,"endColumn":17},{"ruleId":"1545","severity":1,"message":"1561","line":11,"column":8,"nodeType":"1547","messageId":"1548","endLine":11,"endColumn":20},{"ruleId":"1545","severity":1,"message":"1562","line":22,"column":8,"nodeType":"1547","messageId":"1548","endLine":22,"endColumn":20},{"ruleId":"1545","severity":1,"message":"1563","line":24,"column":3,"nodeType":"1547","messageId":"1548","endLine":24,"endColumn":26},{"ruleId":"1545","severity":1,"message":"1558","line":25,"column":3,"nodeType":"1547","messageId":"1548","endLine":25,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1564","line":26,"column":3,"nodeType":"1547","messageId":"1548","endLine":26,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1565","line":29,"column":7,"nodeType":"1547","messageId":"1548","endLine":29,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1566","line":135,"column":10,"nodeType":"1547","messageId":"1548","endLine":135,"endColumn":22},{"ruleId":"1545","severity":1,"message":"1567","line":139,"column":9,"nodeType":"1547","messageId":"1548","endLine":139,"endColumn":25},{"ruleId":"1545","severity":1,"message":"1568","line":143,"column":10,"nodeType":"1547","messageId":"1548","endLine":143,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1569","line":144,"column":9,"nodeType":"1547","messageId":"1548","endLine":144,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1562","line":15,"column":8,"nodeType":"1547","messageId":"1548","endLine":15,"endColumn":20},{"ruleId":"1545","severity":1,"message":"1563","line":17,"column":3,"nodeType":"1547","messageId":"1548","endLine":17,"endColumn":26},{"ruleId":"1545","severity":1,"message":"1558","line":18,"column":3,"nodeType":"1547","messageId":"1548","endLine":18,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1564","line":19,"column":3,"nodeType":"1547","messageId":"1548","endLine":19,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1570","line":113,"column":7,"nodeType":"1547","messageId":"1548","endLine":113,"endColumn":11},{"ruleId":"1545","severity":1,"message":"1566","line":131,"column":10,"nodeType":"1547","messageId":"1548","endLine":131,"endColumn":22},{"ruleId":"1545","severity":1,"message":"1567","line":135,"column":9,"nodeType":"1547","messageId":"1548","endLine":135,"endColumn":25},{"ruleId":"1545","severity":1,"message":"1561","line":11,"column":8,"nodeType":"1547","messageId":"1548","endLine":11,"endColumn":20},{"ruleId":"1545","severity":1,"message":"1573","line":15,"column":23,"nodeType":"1547","messageId":"1548","endLine":15,"endColumn":33},{"ruleId":"1545","severity":1,"message":"1565","line":17,"column":7,"nodeType":"1547","messageId":"1548","endLine":17,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1570","line":112,"column":7,"nodeType":"1547","messageId":"1548","endLine":112,"endColumn":11},{"ruleId":"1545","severity":1,"message":"1566","line":130,"column":10,"nodeType":"1547","messageId":"1548","endLine":130,"endColumn":22},{"ruleId":"1545","severity":1,"message":"1567","line":134,"column":9,"nodeType":"1547","messageId":"1548","endLine":134,"endColumn":25},{"ruleId":"1545","severity":1,"message":"1568","line":138,"column":10,"nodeType":"1547","messageId":"1548","endLine":138,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1561","line":11,"column":8,"nodeType":"1547","messageId":"1548","endLine":11,"endColumn":20},{"ruleId":"1545","severity":1,"message":"1573","line":15,"column":23,"nodeType":"1547","messageId":"1548","endLine":15,"endColumn":33},{"ruleId":"1545","severity":1,"message":"1565","line":17,"column":7,"nodeType":"1547","messageId":"1548","endLine":17,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1570","line":112,"column":7,"nodeType":"1547","messageId":"1548","endLine":112,"endColumn":11},{"ruleId":"1545","severity":1,"message":"1566","line":130,"column":10,"nodeType":"1547","messageId":"1548","endLine":130,"endColumn":22},{"ruleId":"1545","severity":1,"message":"1567","line":134,"column":9,"nodeType":"1547","messageId":"1548","endLine":134,"endColumn":25},{"ruleId":"1545","severity":1,"message":"1568","line":138,"column":10,"nodeType":"1547","messageId":"1548","endLine":138,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1561","line":11,"column":8,"nodeType":"1547","messageId":"1548","endLine":11,"endColumn":20},{"ruleId":"1545","severity":1,"message":"1573","line":15,"column":23,"nodeType":"1547","messageId":"1548","endLine":15,"endColumn":33},{"ruleId":"1545","severity":1,"message":"1565","line":17,"column":7,"nodeType":"1547","messageId":"1548","endLine":17,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1570","line":112,"column":7,"nodeType":"1547","messageId":"1548","endLine":112,"endColumn":11},{"ruleId":"1545","severity":1,"message":"1566","line":130,"column":10,"nodeType":"1547","messageId":"1548","endLine":130,"endColumn":22},{"ruleId":"1545","severity":1,"message":"1567","line":134,"column":9,"nodeType":"1547","messageId":"1548","endLine":134,"endColumn":25},{"ruleId":"1545","severity":1,"message":"1568","line":138,"column":10,"nodeType":"1547","messageId":"1548","endLine":138,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1599","line":199,"column":17,"nodeType":"1547","messageId":"1548","endLine":199,"endColumn":25},{"ruleId":"1545","severity":1,"message":"1600","line":7,"column":8,"nodeType":"1547","messageId":"1548","endLine":7,"endColumn":16},{"ruleId":"1545","severity":1,"message":"1583","line":8,"column":27,"nodeType":"1547","messageId":"1548","endLine":8,"endColumn":44},{"ruleId":"1591","severity":1,"message":"1601","line":34,"column":34,"nodeType":"1593","messageId":"1594","endLine":34,"endColumn":36},{"ruleId":"1591","severity":1,"message":"1592","line":48,"column":35,"nodeType":"1593","messageId":"1594","endLine":48,"endColumn":37},{"ruleId":"1591","severity":1,"message":"1592","line":50,"column":43,"nodeType":"1593","messageId":"1594","endLine":50,"endColumn":45},{"ruleId":"1591","severity":1,"message":"1592","line":68,"column":35,"nodeType":"1593","messageId":"1594","endLine":68,"endColumn":37},{"ruleId":"1591","severity":1,"message":"1592","line":86,"column":35,"nodeType":"1593","messageId":"1594","endLine":86,"endColumn":37},{"ruleId":"1602","severity":1,"message":"1603","line":244,"column":39,"nodeType":"1604","messageId":"1605","endLine":244,"endColumn":70},{"ruleId":"1545","severity":1,"message":"1558","line":17,"column":34,"nodeType":"1547","messageId":"1548","endLine":17,"endColumn":52},{"ruleId":"1545","severity":1,"message":"1561","line":11,"column":8,"nodeType":"1547","messageId":"1548","endLine":11,"endColumn":20},{"ruleId":"1545","severity":1,"message":"1573","line":15,"column":23,"nodeType":"1547","messageId":"1548","endLine":15,"endColumn":33},{"ruleId":"1545","severity":1,"message":"1565","line":17,"column":7,"nodeType":"1547","messageId":"1548","endLine":17,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1570","line":112,"column":7,"nodeType":"1547","messageId":"1548","endLine":112,"endColumn":11},{"ruleId":"1545","severity":1,"message":"1566","line":130,"column":10,"nodeType":"1547","messageId":"1548","endLine":130,"endColumn":22},{"ruleId":"1545","severity":1,"message":"1567","line":134,"column":9,"nodeType":"1547","messageId":"1548","endLine":134,"endColumn":25},{"ruleId":"1545","severity":1,"message":"1568","line":138,"column":10,"nodeType":"1547","messageId":"1548","endLine":138,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1571","line":5,"column":8,"nodeType":"1547","messageId":"1548","endLine":5,"endColumn":17},{"ruleId":"1545","severity":1,"message":"1561","line":6,"column":8,"nodeType":"1547","messageId":"1548","endLine":6,"endColumn":20},{"ruleId":"1545","severity":1,"message":"1562","line":16,"column":8,"nodeType":"1547","messageId":"1548","endLine":16,"endColumn":20},{"ruleId":"1545","severity":1,"message":"1563","line":17,"column":9,"nodeType":"1547","messageId":"1548","endLine":17,"endColumn":32},{"ruleId":"1545","severity":1,"message":"1558","line":17,"column":34,"nodeType":"1547","messageId":"1548","endLine":17,"endColumn":52},{"ruleId":"1545","severity":1,"message":"1564","line":17,"column":54,"nodeType":"1547","messageId":"1548","endLine":17,"endColumn":72},{"ruleId":"1545","severity":1,"message":"1565","line":19,"column":7,"nodeType":"1547","messageId":"1548","endLine":19,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1566","line":93,"column":12,"nodeType":"1547","messageId":"1548","endLine":93,"endColumn":24},{"ruleId":"1545","severity":1,"message":"1567","line":96,"column":11,"nodeType":"1547","messageId":"1548","endLine":96,"endColumn":27},{"ruleId":"1545","severity":1,"message":"1568","line":100,"column":12,"nodeType":"1547","messageId":"1548","endLine":100,"endColumn":23},{"ruleId":"1545","severity":1,"message":"1569","line":102,"column":11,"nodeType":"1547","messageId":"1548","endLine":102,"endColumn":23},{"ruleId":"1545","severity":1,"message":"1558","line":18,"column":3,"nodeType":"1547","messageId":"1548","endLine":18,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1570","line":113,"column":7,"nodeType":"1547","messageId":"1548","endLine":113,"endColumn":11},{"ruleId":"1545","severity":1,"message":"1606","line":2,"column":10,"nodeType":"1547","messageId":"1548","endLine":2,"endColumn":22},{"ruleId":"1545","severity":1,"message":"1607","line":2,"column":36,"nodeType":"1547","messageId":"1548","endLine":2,"endColumn":41},{"ruleId":"1545","severity":1,"message":"1608","line":2,"column":43,"nodeType":"1547","messageId":"1548","endLine":2,"endColumn":53},{"ruleId":"1545","severity":1,"message":"1600","line":3,"column":62,"nodeType":"1547","messageId":"1548","endLine":3,"endColumn":70},{"ruleId":"1545","severity":1,"message":"1609","line":3,"column":72,"nodeType":"1547","messageId":"1548","endLine":3,"endColumn":88},{"ruleId":"1545","severity":1,"message":"1610","line":3,"column":90,"nodeType":"1547","messageId":"1548","endLine":3,"endColumn":95},{"ruleId":"1545","severity":1,"message":"1611","line":3,"column":97,"nodeType":"1547","messageId":"1548","endLine":3,"endColumn":106},{"ruleId":"1545","severity":1,"message":"1612","line":3,"column":119,"nodeType":"1547","messageId":"1548","endLine":3,"endColumn":133},{"ruleId":"1545","severity":1,"message":"1613","line":3,"column":156,"nodeType":"1547","messageId":"1548","endLine":3,"endColumn":167},{"ruleId":"1545","severity":1,"message":"1584","line":3,"column":187,"nodeType":"1547","messageId":"1548","endLine":3,"endColumn":197},{"ruleId":"1545","severity":1,"message":"1614","line":4,"column":22,"nodeType":"1547","messageId":"1548","endLine":4,"endColumn":29},{"ruleId":"1545","severity":1,"message":"1600","line":7,"column":8,"nodeType":"1547","messageId":"1548","endLine":7,"endColumn":16},{"ruleId":"1545","severity":1,"message":"1615","line":10,"column":8,"nodeType":"1547","messageId":"1548","endLine":10,"endColumn":14},{"ruleId":"1545","severity":1,"message":"1616","line":9,"column":8,"nodeType":"1547","messageId":"1548","endLine":9,"endColumn":23},{"ruleId":"1545","severity":1,"message":"1571","line":4,"column":8,"nodeType":"1547","messageId":"1548","endLine":4,"endColumn":17},{"ruleId":"1545","severity":1,"message":"1600","line":7,"column":8,"nodeType":"1547","messageId":"1548","endLine":7,"endColumn":16},{"ruleId":"1545","severity":1,"message":"1615","line":9,"column":8,"nodeType":"1547","messageId":"1548","endLine":9,"endColumn":14},{"ruleId":"1545","severity":1,"message":"1571","line":4,"column":8,"nodeType":"1547","messageId":"1548","endLine":4,"endColumn":17},{"ruleId":"1545","severity":1,"message":"1581","line":5,"column":8,"nodeType":"1547","messageId":"1548","endLine":5,"endColumn":16},{"ruleId":"1545","severity":1,"message":"1600","line":7,"column":8,"nodeType":"1547","messageId":"1548","endLine":7,"endColumn":16},{"ruleId":"1545","severity":1,"message":"1587","line":1,"column":17,"nodeType":"1547","messageId":"1548","endLine":1,"endColumn":25},{"ruleId":"1545","severity":1,"message":"1600","line":7,"column":8,"nodeType":"1547","messageId":"1548","endLine":7,"endColumn":16},{"ruleId":"1545","severity":1,"message":"1606","line":2,"column":10,"nodeType":"1547","messageId":"1548","endLine":2,"endColumn":22},{"ruleId":"1545","severity":1,"message":"1607","line":2,"column":36,"nodeType":"1547","messageId":"1548","endLine":2,"endColumn":41},{"ruleId":"1545","severity":1,"message":"1608","line":2,"column":43,"nodeType":"1547","messageId":"1548","endLine":2,"endColumn":53},{"ruleId":"1545","severity":1,"message":"1600","line":3,"column":62,"nodeType":"1547","messageId":"1548","endLine":3,"endColumn":70},{"ruleId":"1545","severity":1,"message":"1609","line":3,"column":72,"nodeType":"1547","messageId":"1548","endLine":3,"endColumn":88},{"ruleId":"1545","severity":1,"message":"1610","line":3,"column":90,"nodeType":"1547","messageId":"1548","endLine":3,"endColumn":95},{"ruleId":"1545","severity":1,"message":"1611","line":3,"column":97,"nodeType":"1547","messageId":"1548","endLine":3,"endColumn":106},{"ruleId":"1545","severity":1,"message":"1612","line":3,"column":119,"nodeType":"1547","messageId":"1548","endLine":3,"endColumn":133},{"ruleId":"1545","severity":1,"message":"1613","line":3,"column":156,"nodeType":"1547","messageId":"1548","endLine":3,"endColumn":167},{"ruleId":"1545","severity":1,"message":"1584","line":3,"column":187,"nodeType":"1547","messageId":"1548","endLine":3,"endColumn":197},{"ruleId":"1545","severity":1,"message":"1610","line":15,"column":8,"nodeType":"1547","messageId":"1548","endLine":15,"endColumn":13},{"ruleId":"1545","severity":1,"message":"1611","line":16,"column":8,"nodeType":"1547","messageId":"1548","endLine":16,"endColumn":17},{"ruleId":"1545","severity":1,"message":"1617","line":17,"column":8,"nodeType":"1547","messageId":"1548","endLine":17,"endColumn":17},{"ruleId":"1545","severity":1,"message":"1612","line":18,"column":8,"nodeType":"1547","messageId":"1548","endLine":18,"endColumn":22},{"ruleId":"1545","severity":1,"message":"1618","line":19,"column":8,"nodeType":"1547","messageId":"1548","endLine":19,"endColumn":17},{"ruleId":"1545","severity":1,"message":"1619","line":20,"column":8,"nodeType":"1547","messageId":"1548","endLine":20,"endColumn":16},{"ruleId":"1545","severity":1,"message":"1620","line":21,"column":8,"nodeType":"1547","messageId":"1548","endLine":21,"endColumn":13},{"ruleId":"1545","severity":1,"message":"1562","line":22,"column":8,"nodeType":"1547","messageId":"1548","endLine":22,"endColumn":20},{"ruleId":"1545","severity":1,"message":"1563","line":24,"column":3,"nodeType":"1547","messageId":"1548","endLine":24,"endColumn":26},{"ruleId":"1545","severity":1,"message":"1558","line":25,"column":3,"nodeType":"1547","messageId":"1548","endLine":25,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1564","line":26,"column":3,"nodeType":"1547","messageId":"1548","endLine":26,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1570","line":120,"column":7,"nodeType":"1547","messageId":"1548","endLine":120,"endColumn":11},{"ruleId":"1545","severity":1,"message":"1566","line":138,"column":10,"nodeType":"1547","messageId":"1548","endLine":138,"endColumn":22},{"ruleId":"1545","severity":1,"message":"1567","line":142,"column":9,"nodeType":"1547","messageId":"1548","endLine":142,"endColumn":25},{"ruleId":"1545","severity":1,"message":"1562","line":15,"column":8,"nodeType":"1547","messageId":"1548","endLine":15,"endColumn":20},{"ruleId":"1545","severity":1,"message":"1563","line":17,"column":3,"nodeType":"1547","messageId":"1548","endLine":17,"endColumn":26},{"ruleId":"1545","severity":1,"message":"1558","line":18,"column":3,"nodeType":"1547","messageId":"1548","endLine":18,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1564","line":19,"column":3,"nodeType":"1547","messageId":"1548","endLine":19,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1570","line":113,"column":7,"nodeType":"1547","messageId":"1548","endLine":113,"endColumn":11},{"ruleId":"1545","severity":1,"message":"1566","line":131,"column":10,"nodeType":"1547","messageId":"1548","endLine":131,"endColumn":22},{"ruleId":"1545","severity":1,"message":"1567","line":135,"column":9,"nodeType":"1547","messageId":"1548","endLine":135,"endColumn":25},{"ruleId":"1545","severity":1,"message":"1621","line":3,"column":8,"nodeType":"1547","messageId":"1548","endLine":3,"endColumn":18},{"ruleId":"1545","severity":1,"message":"1599","line":202,"column":17,"nodeType":"1547","messageId":"1548","endLine":202,"endColumn":25},{"ruleId":"1545","severity":1,"message":"1571","line":4,"column":8,"nodeType":"1547","messageId":"1548","endLine":4,"endColumn":17},{"ruleId":"1545","severity":1,"message":"1581","line":5,"column":8,"nodeType":"1547","messageId":"1548","endLine":5,"endColumn":16},{"ruleId":"1545","severity":1,"message":"1600","line":7,"column":8,"nodeType":"1547","messageId":"1548","endLine":7,"endColumn":16},{"ruleId":"1541","replacedBy":"1622"},{"ruleId":"1543","replacedBy":"1623"},{"ruleId":"1545","severity":1,"message":"1561","line":6,"column":8,"nodeType":"1547","messageId":"1548","endLine":6,"endColumn":20},{"ruleId":"1545","severity":1,"message":"1558","line":17,"column":34,"nodeType":"1547","messageId":"1548","endLine":17,"endColumn":52},{"ruleId":"1545","severity":1,"message":"1565","line":19,"column":7,"nodeType":"1547","messageId":"1548","endLine":19,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1568","line":100,"column":12,"nodeType":"1547","messageId":"1548","endLine":100,"endColumn":23},{"ruleId":"1545","severity":1,"message":"1569","line":102,"column":11,"nodeType":"1547","messageId":"1548","endLine":102,"endColumn":23},{"ruleId":"1545","severity":1,"message":"1561","line":11,"column":8,"nodeType":"1547","messageId":"1548","endLine":11,"endColumn":20},{"ruleId":"1545","severity":1,"message":"1573","line":15,"column":23,"nodeType":"1547","messageId":"1548","endLine":15,"endColumn":33},{"ruleId":"1545","severity":1,"message":"1565","line":17,"column":7,"nodeType":"1547","messageId":"1548","endLine":17,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1570","line":112,"column":7,"nodeType":"1547","messageId":"1548","endLine":112,"endColumn":11},{"ruleId":"1545","severity":1,"message":"1566","line":130,"column":10,"nodeType":"1547","messageId":"1548","endLine":130,"endColumn":22},{"ruleId":"1545","severity":1,"message":"1567","line":134,"column":9,"nodeType":"1547","messageId":"1548","endLine":134,"endColumn":25},{"ruleId":"1545","severity":1,"message":"1568","line":138,"column":10,"nodeType":"1547","messageId":"1548","endLine":138,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1587","line":1,"column":17,"nodeType":"1547","messageId":"1548","endLine":1,"endColumn":25},{"ruleId":"1545","severity":1,"message":"1558","line":17,"column":34,"nodeType":"1547","messageId":"1548","endLine":17,"endColumn":52},{"ruleId":"1545","severity":1,"message":"1561","line":11,"column":8,"nodeType":"1547","messageId":"1548","endLine":11,"endColumn":20},{"ruleId":"1545","severity":1,"message":"1573","line":15,"column":23,"nodeType":"1547","messageId":"1548","endLine":15,"endColumn":33},{"ruleId":"1545","severity":1,"message":"1565","line":17,"column":7,"nodeType":"1547","messageId":"1548","endLine":17,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1570","line":112,"column":7,"nodeType":"1547","messageId":"1548","endLine":112,"endColumn":11},{"ruleId":"1545","severity":1,"message":"1566","line":130,"column":10,"nodeType":"1547","messageId":"1548","endLine":130,"endColumn":22},{"ruleId":"1545","severity":1,"message":"1567","line":134,"column":9,"nodeType":"1547","messageId":"1548","endLine":134,"endColumn":25},{"ruleId":"1545","severity":1,"message":"1568","line":138,"column":10,"nodeType":"1547","messageId":"1548","endLine":138,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1571","line":4,"column":8,"nodeType":"1547","messageId":"1548","endLine":4,"endColumn":17},{"ruleId":"1545","severity":1,"message":"1585","line":116,"column":9,"nodeType":"1547","messageId":"1548","endLine":116,"endColumn":19},{"ruleId":"1545","severity":1,"message":"1581","line":5,"column":8,"nodeType":"1547","messageId":"1548","endLine":5,"endColumn":16},{"ruleId":"1545","severity":1,"message":"1582","line":6,"column":8,"nodeType":"1547","messageId":"1548","endLine":6,"endColumn":14},{"ruleId":"1545","severity":1,"message":"1600","line":7,"column":8,"nodeType":"1547","messageId":"1548","endLine":7,"endColumn":16},{"ruleId":"1545","severity":1,"message":"1572","line":8,"column":8,"nodeType":"1547","messageId":"1548","endLine":8,"endColumn":19},{"ruleId":"1545","severity":1,"message":"1608","line":3,"column":42,"nodeType":"1547","messageId":"1548","endLine":3,"endColumn":52},{"ruleId":"1545","severity":1,"message":"1558","line":5,"column":34,"nodeType":"1547","messageId":"1548","endLine":5,"endColumn":52},{"ruleId":"1545","severity":1,"message":"1608","line":2,"column":42,"nodeType":"1547","messageId":"1548","endLine":2,"endColumn":52},{"ruleId":"1624","severity":1,"message":"1625","line":126,"column":11,"nodeType":"1597","endLine":126,"endColumn":50},{"ruleId":"1624","severity":1,"message":"1625","line":127,"column":11,"nodeType":"1597","endLine":127,"endColumn":50},{"ruleId":"1624","severity":1,"message":"1625","line":128,"column":11,"nodeType":"1597","endLine":128,"endColumn":50},{"ruleId":"1624","severity":1,"message":"1625","line":129,"column":11,"nodeType":"1597","endLine":129,"endColumn":50},{"ruleId":"1624","severity":1,"message":"1625","line":130,"column":11,"nodeType":"1597","endLine":130,"endColumn":50},{"ruleId":"1624","severity":1,"message":"1625","line":131,"column":11,"nodeType":"1597","endLine":131,"endColumn":50},{"ruleId":"1624","severity":1,"message":"1625","line":132,"column":11,"nodeType":"1597","endLine":132,"endColumn":50},{"ruleId":"1624","severity":1,"message":"1625","line":133,"column":11,"nodeType":"1597","endLine":133,"endColumn":50},{"ruleId":"1545","severity":1,"message":"1562","line":22,"column":8,"nodeType":"1547","messageId":"1548","endLine":22,"endColumn":20},{"ruleId":"1545","severity":1,"message":"1563","line":24,"column":3,"nodeType":"1547","messageId":"1548","endLine":24,"endColumn":26},{"ruleId":"1545","severity":1,"message":"1558","line":25,"column":3,"nodeType":"1547","messageId":"1548","endLine":25,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1564","line":26,"column":3,"nodeType":"1547","messageId":"1548","endLine":26,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1566","line":138,"column":10,"nodeType":"1547","messageId":"1548","endLine":138,"endColumn":22},{"ruleId":"1545","severity":1,"message":"1567","line":142,"column":9,"nodeType":"1547","messageId":"1548","endLine":142,"endColumn":25},{"ruleId":"1545","severity":1,"message":"1583","line":2,"column":28,"nodeType":"1547","messageId":"1548","endLine":2,"endColumn":45},{"ruleId":"1545","severity":1,"message":"1608","line":3,"column":42,"nodeType":"1547","messageId":"1548","endLine":3,"endColumn":52},{"ruleId":"1624","severity":1,"message":"1625","line":49,"column":11,"nodeType":"1597","endLine":49,"endColumn":50},{"ruleId":"1624","severity":1,"message":"1625","line":50,"column":11,"nodeType":"1597","endLine":50,"endColumn":50},{"ruleId":"1624","severity":1,"message":"1625","line":51,"column":11,"nodeType":"1597","endLine":51,"endColumn":50},{"ruleId":"1624","severity":1,"message":"1625","line":52,"column":11,"nodeType":"1597","endLine":52,"endColumn":50},{"ruleId":"1624","severity":1,"message":"1625","line":53,"column":11,"nodeType":"1597","endLine":53,"endColumn":50},{"ruleId":"1624","severity":1,"message":"1625","line":54,"column":11,"nodeType":"1597","endLine":54,"endColumn":50},{"ruleId":"1545","severity":1,"message":"1583","line":2,"column":28,"nodeType":"1547","messageId":"1548","endLine":2,"endColumn":45},{"ruleId":"1545","severity":1,"message":"1608","line":3,"column":42,"nodeType":"1547","messageId":"1548","endLine":3,"endColumn":52},{"ruleId":"1624","severity":1,"message":"1625","line":95,"column":11,"nodeType":"1597","endLine":95,"endColumn":50},{"ruleId":"1624","severity":1,"message":"1625","line":96,"column":11,"nodeType":"1597","endLine":96,"endColumn":50},{"ruleId":"1624","severity":1,"message":"1625","line":97,"column":11,"nodeType":"1597","endLine":97,"endColumn":50},{"ruleId":"1624","severity":1,"message":"1625","line":98,"column":11,"nodeType":"1597","endLine":98,"endColumn":50},{"ruleId":"1545","severity":1,"message":"1608","line":2,"column":42,"nodeType":"1547","messageId":"1548","endLine":2,"endColumn":52},{"ruleId":"1624","severity":1,"message":"1625","line":123,"column":11,"nodeType":"1597","endLine":123,"endColumn":50},{"ruleId":"1624","severity":1,"message":"1625","line":124,"column":11,"nodeType":"1597","endLine":124,"endColumn":50},{"ruleId":"1624","severity":1,"message":"1625","line":125,"column":11,"nodeType":"1597","endLine":125,"endColumn":50},{"ruleId":"1624","severity":1,"message":"1625","line":126,"column":11,"nodeType":"1597","endLine":126,"endColumn":50},{"ruleId":"1545","severity":1,"message":"1583","line":2,"column":28,"nodeType":"1547","messageId":"1548","endLine":2,"endColumn":45},{"ruleId":"1545","severity":1,"message":"1608","line":3,"column":42,"nodeType":"1547","messageId":"1548","endLine":3,"endColumn":52},{"ruleId":"1624","severity":1,"message":"1625","line":54,"column":11,"nodeType":"1597","endLine":54,"endColumn":50},{"ruleId":"1624","severity":1,"message":"1625","line":55,"column":11,"nodeType":"1597","endLine":55,"endColumn":50},{"ruleId":"1624","severity":1,"message":"1625","line":56,"column":11,"nodeType":"1597","endLine":56,"endColumn":50},{"ruleId":"1624","severity":1,"message":"1625","line":57,"column":11,"nodeType":"1597","endLine":57,"endColumn":50},{"ruleId":"1624","severity":1,"message":"1625","line":58,"column":11,"nodeType":"1597","endLine":58,"endColumn":50},{"ruleId":"1624","severity":1,"message":"1625","line":59,"column":11,"nodeType":"1597","endLine":59,"endColumn":50},{"ruleId":"1545","severity":1,"message":"1571","line":10,"column":8,"nodeType":"1547","messageId":"1548","endLine":10,"endColumn":17},{"ruleId":"1545","severity":1,"message":"1561","line":11,"column":8,"nodeType":"1547","messageId":"1548","endLine":11,"endColumn":20},{"ruleId":"1545","severity":1,"message":"1562","line":21,"column":8,"nodeType":"1547","messageId":"1548","endLine":21,"endColumn":20},{"ruleId":"1545","severity":1,"message":"1563","line":23,"column":3,"nodeType":"1547","messageId":"1548","endLine":23,"endColumn":26},{"ruleId":"1545","severity":1,"message":"1558","line":24,"column":3,"nodeType":"1547","messageId":"1548","endLine":24,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1564","line":25,"column":3,"nodeType":"1547","messageId":"1548","endLine":25,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1565","line":28,"column":7,"nodeType":"1547","messageId":"1548","endLine":28,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1566","line":134,"column":10,"nodeType":"1547","messageId":"1548","endLine":134,"endColumn":22},{"ruleId":"1545","severity":1,"message":"1567","line":138,"column":9,"nodeType":"1547","messageId":"1548","endLine":138,"endColumn":25},{"ruleId":"1545","severity":1,"message":"1568","line":142,"column":10,"nodeType":"1547","messageId":"1548","endLine":142,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1569","line":143,"column":9,"nodeType":"1547","messageId":"1548","endLine":143,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1583","line":7,"column":27,"nodeType":"1547","messageId":"1548","endLine":7,"endColumn":44},{"ruleId":"1545","severity":1,"message":"1558","line":9,"column":34,"nodeType":"1547","messageId":"1548","endLine":9,"endColumn":52},{"ruleId":"1545","severity":1,"message":"1626","line":99,"column":12,"nodeType":"1547","messageId":"1548","endLine":99,"endColumn":17},{"ruleId":"1545","severity":1,"message":"1627","line":100,"column":9,"nodeType":"1547","messageId":"1548","endLine":100,"endColumn":17},{"ruleId":"1545","severity":1,"message":"1608","line":3,"column":42,"nodeType":"1547","messageId":"1548","endLine":3,"endColumn":52},{"ruleId":"1545","severity":1,"message":"1583","line":7,"column":27,"nodeType":"1547","messageId":"1548","endLine":7,"endColumn":44},{"ruleId":"1545","severity":1,"message":"1558","line":9,"column":34,"nodeType":"1547","messageId":"1548","endLine":9,"endColumn":52},{"ruleId":"1545","severity":1,"message":"1626","line":106,"column":12,"nodeType":"1547","messageId":"1548","endLine":106,"endColumn":17},{"ruleId":"1545","severity":1,"message":"1627","line":107,"column":9,"nodeType":"1547","messageId":"1548","endLine":107,"endColumn":17},{"ruleId":"1545","severity":1,"message":"1608","line":3,"column":42,"nodeType":"1547","messageId":"1548","endLine":3,"endColumn":52},{"ruleId":"1545","severity":1,"message":"1583","line":7,"column":27,"nodeType":"1547","messageId":"1548","endLine":7,"endColumn":44},{"ruleId":"1545","severity":1,"message":"1558","line":9,"column":34,"nodeType":"1547","messageId":"1548","endLine":9,"endColumn":52},{"ruleId":"1545","severity":1,"message":"1626","line":106,"column":12,"nodeType":"1547","messageId":"1548","endLine":106,"endColumn":17},{"ruleId":"1545","severity":1,"message":"1627","line":107,"column":9,"nodeType":"1547","messageId":"1548","endLine":107,"endColumn":17},{"ruleId":"1545","severity":1,"message":"1571","line":8,"column":8,"nodeType":"1547","messageId":"1548","endLine":8,"endColumn":17},{"ruleId":"1545","severity":1,"message":"1563","line":9,"column":9,"nodeType":"1547","messageId":"1548","endLine":9,"endColumn":32},{"ruleId":"1545","severity":1,"message":"1564","line":9,"column":34,"nodeType":"1547","messageId":"1548","endLine":9,"endColumn":52},{"ruleId":"1545","severity":1,"message":"1562","line":10,"column":8,"nodeType":"1547","messageId":"1548","endLine":10,"endColumn":20},{"ruleId":"1545","severity":1,"message":"1566","line":103,"column":12,"nodeType":"1547","messageId":"1548","endLine":103,"endColumn":24},{"ruleId":"1545","severity":1,"message":"1567","line":107,"column":11,"nodeType":"1547","messageId":"1548","endLine":107,"endColumn":27},{"ruleId":"1545","severity":1,"message":"1583","line":7,"column":27,"nodeType":"1547","messageId":"1548","endLine":7,"endColumn":44},{"ruleId":"1545","severity":1,"message":"1558","line":9,"column":34,"nodeType":"1547","messageId":"1548","endLine":9,"endColumn":52},{"ruleId":"1545","severity":1,"message":"1626","line":99,"column":12,"nodeType":"1547","messageId":"1548","endLine":99,"endColumn":17},{"ruleId":"1545","severity":1,"message":"1627","line":100,"column":9,"nodeType":"1547","messageId":"1548","endLine":100,"endColumn":17},{"ruleId":"1545","severity":1,"message":"1608","line":3,"column":42,"nodeType":"1547","messageId":"1548","endLine":3,"endColumn":52},{"ruleId":"1545","severity":1,"message":"1583","line":7,"column":27,"nodeType":"1547","messageId":"1548","endLine":7,"endColumn":44},{"ruleId":"1545","severity":1,"message":"1558","line":9,"column":34,"nodeType":"1547","messageId":"1548","endLine":9,"endColumn":52},{"ruleId":"1545","severity":1,"message":"1626","line":101,"column":12,"nodeType":"1547","messageId":"1548","endLine":101,"endColumn":17},{"ruleId":"1545","severity":1,"message":"1627","line":102,"column":9,"nodeType":"1547","messageId":"1548","endLine":102,"endColumn":17},{"ruleId":"1545","severity":1,"message":"1608","line":3,"column":42,"nodeType":"1547","messageId":"1548","endLine":3,"endColumn":52},{"ruleId":"1545","severity":1,"message":"1583","line":7,"column":27,"nodeType":"1547","messageId":"1548","endLine":7,"endColumn":44},{"ruleId":"1545","severity":1,"message":"1558","line":9,"column":34,"nodeType":"1547","messageId":"1548","endLine":9,"endColumn":52},{"ruleId":"1545","severity":1,"message":"1626","line":101,"column":12,"nodeType":"1547","messageId":"1548","endLine":101,"endColumn":17},{"ruleId":"1545","severity":1,"message":"1627","line":102,"column":9,"nodeType":"1547","messageId":"1548","endLine":102,"endColumn":17},{"ruleId":"1545","severity":1,"message":"1608","line":3,"column":42,"nodeType":"1547","messageId":"1548","endLine":3,"endColumn":52},{"ruleId":"1545","severity":1,"message":"1581","line":4,"column":8,"nodeType":"1547","messageId":"1548","endLine":4,"endColumn":16},{"ruleId":"1545","severity":1,"message":"1572","line":5,"column":8,"nodeType":"1547","messageId":"1548","endLine":5,"endColumn":19},{"ruleId":"1545","severity":1,"message":"1582","line":6,"column":8,"nodeType":"1547","messageId":"1548","endLine":6,"endColumn":14},{"ruleId":"1545","severity":1,"message":"1583","line":7,"column":27,"nodeType":"1547","messageId":"1548","endLine":7,"endColumn":44},{"ruleId":"1545","severity":1,"message":"1563","line":9,"column":9,"nodeType":"1547","messageId":"1548","endLine":9,"endColumn":32},{"ruleId":"1545","severity":1,"message":"1558","line":9,"column":34,"nodeType":"1547","messageId":"1548","endLine":9,"endColumn":52},{"ruleId":"1545","severity":1,"message":"1564","line":9,"column":54,"nodeType":"1547","messageId":"1548","endLine":9,"endColumn":72},{"ruleId":"1545","severity":1,"message":"1562","line":10,"column":8,"nodeType":"1547","messageId":"1548","endLine":10,"endColumn":20},{"ruleId":"1545","severity":1,"message":"1628","line":13,"column":20,"nodeType":"1547","messageId":"1548","endLine":13,"endColumn":33},{"ruleId":"1545","severity":1,"message":"1566","line":117,"column":12,"nodeType":"1547","messageId":"1548","endLine":117,"endColumn":24},{"ruleId":"1545","severity":1,"message":"1626","line":120,"column":12,"nodeType":"1547","messageId":"1548","endLine":120,"endColumn":17},{"ruleId":"1545","severity":1,"message":"1627","line":121,"column":9,"nodeType":"1547","messageId":"1548","endLine":121,"endColumn":17},{"ruleId":"1545","severity":1,"message":"1567","line":123,"column":11,"nodeType":"1547","messageId":"1548","endLine":123,"endColumn":27},{"ruleId":"1545","severity":1,"message":"1608","line":3,"column":42,"nodeType":"1547","messageId":"1548","endLine":3,"endColumn":52},{"ruleId":"1545","severity":1,"message":"1583","line":6,"column":27,"nodeType":"1547","messageId":"1548","endLine":6,"endColumn":44},{"ruleId":"1545","severity":1,"message":"1558","line":8,"column":34,"nodeType":"1547","messageId":"1548","endLine":8,"endColumn":52},{"ruleId":"1545","severity":1,"message":"1569","line":79,"column":9,"nodeType":"1547","messageId":"1548","endLine":79,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1626","line":86,"column":12,"nodeType":"1547","messageId":"1548","endLine":86,"endColumn":17},{"ruleId":"1545","severity":1,"message":"1627","line":87,"column":9,"nodeType":"1547","messageId":"1548","endLine":87,"endColumn":17},{"ruleId":"1545","severity":1,"message":"1608","line":2,"column":42,"nodeType":"1547","messageId":"1548","endLine":2,"endColumn":52},{"ruleId":"1624","severity":1,"message":"1625","line":96,"column":11,"nodeType":"1597","endLine":96,"endColumn":50},{"ruleId":"1624","severity":1,"message":"1625","line":97,"column":11,"nodeType":"1597","endLine":97,"endColumn":50},{"ruleId":"1624","severity":1,"message":"1625","line":98,"column":11,"nodeType":"1597","endLine":98,"endColumn":50},{"ruleId":"1624","severity":1,"message":"1625","line":99,"column":11,"nodeType":"1597","endLine":99,"endColumn":50},{"ruleId":"1624","severity":1,"message":"1625","line":100,"column":11,"nodeType":"1597","endLine":100,"endColumn":50},{"ruleId":"1624","severity":1,"message":"1625","line":101,"column":11,"nodeType":"1597","endLine":101,"endColumn":50},{"ruleId":"1545","severity":1,"message":"1608","line":2,"column":42,"nodeType":"1547","messageId":"1548","endLine":2,"endColumn":52},{"ruleId":"1624","severity":1,"message":"1625","line":99,"column":11,"nodeType":"1597","endLine":99,"endColumn":50},{"ruleId":"1624","severity":1,"message":"1625","line":100,"column":9,"nodeType":"1597","endLine":100,"endColumn":48},{"ruleId":"1624","severity":1,"message":"1625","line":101,"column":11,"nodeType":"1597","endLine":101,"endColumn":50},{"ruleId":"1624","severity":1,"message":"1625","line":102,"column":11,"nodeType":"1597","endLine":102,"endColumn":50},{"ruleId":"1624","severity":1,"message":"1625","line":103,"column":11,"nodeType":"1597","endLine":103,"endColumn":50},{"ruleId":"1545","severity":1,"message":"1608","line":2,"column":42,"nodeType":"1547","messageId":"1548","endLine":2,"endColumn":52},{"ruleId":"1624","severity":1,"message":"1625","line":93,"column":11,"nodeType":"1597","endLine":93,"endColumn":50},{"ruleId":"1624","severity":1,"message":"1625","line":94,"column":11,"nodeType":"1597","endLine":94,"endColumn":50},{"ruleId":"1624","severity":1,"message":"1625","line":95,"column":11,"nodeType":"1597","endLine":95,"endColumn":50},{"ruleId":"1624","severity":1,"message":"1625","line":96,"column":9,"nodeType":"1597","endLine":96,"endColumn":48},{"ruleId":"1624","severity":1,"message":"1625","line":97,"column":11,"nodeType":"1597","endLine":97,"endColumn":50},{"ruleId":"1624","severity":1,"message":"1625","line":98,"column":11,"nodeType":"1597","endLine":98,"endColumn":50},{"ruleId":"1624","severity":1,"message":"1625","line":99,"column":11,"nodeType":"1597","endLine":99,"endColumn":50},{"ruleId":"1595","severity":1,"message":"1629","line":9,"column":13,"nodeType":"1597","endLine":9,"endColumn":25},{"ruleId":"1545","severity":1,"message":"1571","line":5,"column":8,"nodeType":"1547","messageId":"1548","endLine":5,"endColumn":17},{"ruleId":"1545","severity":1,"message":"1561","line":6,"column":8,"nodeType":"1547","messageId":"1548","endLine":6,"endColumn":20},{"ruleId":"1545","severity":1,"message":"1562","line":16,"column":8,"nodeType":"1547","messageId":"1548","endLine":16,"endColumn":20},{"ruleId":"1545","severity":1,"message":"1563","line":17,"column":9,"nodeType":"1547","messageId":"1548","endLine":17,"endColumn":32},{"ruleId":"1545","severity":1,"message":"1558","line":17,"column":34,"nodeType":"1547","messageId":"1548","endLine":17,"endColumn":52},{"ruleId":"1545","severity":1,"message":"1564","line":17,"column":54,"nodeType":"1547","messageId":"1548","endLine":17,"endColumn":72},{"ruleId":"1545","severity":1,"message":"1565","line":19,"column":7,"nodeType":"1547","messageId":"1548","endLine":19,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1566","line":93,"column":12,"nodeType":"1547","messageId":"1548","endLine":93,"endColumn":24},{"ruleId":"1545","severity":1,"message":"1567","line":96,"column":11,"nodeType":"1547","messageId":"1548","endLine":96,"endColumn":27},{"ruleId":"1545","severity":1,"message":"1568","line":100,"column":12,"nodeType":"1547","messageId":"1548","endLine":100,"endColumn":23},{"ruleId":"1545","severity":1,"message":"1569","line":102,"column":11,"nodeType":"1547","messageId":"1548","endLine":102,"endColumn":23},{"ruleId":"1545","severity":1,"message":"1583","line":2,"column":28,"nodeType":"1547","messageId":"1548","endLine":2,"endColumn":45},{"ruleId":"1545","severity":1,"message":"1608","line":3,"column":42,"nodeType":"1547","messageId":"1548","endLine":3,"endColumn":52},{"ruleId":"1624","severity":1,"message":"1625","line":95,"column":11,"nodeType":"1597","endLine":95,"endColumn":50},{"ruleId":"1624","severity":1,"message":"1625","line":96,"column":11,"nodeType":"1597","endLine":96,"endColumn":50},{"ruleId":"1624","severity":1,"message":"1625","line":97,"column":11,"nodeType":"1597","endLine":97,"endColumn":50},{"ruleId":"1624","severity":1,"message":"1625","line":98,"column":11,"nodeType":"1597","endLine":98,"endColumn":50},{"ruleId":"1545","severity":1,"message":"1600","line":7,"column":8,"nodeType":"1547","messageId":"1548","endLine":7,"endColumn":16},{"ruleId":"1545","severity":1,"message":"1583","line":2,"column":27,"nodeType":"1547","messageId":"1548","endLine":2,"endColumn":44},{"ruleId":"1624","severity":1,"message":"1625","line":142,"column":17,"nodeType":"1597","endLine":142,"endColumn":56},{"ruleId":"1624","severity":1,"message":"1625","line":143,"column":17,"nodeType":"1597","endLine":143,"endColumn":56},{"ruleId":"1624","severity":1,"message":"1625","line":144,"column":17,"nodeType":"1597","endLine":144,"endColumn":56},{"ruleId":"1624","severity":1,"message":"1625","line":145,"column":17,"nodeType":"1597","endLine":145,"endColumn":56},{"ruleId":"1624","severity":1,"message":"1625","line":146,"column":17,"nodeType":"1597","endLine":146,"endColumn":56},{"ruleId":"1545","severity":1,"message":"1583","line":9,"column":27,"nodeType":"1547","messageId":"1548","endLine":9,"endColumn":44},{"ruleId":"1545","severity":1,"message":"1583","line":9,"column":27,"nodeType":"1547","messageId":"1548","endLine":9,"endColumn":44},{"ruleId":"1545","severity":1,"message":"1583","line":7,"column":27,"nodeType":"1547","messageId":"1548","endLine":7,"endColumn":44},{"ruleId":"1545","severity":1,"message":"1558","line":9,"column":34,"nodeType":"1547","messageId":"1548","endLine":9,"endColumn":52},{"ruleId":"1595","severity":1,"message":"1630","line":8,"column":13,"nodeType":"1597","endLine":8,"endColumn":23},{"ruleId":"1595","severity":1,"message":"1631","line":9,"column":13,"nodeType":"1597","endLine":9,"endColumn":24},{"ruleId":"1545","severity":1,"message":"1561","line":11,"column":8,"nodeType":"1547","messageId":"1548","endLine":11,"endColumn":20},{"ruleId":"1545","severity":1,"message":"1573","line":15,"column":23,"nodeType":"1547","messageId":"1548","endLine":15,"endColumn":33},{"ruleId":"1545","severity":1,"message":"1565","line":17,"column":7,"nodeType":"1547","messageId":"1548","endLine":17,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1570","line":112,"column":7,"nodeType":"1547","messageId":"1548","endLine":112,"endColumn":11},{"ruleId":"1545","severity":1,"message":"1566","line":130,"column":10,"nodeType":"1547","messageId":"1548","endLine":130,"endColumn":22},{"ruleId":"1545","severity":1,"message":"1567","line":134,"column":9,"nodeType":"1547","messageId":"1548","endLine":134,"endColumn":25},{"ruleId":"1545","severity":1,"message":"1568","line":138,"column":10,"nodeType":"1547","messageId":"1548","endLine":138,"endColumn":21},{"ruleId":"1545","severity":1,"message":"1583","line":7,"column":27,"nodeType":"1547","messageId":"1548","endLine":7,"endColumn":44},{"ruleId":"1545","severity":1,"message":"1558","line":9,"column":34,"nodeType":"1547","messageId":"1548","endLine":9,"endColumn":52},{"ruleId":"1545","severity":1,"message":"1626","line":106,"column":12,"nodeType":"1547","messageId":"1548","endLine":106,"endColumn":17},{"ruleId":"1545","severity":1,"message":"1627","line":107,"column":9,"nodeType":"1547","messageId":"1548","endLine":107,"endColumn":17},{"ruleId":"1595","severity":1,"message":"1632","line":8,"column":13,"nodeType":"1597","endLine":8,"endColumn":24},{"ruleId":"1595","severity":1,"message":"1633","line":9,"column":13,"nodeType":"1597","endLine":9,"endColumn":24},{"ruleId":"1545","severity":1,"message":"1558","line":7,"column":34,"nodeType":"1547","messageId":"1548","endLine":7,"endColumn":52},{"ruleId":"1545","severity":1,"message":"1583","line":10,"column":27,"nodeType":"1547","messageId":"1548","endLine":10,"endColumn":44},{"ruleId":"1545","severity":1,"message":"1558","line":7,"column":34,"nodeType":"1547","messageId":"1548","endLine":7,"endColumn":52},{"ruleId":"1545","severity":1,"message":"1583","line":10,"column":27,"nodeType":"1547","messageId":"1548","endLine":10,"endColumn":44},{"ruleId":"1545","severity":1,"message":"1608","line":3,"column":42,"nodeType":"1547","messageId":"1548","endLine":3,"endColumn":52},{"ruleId":"1545","severity":1,"message":"1583","line":7,"column":27,"nodeType":"1547","messageId":"1548","endLine":7,"endColumn":44},{"ruleId":"1545","severity":1,"message":"1558","line":9,"column":34,"nodeType":"1547","messageId":"1548","endLine":9,"endColumn":52},{"ruleId":"1545","severity":1,"message":"1626","line":106,"column":12,"nodeType":"1547","messageId":"1548","endLine":106,"endColumn":17},{"ruleId":"1545","severity":1,"message":"1627","line":107,"column":9,"nodeType":"1547","messageId":"1548","endLine":107,"endColumn":17},{"ruleId":"1545","severity":1,"message":"1608","line":3,"column":42,"nodeType":"1547","messageId":"1548","endLine":3,"endColumn":52},{"ruleId":"1545","severity":1,"message":"1583","line":7,"column":27,"nodeType":"1547","messageId":"1548","endLine":7,"endColumn":44},{"ruleId":"1545","severity":1,"message":"1571","line":8,"column":8,"nodeType":"1547","messageId":"1548","endLine":8,"endColumn":17},{"ruleId":"1545","severity":1,"message":"1563","line":9,"column":9,"nodeType":"1547","messageId":"1548","endLine":9,"endColumn":32},{"ruleId":"1545","severity":1,"message":"1558","line":9,"column":34,"nodeType":"1547","messageId":"1548","endLine":9,"endColumn":52},{"ruleId":"1545","severity":1,"message":"1564","line":9,"column":54,"nodeType":"1547","messageId":"1548","endLine":9,"endColumn":72},{"ruleId":"1545","severity":1,"message":"1562","line":10,"column":8,"nodeType":"1547","messageId":"1548","endLine":10,"endColumn":20},{"ruleId":"1545","severity":1,"message":"1566","line":109,"column":12,"nodeType":"1547","messageId":"1548","endLine":109,"endColumn":24},{"ruleId":"1545","severity":1,"message":"1626","line":112,"column":12,"nodeType":"1547","messageId":"1548","endLine":112,"endColumn":17},{"ruleId":"1545","severity":1,"message":"1627","line":113,"column":9,"nodeType":"1547","messageId":"1548","endLine":113,"endColumn":17},{"ruleId":"1545","severity":1,"message":"1567","line":115,"column":11,"nodeType":"1547","messageId":"1548","endLine":115,"endColumn":27},{"ruleId":"1545","severity":1,"message":"1583","line":2,"column":27,"nodeType":"1547","messageId":"1548","endLine":2,"endColumn":44},{"ruleId":"1545","severity":1,"message":"1608","line":3,"column":42,"nodeType":"1547","messageId":"1548","endLine":3,"endColumn":52},{"ruleId":"1545","severity":1,"message":"1634","line":7,"column":8,"nodeType":"1547","messageId":"1548","endLine":7,"endColumn":22},{"ruleId":"1591","severity":1,"message":"1592","line":184,"column":12,"nodeType":"1593","messageId":"1594","endLine":184,"endColumn":14},{"ruleId":"1591","severity":1,"message":"1592","line":311,"column":17,"nodeType":"1593","messageId":"1594","endLine":311,"endColumn":19},{"ruleId":"1591","severity":1,"message":"1592","line":380,"column":17,"nodeType":"1593","messageId":"1594","endLine":380,"endColumn":19},{"ruleId":"1591","severity":1,"message":"1592","line":434,"column":17,"nodeType":"1593","messageId":"1594","endLine":434,"endColumn":19},{"ruleId":"1624","severity":1,"message":"1625","line":442,"column":17,"nodeType":"1597","endLine":442,"endColumn":52},{"ruleId":"1624","severity":1,"message":"1625","line":443,"column":17,"nodeType":"1597","endLine":443,"endColumn":52},{"ruleId":"1624","severity":1,"message":"1625","line":444,"column":17,"nodeType":"1597","endLine":444,"endColumn":52},{"ruleId":"1624","severity":1,"message":"1625","line":445,"column":17,"nodeType":"1597","endLine":445,"endColumn":52},{"ruleId":"1591","severity":1,"message":"1592","line":461,"column":17,"nodeType":"1593","messageId":"1594","endLine":461,"endColumn":19},{"ruleId":"1591","severity":1,"message":"1592","line":575,"column":17,"nodeType":"1593","messageId":"1594","endLine":575,"endColumn":19},{"ruleId":"1624","severity":1,"message":"1625","line":583,"column":17,"nodeType":"1597","endLine":583,"endColumn":52},{"ruleId":"1624","severity":1,"message":"1625","line":584,"column":17,"nodeType":"1597","endLine":584,"endColumn":52},{"ruleId":"1624","severity":1,"message":"1625","line":585,"column":17,"nodeType":"1597","endLine":585,"endColumn":52},{"ruleId":"1624","severity":1,"message":"1625","line":586,"column":17,"nodeType":"1597","endLine":586,"endColumn":52},{"ruleId":"1624","severity":1,"message":"1625","line":614,"column":17,"nodeType":"1597","endLine":614,"endColumn":52},{"ruleId":"1624","severity":1,"message":"1625","line":615,"column":17,"nodeType":"1597","endLine":615,"endColumn":52},{"ruleId":"1624","severity":1,"message":"1625","line":616,"column":17,"nodeType":"1597","endLine":616,"endColumn":52},{"ruleId":"1624","severity":1,"message":"1625","line":617,"column":17,"nodeType":"1597","endLine":617,"endColumn":52},{"ruleId":"1624","severity":1,"message":"1625","line":618,"column":17,"nodeType":"1597","endLine":618,"endColumn":52},{"ruleId":"1624","severity":1,"message":"1625","line":619,"column":17,"nodeType":"1597","endLine":619,"endColumn":52},{"ruleId":"1545","severity":1,"message":"1583","line":2,"column":27,"nodeType":"1547","messageId":"1548","endLine":2,"endColumn":44},{"ruleId":"1545","severity":1,"message":"1608","line":3,"column":42,"nodeType":"1547","messageId":"1548","endLine":3,"endColumn":52},{"ruleId":"1545","severity":1,"message":"1634","line":7,"column":8,"nodeType":"1547","messageId":"1548","endLine":7,"endColumn":22},{"ruleId":"1591","severity":1,"message":"1592","line":282,"column":12,"nodeType":"1593","messageId":"1594","endLine":282,"endColumn":14},{"ruleId":"1624","severity":1,"message":"1625","line":290,"column":17,"nodeType":"1597","endLine":290,"endColumn":52},{"ruleId":"1624","severity":1,"message":"1625","line":291,"column":17,"nodeType":"1597","endLine":291,"endColumn":52},{"ruleId":"1624","severity":1,"message":"1625","line":292,"column":17,"nodeType":"1597","endLine":292,"endColumn":52},{"ruleId":"1624","severity":1,"message":"1625","line":293,"column":17,"nodeType":"1597","endLine":293,"endColumn":52},{"ruleId":"1591","severity":1,"message":"1592","line":309,"column":17,"nodeType":"1593","messageId":"1594","endLine":309,"endColumn":19},{"ruleId":"1624","severity":1,"message":"1625","line":317,"column":17,"nodeType":"1597","endLine":317,"endColumn":52},{"ruleId":"1624","severity":1,"message":"1625","line":318,"column":17,"nodeType":"1597","endLine":318,"endColumn":52},{"ruleId":"1624","severity":1,"message":"1625","line":319,"column":17,"nodeType":"1597","endLine":319,"endColumn":52},{"ruleId":"1624","severity":1,"message":"1625","line":320,"column":17,"nodeType":"1597","endLine":320,"endColumn":52},{"ruleId":"1591","severity":1,"message":"1592","line":335,"column":17,"nodeType":"1593","messageId":"1594","endLine":335,"endColumn":19},{"ruleId":"1624","severity":1,"message":"1625","line":343,"column":17,"nodeType":"1597","endLine":343,"endColumn":52},{"ruleId":"1624","severity":1,"message":"1625","line":344,"column":17,"nodeType":"1597","endLine":344,"endColumn":52},{"ruleId":"1624","severity":1,"message":"1625","line":345,"column":17,"nodeType":"1597","endLine":345,"endColumn":52},{"ruleId":"1624","severity":1,"message":"1625","line":346,"column":17,"nodeType":"1597","endLine":346,"endColumn":52},{"ruleId":"1591","severity":1,"message":"1592","line":361,"column":17,"nodeType":"1593","messageId":"1594","endLine":361,"endColumn":19},{"ruleId":"1591","severity":1,"message":"1592","line":430,"column":17,"nodeType":"1593","messageId":"1594","endLine":430,"endColumn":19},{"ruleId":"1591","severity":1,"message":"1592","line":658,"column":17,"nodeType":"1593","messageId":"1594","endLine":658,"endColumn":19},{"ruleId":"1624","severity":1,"message":"1625","line":666,"column":17,"nodeType":"1597","endLine":666,"endColumn":52},{"ruleId":"1624","severity":1,"message":"1625","line":667,"column":17,"nodeType":"1597","endLine":667,"endColumn":52},{"ruleId":"1624","severity":1,"message":"1625","line":668,"column":17,"nodeType":"1597","endLine":668,"endColumn":52},{"ruleId":"1624","severity":1,"message":"1625","line":669,"column":17,"nodeType":"1597","endLine":669,"endColumn":52},{"ruleId":"1591","severity":1,"message":"1592","line":686,"column":17,"nodeType":"1593","messageId":"1594","endLine":686,"endColumn":19},{"ruleId":"1624","severity":1,"message":"1625","line":702,"column":17,"nodeType":"1597","endLine":702,"endColumn":52},{"ruleId":"1624","severity":1,"message":"1625","line":703,"column":17,"nodeType":"1597","endLine":703,"endColumn":52},{"ruleId":"1624","severity":1,"message":"1625","line":704,"column":17,"nodeType":"1597","endLine":704,"endColumn":52},{"ruleId":"1624","severity":1,"message":"1625","line":705,"column":17,"nodeType":"1597","endLine":705,"endColumn":52},{"ruleId":"1624","severity":1,"message":"1625","line":706,"column":17,"nodeType":"1597","endLine":706,"endColumn":52},{"ruleId":"1545","severity":1,"message":"1583","line":2,"column":27,"nodeType":"1547","messageId":"1548","endLine":2,"endColumn":44},{"ruleId":"1545","severity":1,"message":"1608","line":3,"column":42,"nodeType":"1547","messageId":"1548","endLine":3,"endColumn":52},{"ruleId":"1545","severity":1,"message":"1573","line":5,"column":8,"nodeType":"1547","messageId":"1548","endLine":5,"endColumn":18},{"ruleId":"1545","severity":1,"message":"1581","line":6,"column":8,"nodeType":"1547","messageId":"1548","endLine":6,"endColumn":16},{"ruleId":"1545","severity":1,"message":"1634","line":7,"column":8,"nodeType":"1547","messageId":"1548","endLine":7,"endColumn":22},{"ruleId":"1545","severity":1,"message":"1572","line":8,"column":8,"nodeType":"1547","messageId":"1548","endLine":8,"endColumn":19},{"ruleId":"1545","severity":1,"message":"1582","line":9,"column":8,"nodeType":"1547","messageId":"1548","endLine":9,"endColumn":14},{"ruleId":"1624","severity":1,"message":"1625","line":103,"column":17,"nodeType":"1597","endLine":103,"endColumn":52},{"ruleId":"1624","severity":1,"message":"1625","line":104,"column":17,"nodeType":"1597","endLine":104,"endColumn":52},{"ruleId":"1624","severity":1,"message":"1625","line":105,"column":17,"nodeType":"1597","endLine":105,"endColumn":52},{"ruleId":"1624","severity":1,"message":"1625","line":106,"column":17,"nodeType":"1597","endLine":106,"endColumn":52},{"ruleId":"1545","severity":1,"message":"1608","line":3,"column":42,"nodeType":"1547","messageId":"1548","endLine":3,"endColumn":52},{"ruleId":"1545","severity":1,"message":"1583","line":7,"column":27,"nodeType":"1547","messageId":"1548","endLine":7,"endColumn":44},{"ruleId":"1545","severity":1,"message":"1558","line":9,"column":34,"nodeType":"1547","messageId":"1548","endLine":9,"endColumn":52},{"ruleId":"1545","severity":1,"message":"1626","line":101,"column":12,"nodeType":"1547","messageId":"1548","endLine":101,"endColumn":17},{"ruleId":"1545","severity":1,"message":"1627","line":102,"column":9,"nodeType":"1547","messageId":"1548","endLine":102,"endColumn":17},"no-native-reassign",["1635"],"no-negated-in-lhs",["1636"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Grid' is defined but never used.",["1635"],["1636"],["1635"],["1636"],["1635"],["1636"],["1635"],["1636"],"'KeyboardTimePicker' is defined but never used.",["1635"],["1636"],"'NativeSelect' is defined but never used.","'DateFnsUtils' is defined but never used.","'MuiPickersUtilsProvider' is defined but never used.","'KeyboardDatePicker' is defined but never used.","'BootstrapInput' is assigned a value but never used.","'selectedDate' is assigned a value but never used.","'handleDateChange' is assigned a value but never used.","'bankaccount' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'rows' is assigned a value but never used.","'TextField' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'theme' is assigned a value but never used.",["1635"],["1636"],["1635"],["1636"],["1635"],["1636"],"'MenuItem' is defined but never used.","'Select' is defined but never used.","'ValueGetterParams' is defined but never used.","'IconButton' is defined but never used.","'deleteIcon' is assigned a value but never used.","'AddIcon' is defined but never used.","'useState' is defined but never used.","@typescript-eslint/no-redeclare","'NavItemPropTypes' is already defined.","redeclared","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-pascal-case","Imported JSX component Cost_Center must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component Costcenter_Department must be in PascalCase or SCREAMING_SNAKE_CASE","'setDense' is assigned a value but never used.","'Checkbox' is defined but never used.","Expected '!==' and instead saw '!='.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'createStyles' is defined but never used.","'Theme' is defined but never used.","'withStyles' is defined but never used.","'FormControlLabel' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableContainer' is defined but never used.","'TableFooter' is defined but never used.","'Divider' is defined but never used.","'Button' is defined but never used.","'DescriptionIcon' is defined but never used.","'TableCell' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'Paper' is defined but never used.","'Typography' is defined but never used.",["1635"],["1636"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'CheckboxProps' is defined but never used.","Imported JSX component MPOA_List must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component PR_List must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component PR_Lines must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component AR_Lines must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component RF_Lines must be in PascalCase or SCREAMING_SNAKE_CASE","'FormHelperText' is defined but never used.","no-global-assign","no-unsafe-negation"]